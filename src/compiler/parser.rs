#[allow(non_camel_case_types)]
#[allow(non_upper_case_globals)]

use super::lexer::*;
use lazy_static::lazy_static;
use std::collections::HashMap;

pub type AST = (Box<ASTModule>,);

#[derive(Debug)]
pub enum ASTOpCmpOp {
	Eq(String,),
	Neq(String,),
	Ls(String,),
	LsEq(String,),
	Gt(String,),
	GtEq(String,),
}

#[derive(Debug)]
pub enum ASTAssignment {
	Or(Box<ASTOpOr>,),
	Assign(Box<ASTLeftValue>, String, Box<ASTAssignment>,),
	AssignAdd(Box<ASTLeftValue>, String, Box<ASTAssignment>,),
	AssignSub(Box<ASTLeftValue>, String, Box<ASTAssignment>,),
	AssignMul(Box<ASTLeftValue>, String, Box<ASTAssignment>,),
	AssignDiv(Box<ASTLeftValue>, String, Box<ASTAssignment>,),
	AssignMod(Box<ASTLeftValue>, String, Box<ASTAssignment>,),
	AssignShiftL(Box<ASTLeftValue>, String, Box<ASTAssignment>,),
	AssignShiftR(Box<ASTLeftValue>, String, Box<ASTAssignment>,),
	AssignBitOr(Box<ASTLeftValue>, String, Box<ASTAssignment>,),
	AssignBitAnd(Box<ASTLeftValue>, String, Box<ASTAssignment>,),
	AssignBitXor(Box<ASTLeftValue>, String, Box<ASTAssignment>,),
	AssignBitNot(Box<ASTLeftValue>, String, Box<ASTAssignment>,),
}

#[derive(Debug)]
pub enum ASTOpBitXor {
	BitXor(Box<ASTOpCast>, Option<(Vec<(String, Box<ASTOpCast>,)>,)>,),
}

#[derive(Debug)]
pub enum ASTOpAddsub {
	Add(Box<ASTOpMuldivmod>, Option<(Vec<(String, Box<ASTOpMuldivmod>,)>,)>,),
	Sub(Box<ASTOpMuldivmod>, Option<(Vec<(String, Box<ASTOpMuldivmod>,)>,)>,),
}

#[derive(Debug)]
pub enum ASTOpAnd {
	And(Box<ASTOpCmp>, Option<(Vec<(String, Box<ASTOpCmp>,)>,)>,),
}

#[derive(Debug)]
pub enum ASTForStatement {
	Loop(String, Box<ASTScopeStatement>,),
	While(String, Box<ASTExpression>, Box<ASTScopeStatement>,),
	ForEach(String, String, Option<(Vec<(String, String,)>,)>, String, Box<ASTExpression>, Box<ASTScopeStatement>,),
	LabeledLoop(String, String, String, Box<ASTScopeStatement>,),
	LabeledWhile(String, String, String, Box<ASTExpression>, Box<ASTScopeStatement>,),
	LabeledForEach(String, String, String, String, Option<(Vec<(String, String,)>,)>, String, Box<ASTExpression>, Box<ASTScopeStatement>,),
}

#[derive(Debug)]
pub enum ASTExpression {
	Assignment(Box<ASTAssignment>,),
}

#[derive(Debug)]
pub enum ASTOpShift {
	ShiftL(Box<ASTOpBitOr>, Option<(Vec<(String, Box<ASTOpBitOr>,)>,)>,),
	ShiftR(Box<ASTOpBitOr>, Option<(Vec<(String, Box<ASTOpBitOr>,)>,)>,),
}

#[derive(Debug)]
pub enum ASTType {
	Bool(String,),
	I8(String,),
	I16(String,),
	I32(String,),
	I64(String,),
	I128(String,),
	U8(String,),
	U16(String,),
	U32(String,),
	U64(String,),
	U128(String,),
	F16(String,),
	F32(String,),
	F64(String,),
	Str(String,),
}

#[derive(Debug)]
pub enum ASTOpOr {
	Or(Box<ASTOpAnd>, Option<(Vec<(String, Box<ASTOpAnd>,)>,)>,),
}

#[derive(Debug)]
pub enum ASTStatementList {
	Statement(Option<(Vec<(Box<ASTStatement>,)>,)>,),
}

#[derive(Debug)]
pub enum ASTLeftValue {
	Id(String,),
}

#[derive(Debug)]
pub enum ASTStatement {
	Scope(Box<ASTScopeStatement>,),
	If(Box<ASTIfStatement>,),
	For(Box<ASTForStatement>,),
	Expression(Box<ASTExpression>, String,),
}

#[derive(Debug)]
pub enum ASTScopeStatement {
	Scope(String, Option<(Box<ASTStatementList>,)>, String,),
}

#[derive(Debug)]
pub enum ASTIfStatement {
	If(String, Box<ASTExpression>, Box<ASTScopeStatement>, Option<(Box<ASTElseStatement>,)>,),
}

#[derive(Debug)]
pub enum ASTModule {
	StatementList(Box<ASTStatementList>,),
}

#[derive(Debug)]
pub enum ASTElseStatement {
	Else(String, Box<ASTScopeStatement>,),
	ElseIf(String, Box<ASTIfStatement>,),
}

#[derive(Debug)]
pub enum ASTOpCmp {
	Cmp(Box<ASTOpAddsub>, Option<(Vec<(Box<ASTOpCmpOp>, Box<ASTOpAddsub>,)>,)>,),
}

#[derive(Debug)]
pub enum ASTOpMuldivmod {
	Mul(Box<ASTOpShift>, Option<(Vec<(String, Box<ASTOpShift>,)>,)>,),
	Div(Box<ASTOpShift>, Option<(Vec<(String, Box<ASTOpShift>,)>,)>,),
	Mod(Box<ASTOpShift>, Option<(Vec<(String, Box<ASTOpShift>,)>,)>,),
}

#[derive(Debug)]
pub enum ASTOpBitOr {
	BitOr(Box<ASTOpBitAnd>, Option<(Vec<(String, Box<ASTOpBitAnd>,)>,)>,),
}

#[derive(Debug)]
pub enum ASTOpBitAnd {
	BitAnd(Box<ASTOpBitXor>, Option<(Vec<(String, Box<ASTOpBitXor>,)>,)>,),
}

#[derive(Debug)]
pub enum ASTOpCast {
	Cast(Box<ASTOpSingle>, Option<(Vec<(String, Box<ASTType>,)>,)>,),
}

#[derive(Debug)]
pub enum ASTOpSingle {
	Paren(String, Box<ASTExpression>, String,),
	UnaryAdd(String, Box<ASTOpSingle>,),
	UnarySub(String, Box<ASTOpSingle>,),
	UnaryNot(String, Box<ASTOpSingle>,),
	UnaryBitNot(String, Box<ASTOpSingle>,),
	FunctionCall(Box<ASTFunctionCall>,),
	LeftValue(Box<ASTLeftValue>,),
	Literal(Box<ASTLiteral>,),
}

#[derive(Debug)]
pub enum ASTFunctionCall {
	FunctionCall(String, String, Option<(Box<ASTExpression>, Option<(Vec<(String, Box<ASTExpression>,)>,)>,)>, String,),
}

#[derive(Debug)]
pub enum ASTLiteral {
	Bool(String,),
	Integer(String,),
	Decimal(String,),
	String(String,),
}

#[derive(Debug)]
pub enum RawAST {
    __Token(String),
	Type(RawASTType),
	_OpCmp1(RawAST_OpCmp1),
	Module(RawASTModule),
	OpCast(RawASTOpCast),
	OpSingle(RawASTOpSingle),
	_OpAddsub1(RawAST_OpAddsub1),
	_StatementList1(RawAST_StatementList1),
	OpCmp(RawASTOpCmp),
	ScopeStatement(RawASTScopeStatement),
	IfStatement(RawASTIfStatement),
	Expression(RawASTExpression),
	OpBitOr(RawASTOpBitOr),
	OpBitAnd(RawASTOpBitAnd),
	OpAddsub(RawASTOpAddsub),
	_OpBitAnd1(RawAST_OpBitAnd1),
	_OpAnd1(RawAST_OpAnd1),
	ForStatement(RawASTForStatement),
	OpOr(RawASTOpOr),
	ElseStatement(RawASTElseStatement),
	Literal(RawASTLiteral),
	OpAnd(RawASTOpAnd),
	FunctionCall(RawASTFunctionCall),
	_OpBitOr1(RawAST_OpBitOr1),
	OpShift(RawASTOpShift),
	_OpBitXor1(RawAST_OpBitXor1),
	Assignment(RawASTAssignment),
	Statement(RawASTStatement),
	_ForStatement1(RawAST_ForStatement1),
	_OpOr1(RawAST_OpOr1),
	_OpCast1(RawAST_OpCast1),
	OpCmpOp(RawASTOpCmpOp),
	OpMuldivmod(RawASTOpMuldivmod),
	_Root(RawAST_Root),
	_OpMuldivmod1(RawAST_OpMuldivmod1),
	LeftValue(RawASTLeftValue),
	StatementList(RawASTStatementList),
	_FunctionCall2(RawAST_FunctionCall2),
	OpBitXor(RawASTOpBitXor),
	_OpShift1(RawAST_OpShift1),
}

#[derive(Debug)]
pub enum RawASTType {
	BoolReduce0(String,),
	F16Reduce0(String,),
	F32Reduce0(String,),
	F64Reduce0(String,),
	I128Reduce0(String,),
	I16Reduce0(String,),
	I32Reduce0(String,),
	I64Reduce0(String,),
	I8Reduce0(String,),
	StrReduce0(String,),
	U128Reduce0(String,),
	U16Reduce0(String,),
	U32Reduce0(String,),
	U64Reduce0(String,),
	U8Reduce0(String,),
}

#[derive(Debug)]
pub enum RawAST_OpCmp1 {
	OpCmp1CmpReduce0(Box<RawASTOpCmpOp>, Box<RawASTOpAddsub>,),
	OpCmp1CmpReduce1(Box<RawASTOpCmpOp>, Box<RawASTOpAddsub>, Box<RawAST_OpCmp1>,),
}

#[derive(Debug)]
pub enum RawASTModule {
	StatementListReduce0(Box<RawASTStatementList>,),
}

#[derive(Debug)]
pub enum RawASTOpCast {
	CastReduce0(Box<RawASTOpSingle>,),
	CastReduce1(Box<RawASTOpSingle>, Box<RawAST_OpCast1>,),
}

#[derive(Debug)]
pub enum RawASTOpSingle {
	UnaryAddReduce0(String, Box<RawASTOpSingle>,),
	UnaryBitNotReduce0(String, Box<RawASTOpSingle>,),
	UnaryNotReduce0(String, Box<RawASTOpSingle>,),
	UnarySubReduce0(String, Box<RawASTOpSingle>,),
	ParenReduce0(String, Box<RawASTExpression>, String,),
	FunctionCallReduce0(Box<RawASTFunctionCall>,),
	LeftValueReduce0(Box<RawASTLeftValue>,),
	LiteralReduce0(Box<RawASTLiteral>,),
}

#[derive(Debug)]
pub enum RawAST_OpAddsub1 {
	OpAddsub1AddReduce0(String, Box<RawASTOpMuldivmod>,),
	OpAddsub1AddReduce1(String, Box<RawASTOpMuldivmod>, Box<RawAST_OpAddsub1>,),
	OpAddsub1SubReduce0(String, Box<RawASTOpMuldivmod>,),
	OpAddsub1SubReduce1(String, Box<RawASTOpMuldivmod>, Box<RawAST_OpAddsub1>,),
}

#[derive(Debug)]
pub enum RawAST_StatementList1 {
	StatementList1StatementReduce0(Box<RawASTStatement>,),
	StatementList1StatementReduce1(Box<RawASTStatement>, Box<RawAST_StatementList1>,),
}

#[derive(Debug)]
pub enum RawASTOpCmp {
	CmpReduce0(Box<RawASTOpAddsub>,),
	CmpReduce1(Box<RawASTOpAddsub>, Box<RawAST_OpCmp1>,),
}

#[derive(Debug)]
pub enum RawASTScopeStatement {
	ScopeReduce0(String, String,),
	ScopeReduce1(String, Box<RawASTStatementList>, String,),
}

#[derive(Debug)]
pub enum RawASTIfStatement {
	IfReduce0(String, Box<RawASTExpression>, Box<RawASTScopeStatement>,),
	IfReduce1(String, Box<RawASTExpression>, Box<RawASTScopeStatement>, Box<RawASTElseStatement>,),
}

#[derive(Debug)]
pub enum RawASTExpression {
	AssignmentReduce0(Box<RawASTAssignment>,),
}

#[derive(Debug)]
pub enum RawASTOpBitOr {
	BitOrReduce0(Box<RawASTOpBitAnd>,),
	BitOrReduce1(Box<RawASTOpBitAnd>, Box<RawAST_OpBitOr1>,),
}

#[derive(Debug)]
pub enum RawASTOpBitAnd {
	BitAndReduce0(Box<RawASTOpBitXor>,),
	BitAndReduce1(Box<RawASTOpBitXor>, Box<RawAST_OpBitAnd1>,),
}

#[derive(Debug)]
pub enum RawASTOpAddsub {
	AddReduce0(Box<RawASTOpMuldivmod>,),
	AddReduce1(Box<RawASTOpMuldivmod>, Box<RawAST_OpAddsub1>,),
}

#[derive(Debug)]
pub enum RawAST_OpBitAnd1 {
	OpBitAnd1BitAndReduce0(String, Box<RawASTOpBitXor>,),
	OpBitAnd1BitAndReduce1(String, Box<RawASTOpBitXor>, Box<RawAST_OpBitAnd1>,),
}

#[derive(Debug)]
pub enum RawAST_OpAnd1 {
	OpAnd1AndReduce0(String, Box<RawASTOpCmp>,),
	OpAnd1AndReduce1(String, Box<RawASTOpCmp>, Box<RawAST_OpAnd1>,),
}

#[derive(Debug)]
pub enum RawASTForStatement {
	LabeledForEachReduce0(String, String, String, String, String, Box<RawASTExpression>, Box<RawASTScopeStatement>,),
	LabeledForEachReduce1(String, String, String, String, Box<RawAST_ForStatement1>, String, Box<RawASTExpression>, Box<RawASTScopeStatement>,),
	LabeledWhileReduce0(String, String, String, Box<RawASTExpression>, Box<RawASTScopeStatement>,),
	LabeledLoopReduce0(String, String, String, Box<RawASTScopeStatement>,),
	ForEachReduce0(String, String, String, Box<RawASTExpression>, Box<RawASTScopeStatement>,),
	ForEachReduce1(String, String, Box<RawAST_ForStatement1>, String, Box<RawASTExpression>, Box<RawASTScopeStatement>,),
	WhileReduce0(String, Box<RawASTExpression>, Box<RawASTScopeStatement>,),
	LoopReduce0(String, Box<RawASTScopeStatement>,),
}

#[derive(Debug)]
pub enum RawASTOpOr {
	OrReduce0(Box<RawASTOpAnd>,),
	OrReduce1(Box<RawASTOpAnd>, Box<RawAST_OpOr1>,),
}

#[derive(Debug)]
pub enum RawASTElseStatement {
	ElseIfReduce0(String, Box<RawASTIfStatement>,),
	ElseReduce0(String, Box<RawASTScopeStatement>,),
}

#[derive(Debug)]
pub enum RawASTLiteral {
	BoolReduce0(String,),
	DecimalReduce0(String,),
	IntegerReduce0(String,),
	StringReduce0(String,),
}

#[derive(Debug)]
pub enum RawASTOpAnd {
	AndReduce0(Box<RawASTOpCmp>,),
	AndReduce1(Box<RawASTOpCmp>, Box<RawAST_OpAnd1>,),
}

#[derive(Debug)]
pub enum RawASTFunctionCall {
	FunctionCallReduce0(String, String, String,),
	FunctionCallReduce1(String, String, Box<RawASTExpression>, String,),
	FunctionCallReduce2(String, String, Box<RawASTExpression>, Box<RawAST_FunctionCall2>, String,),
}

#[derive(Debug)]
pub enum RawAST_OpBitOr1 {
	OpBitOr1BitOrReduce0(String, Box<RawASTOpBitAnd>,),
	OpBitOr1BitOrReduce1(String, Box<RawASTOpBitAnd>, Box<RawAST_OpBitOr1>,),
}

#[derive(Debug)]
pub enum RawASTOpShift {
	ShiftLReduce0(Box<RawASTOpBitOr>,),
	ShiftLReduce1(Box<RawASTOpBitOr>, Box<RawAST_OpShift1>,),
}

#[derive(Debug)]
pub enum RawAST_OpBitXor1 {
	OpBitXor1BitXorReduce0(String, Box<RawASTOpCast>,),
	OpBitXor1BitXorReduce1(String, Box<RawASTOpCast>, Box<RawAST_OpBitXor1>,),
}

#[derive(Debug)]
pub enum RawASTAssignment {
	AssignReduce0(Box<RawASTLeftValue>, String, Box<RawASTAssignment>,),
	AssignAddReduce0(Box<RawASTLeftValue>, String, Box<RawASTAssignment>,),
	AssignBitAndReduce0(Box<RawASTLeftValue>, String, Box<RawASTAssignment>,),
	AssignBitNotReduce0(Box<RawASTLeftValue>, String, Box<RawASTAssignment>,),
	AssignBitOrReduce0(Box<RawASTLeftValue>, String, Box<RawASTAssignment>,),
	AssignBitXorReduce0(Box<RawASTLeftValue>, String, Box<RawASTAssignment>,),
	AssignDivReduce0(Box<RawASTLeftValue>, String, Box<RawASTAssignment>,),
	AssignModReduce0(Box<RawASTLeftValue>, String, Box<RawASTAssignment>,),
	AssignMulReduce0(Box<RawASTLeftValue>, String, Box<RawASTAssignment>,),
	AssignShiftLReduce0(Box<RawASTLeftValue>, String, Box<RawASTAssignment>,),
	AssignShiftRReduce0(Box<RawASTLeftValue>, String, Box<RawASTAssignment>,),
	AssignSubReduce0(Box<RawASTLeftValue>, String, Box<RawASTAssignment>,),
	OrReduce0(Box<RawASTOpOr>,),
}

#[derive(Debug)]
pub enum RawASTStatement {
	ExpressionReduce0(Box<RawASTExpression>, String,),
	ForReduce0(Box<RawASTForStatement>,),
	IfReduce0(Box<RawASTIfStatement>,),
	ScopeReduce0(Box<RawASTScopeStatement>,),
}

#[derive(Debug)]
pub enum RawAST_ForStatement1 {
	ForStatement1ForEachReduce0(String, String,),
	ForStatement1ForEachReduce1(String, String, Box<RawAST_ForStatement1>,),
}

#[derive(Debug)]
pub enum RawAST_OpOr1 {
	OpOr1OrReduce0(String, Box<RawASTOpAnd>,),
	OpOr1OrReduce1(String, Box<RawASTOpAnd>, Box<RawAST_OpOr1>,),
}

#[derive(Debug)]
pub enum RawAST_OpCast1 {
	OpCast1CastReduce0(String, Box<RawASTType>,),
	OpCast1CastReduce1(String, Box<RawASTType>, Box<RawAST_OpCast1>,),
}

#[derive(Debug)]
pub enum RawASTOpCmpOp {
	EqReduce0(String,),
	GtReduce0(String,),
	GtEqReduce0(String,),
	LsReduce0(String,),
	LsEqReduce0(String,),
	NeqReduce0(String,),
}

#[derive(Debug)]
pub enum RawASTOpMuldivmod {
	MulReduce0(Box<RawASTOpShift>,),
	MulReduce1(Box<RawASTOpShift>, Box<RawAST_OpMuldivmod1>,),
}

#[derive(Debug)]
pub enum RawAST_Root {
	ModuleReduce0(Box<RawASTModule>,),
}

#[derive(Debug)]
pub enum RawAST_OpMuldivmod1 {
	OpMuldivmod1DivReduce0(String, Box<RawASTOpShift>,),
	OpMuldivmod1DivReduce1(String, Box<RawASTOpShift>, Box<RawAST_OpMuldivmod1>,),
	OpMuldivmod1ModReduce0(String, Box<RawASTOpShift>,),
	OpMuldivmod1ModReduce1(String, Box<RawASTOpShift>, Box<RawAST_OpMuldivmod1>,),
	OpMuldivmod1MulReduce0(String, Box<RawASTOpShift>,),
	OpMuldivmod1MulReduce1(String, Box<RawASTOpShift>, Box<RawAST_OpMuldivmod1>,),
}

#[derive(Debug)]
pub enum RawASTLeftValue {
	IdReduce0(String,),
}

#[derive(Debug)]
pub enum RawASTStatementList {
	StatementReduce1(Box<RawAST_StatementList1>,),
}

#[derive(Debug)]
pub enum RawAST_FunctionCall2 {
	FunctionCall2FunctionCallReduce0(String, Box<RawASTExpression>,),
	FunctionCall2FunctionCallReduce1(String, Box<RawASTExpression>, Box<RawAST_FunctionCall2>,),
}

#[derive(Debug)]
pub enum RawASTOpBitXor {
	BitXorReduce0(Box<RawASTOpCast>,),
	BitXorReduce1(Box<RawASTOpCast>, Box<RawAST_OpBitXor1>,),
}

#[derive(Debug)]
pub enum RawAST_OpShift1 {
	OpShift1ShiftLReduce0(String, Box<RawASTOpBitOr>,),
	OpShift1ShiftLReduce1(String, Box<RawASTOpBitOr>, Box<RawAST_OpShift1>,),
	OpShift1ShiftRReduce0(String, Box<RawASTOpBitOr>,),
	OpShift1ShiftRReduce1(String, Box<RawASTOpBitOr>, Box<RawAST_OpShift1>,),
}

fn build_ast_terminal(token: Token) -> RawAST {
	RawAST::__Token(token.token_content)
}

fn build_ast_nonterminal(name: &str, child_asts: Vec<RawAST>) -> RawAST {
	match name {
		"typebool-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::BoolReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typef16-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::F16Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typef32-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::F32Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typef64-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::F64Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typei128-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::I128Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typei16-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::I16Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typei32-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::I32Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typei64-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::I64Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typei8-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::I8Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typestr-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::StrReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typeu128-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::U128Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typeu16-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::U16Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typeu32-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::U32Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typeu64-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::U64Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"typeu8-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Type(RawASTType::U8Reduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"_op-cmp-1_op-cmp-1-cmp-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpCmp1(RawAST_OpCmp1::OpCmp1CmpReduce0(match ast.0 { RawAST::OpCmpOp(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::OpAddsub(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-cmp-1_op-cmp-1-cmp-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpCmp1(RawAST_OpCmp1::OpCmp1CmpReduce1(match ast.0 { RawAST::OpCmpOp(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::OpAddsub(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpCmp1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"modulestatement-list-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Module(RawASTModule::StatementListReduce0(match ast.0 { RawAST::StatementList(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-castcast-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpCast(RawASTOpCast::CastReduce0(match ast.0 { RawAST::OpSingle(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-castcast-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpCast(RawASTOpCast::CastReduce1(match ast.0 { RawAST::OpSingle(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::_OpCast1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-singleunary-add-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpSingle(RawASTOpSingle::UnaryAddReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpSingle(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-singleunary-bit-not-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpSingle(RawASTOpSingle::UnaryBitNotReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpSingle(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-singleunary-not-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpSingle(RawASTOpSingle::UnaryNotReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpSingle(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-singleunary-sub-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpSingle(RawASTOpSingle::UnarySubReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpSingle(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-singleparen-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::OpSingle(RawASTOpSingle::ParenReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"op-singlefunction-call-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpSingle(RawASTOpSingle::FunctionCallReduce0(match ast.0 { RawAST::FunctionCall(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-singleleft-value-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpSingle(RawASTOpSingle::LeftValueReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-singleliteral-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpSingle(RawASTOpSingle::LiteralReduce0(match ast.0 { RawAST::Literal(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-addsub-1_op-addsub-1-add-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpAddsub1(RawAST_OpAddsub1::OpAddsub1AddReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpMuldivmod(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-addsub-1_op-addsub-1-add-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpAddsub1(RawAST_OpAddsub1::OpAddsub1AddReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpMuldivmod(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpAddsub1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-addsub-1_op-addsub-1-sub-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpAddsub1(RawAST_OpAddsub1::OpAddsub1SubReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpMuldivmod(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-addsub-1_op-addsub-1-sub-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpAddsub1(RawAST_OpAddsub1::OpAddsub1SubReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpMuldivmod(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpAddsub1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_statement-list-1_statement-list-1-statement-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::_StatementList1(RawAST_StatementList1::StatementList1StatementReduce0(match ast.0 { RawAST::Statement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_statement-list-1_statement-list-1-statement-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_StatementList1(RawAST_StatementList1::StatementList1StatementReduce1(match ast.0 { RawAST::Statement(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::_StatementList1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-cmpcmp-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpCmp(RawASTOpCmp::CmpReduce0(match ast.0 { RawAST::OpAddsub(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-cmpcmp-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpCmp(RawASTOpCmp::CmpReduce1(match ast.0 { RawAST::OpAddsub(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::_OpCmp1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"scope-statementscope-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::ScopeStatement(RawASTScopeStatement::ScopeReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"scope-statementscope-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::ScopeStatement(RawASTScopeStatement::ScopeReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::StatementList(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"if-statementif-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::IfStatement(RawASTIfStatement::IfReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::ScopeStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"if-statementif-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::IfStatement(RawASTIfStatement::IfReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::ScopeStatement(ast) => Box::new(ast), _ => unreachable!(), }, match ast.3 { RawAST::ElseStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"expressionassignment-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Expression(RawASTExpression::AssignmentReduce0(match ast.0 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-bit-orbit-or-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpBitOr(RawASTOpBitOr::BitOrReduce0(match ast.0 { RawAST::OpBitAnd(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-bit-orbit-or-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpBitOr(RawASTOpBitOr::BitOrReduce1(match ast.0 { RawAST::OpBitAnd(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::_OpBitOr1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-bit-andbit-and-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpBitAnd(RawASTOpBitAnd::BitAndReduce0(match ast.0 { RawAST::OpBitXor(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-bit-andbit-and-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpBitAnd(RawASTOpBitAnd::BitAndReduce1(match ast.0 { RawAST::OpBitXor(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::_OpBitAnd1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-addsubadd-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpAddsub(RawASTOpAddsub::AddReduce0(match ast.0 { RawAST::OpMuldivmod(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-addsubadd-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpAddsub(RawASTOpAddsub::AddReduce1(match ast.0 { RawAST::OpMuldivmod(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::_OpAddsub1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-bit-and-1_op-bit-and-1-bit-and-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpBitAnd1(RawAST_OpBitAnd1::OpBitAnd1BitAndReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpBitXor(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-bit-and-1_op-bit-and-1-bit-and-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpBitAnd1(RawAST_OpBitAnd1::OpBitAnd1BitAndReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpBitXor(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpBitAnd1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-and-1_op-and-1-and-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpAnd1(RawAST_OpAnd1::OpAnd1AndReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpCmp(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-and-1_op-and-1-and-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpAnd1(RawAST_OpAnd1::OpAnd1AndReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpCmp(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpAnd1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"for-statementlabeled-for-each-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::ForStatement(RawASTForStatement::LabeledForEachReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.3 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.4 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.5 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.6 { RawAST::ScopeStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"for-statementlabeled-for-each-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::ForStatement(RawASTForStatement::LabeledForEachReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.3 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.4 { RawAST::_ForStatement1(ast) => Box::new(ast), _ => unreachable!(), }, match ast.5 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.6 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.7 { RawAST::ScopeStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"for-statementlabeled-while-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::ForStatement(RawASTForStatement::LabeledWhileReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.3 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.4 { RawAST::ScopeStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"for-statementlabeled-loop-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::ForStatement(RawASTForStatement::LabeledLoopReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.3 { RawAST::ScopeStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"for-statementfor-each-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::ForStatement(RawASTForStatement::ForEachReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.3 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.4 { RawAST::ScopeStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"for-statementfor-each-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::ForStatement(RawASTForStatement::ForEachReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::_ForStatement1(ast) => Box::new(ast), _ => unreachable!(), }, match ast.3 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.4 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.5 { RawAST::ScopeStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"for-statementwhile-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::ForStatement(RawASTForStatement::WhileReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::ScopeStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"for-statementloop-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::ForStatement(RawASTForStatement::LoopReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::ScopeStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-oror-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpOr(RawASTOpOr::OrReduce0(match ast.0 { RawAST::OpAnd(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-oror-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpOr(RawASTOpOr::OrReduce1(match ast.0 { RawAST::OpAnd(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::_OpOr1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"else-statementelse-if-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::ElseStatement(RawASTElseStatement::ElseIfReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::IfStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"else-statementelse-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::ElseStatement(RawASTElseStatement::ElseReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::ScopeStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"literalbool-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Literal(RawASTLiteral::BoolReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"literaldecimal-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Literal(RawASTLiteral::DecimalReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"literalinteger-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Literal(RawASTLiteral::IntegerReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"literalstring-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Literal(RawASTLiteral::StringReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"op-andand-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpAnd(RawASTOpAnd::AndReduce0(match ast.0 { RawAST::OpCmp(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-andand-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpAnd(RawASTOpAnd::AndReduce1(match ast.0 { RawAST::OpCmp(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::_OpAnd1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"function-callfunction-call-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::FunctionCall(RawASTFunctionCall::FunctionCallReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"function-callfunction-call-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::FunctionCall(RawASTFunctionCall::FunctionCallReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.3 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"function-callfunction-call-reduce-2" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::FunctionCall(RawASTFunctionCall::FunctionCallReduce2(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.3 { RawAST::_FunctionCall2(ast) => Box::new(ast), _ => unreachable!(), }, match ast.4 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"_op-bit-or-1_op-bit-or-1-bit-or-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpBitOr1(RawAST_OpBitOr1::OpBitOr1BitOrReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpBitAnd(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-bit-or-1_op-bit-or-1-bit-or-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpBitOr1(RawAST_OpBitOr1::OpBitOr1BitOrReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpBitAnd(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpBitOr1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-shiftshift-l-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpShift(RawASTOpShift::ShiftLReduce0(match ast.0 { RawAST::OpBitOr(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-shiftshift-l-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpShift(RawASTOpShift::ShiftLReduce1(match ast.0 { RawAST::OpBitOr(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::_OpShift1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpBitXor1(RawAST_OpBitXor1::OpBitXor1BitXorReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpCast(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpBitXor1(RawAST_OpBitXor1::OpBitXor1BitXorReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpCast(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpBitXor1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentassign-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::AssignReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentassign-add-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::AssignAddReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentassign-bit-and-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::AssignBitAndReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentassign-bit-not-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::AssignBitNotReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentassign-bit-or-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::AssignBitOrReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentassign-bit-xor-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::AssignBitXorReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentassign-div-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::AssignDivReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentassign-mod-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::AssignModReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentassign-mul-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::AssignMulReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentassign-shift-l-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::AssignShiftLReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentassign-shift-r-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::AssignShiftRReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentassign-sub-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::AssignSubReduce0(match ast.0 { RawAST::LeftValue(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::Assignment(ast) => Box::new(ast), _ => unreachable!(), })) }
		"assignmentor-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Assignment(RawASTAssignment::OrReduce0(match ast.0 { RawAST::OpOr(ast) => Box::new(ast), _ => unreachable!(), })) }
		"statementexpression-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::Statement(RawASTStatement::ExpressionReduce0(match ast.0 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"statementfor-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Statement(RawASTStatement::ForReduce0(match ast.0 { RawAST::ForStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"statementif-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Statement(RawASTStatement::IfReduce0(match ast.0 { RawAST::IfStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"statementscope-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::Statement(RawASTStatement::ScopeReduce0(match ast.0 { RawAST::ScopeStatement(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_for-statement-1_for-statement-1-for-each-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_ForStatement1(RawAST_ForStatement1::ForStatement1ForEachReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"_for-statement-1_for-statement-1-for-each-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_ForStatement1(RawAST_ForStatement1::ForStatement1ForEachReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.2 { RawAST::_ForStatement1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-or-1_op-or-1-or-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpOr1(RawAST_OpOr1::OpOr1OrReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpAnd(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-or-1_op-or-1-or-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpOr1(RawAST_OpOr1::OpOr1OrReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpAnd(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpOr1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-cast-1_op-cast-1-cast-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpCast1(RawAST_OpCast1::OpCast1CastReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::Type(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-cast-1_op-cast-1-cast-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpCast1(RawAST_OpCast1::OpCast1CastReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::Type(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpCast1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-cmp-opeq-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpCmpOp(RawASTOpCmpOp::EqReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"op-cmp-opgt-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpCmpOp(RawASTOpCmpOp::GtReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"op-cmp-opgt-eq-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpCmpOp(RawASTOpCmpOp::GtEqReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"op-cmp-opls-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpCmpOp(RawASTOpCmpOp::LsReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"op-cmp-opls-eq-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpCmpOp(RawASTOpCmpOp::LsEqReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"op-cmp-opneq-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpCmpOp(RawASTOpCmpOp::NeqReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"op-muldivmodmul-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpMuldivmod(RawASTOpMuldivmod::MulReduce0(match ast.0 { RawAST::OpShift(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-muldivmodmul-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpMuldivmod(RawASTOpMuldivmod::MulReduce1(match ast.0 { RawAST::OpShift(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::_OpMuldivmod1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"__rootmodule-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::_Root(RawAST_Root::ModuleReduce0(match ast.0 { RawAST::Module(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-muldivmod-1_op-muldivmod-1-div-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpMuldivmod1(RawAST_OpMuldivmod1::OpMuldivmod1DivReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpShift(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-muldivmod-1_op-muldivmod-1-div-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpMuldivmod1(RawAST_OpMuldivmod1::OpMuldivmod1DivReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpShift(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpMuldivmod1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-muldivmod-1_op-muldivmod-1-mod-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpMuldivmod1(RawAST_OpMuldivmod1::OpMuldivmod1ModReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpShift(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-muldivmod-1_op-muldivmod-1-mod-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpMuldivmod1(RawAST_OpMuldivmod1::OpMuldivmod1ModReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpShift(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpMuldivmod1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-muldivmod-1_op-muldivmod-1-mul-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpMuldivmod1(RawAST_OpMuldivmod1::OpMuldivmod1MulReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpShift(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-muldivmod-1_op-muldivmod-1-mul-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpMuldivmod1(RawAST_OpMuldivmod1::OpMuldivmod1MulReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpShift(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpMuldivmod1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"left-valueid-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::LeftValue(RawASTLeftValue::IdReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), })) }
		"statement-liststatement-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::StatementList(RawASTStatementList::StatementReduce1(match ast.0 { RawAST::_StatementList1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_function-call-2_function-call-2-function-call-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_FunctionCall2(RawAST_FunctionCall2::FunctionCall2FunctionCallReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_function-call-2_function-call-2-function-call-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_FunctionCall2(RawAST_FunctionCall2::FunctionCall2FunctionCallReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::Expression(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_FunctionCall2(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-bit-xorbit-xor-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(),); RawAST::OpBitXor(RawASTOpBitXor::BitXorReduce0(match ast.0 { RawAST::OpCast(ast) => Box::new(ast), _ => unreachable!(), })) }
		"op-bit-xorbit-xor-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::OpBitXor(RawASTOpBitXor::BitXorReduce1(match ast.0 { RawAST::OpCast(ast) => Box::new(ast), _ => unreachable!(), }, match ast.1 { RawAST::_OpBitXor1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-shift-1_op-shift-1-shift-l-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpShift1(RawAST_OpShift1::OpShift1ShiftLReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpBitOr(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-shift-1_op-shift-1-shift-l-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpShift1(RawAST_OpShift1::OpShift1ShiftLReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpBitOr(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpShift1(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-shift-1_op-shift-1-shift-r-reduce-0" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(),); RawAST::_OpShift1(RawAST_OpShift1::OpShift1ShiftRReduce0(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpBitOr(ast) => Box::new(ast), _ => unreachable!(), })) }
		"_op-shift-1_op-shift-1-shift-r-reduce-1" => { let mut it = child_asts.into_iter(); let ast = (it.next().unwrap(), it.next().unwrap(), it.next().unwrap(),); RawAST::_OpShift1(RawAST_OpShift1::OpShift1ShiftRReduce1(match ast.0 { RawAST::__Token(token) => token, _ => unreachable!(), }, match ast.1 { RawAST::OpBitOr(ast) => Box::new(ast), _ => unreachable!(), }, match ast.2 { RawAST::_OpShift1(ast) => Box::new(ast), _ => unreachable!(), })) }
		_ => unreachable!(),
	}
}

fn raw_ast_to_ast(root_ast: RawAST) -> AST {
    match root_ast {
        RawAST::Module(ast) => (Box::new(raw_ast_to_ast_Module(ast)),),
        _ => unreachable!(),
    }
}

fn raw_ast_to_ast_Type(ast: RawASTType) -> ASTType {
    match ast {
        RawASTType::BoolReduce0(ast_0) => ASTType::Bool(ast_0),
	RawASTType::F16Reduce0(ast_0) => ASTType::F16(ast_0),
	RawASTType::F32Reduce0(ast_0) => ASTType::F32(ast_0),
	RawASTType::F64Reduce0(ast_0) => ASTType::F64(ast_0),
	RawASTType::I128Reduce0(ast_0) => ASTType::I128(ast_0),
	RawASTType::I16Reduce0(ast_0) => ASTType::I16(ast_0),
	RawASTType::I32Reduce0(ast_0) => ASTType::I32(ast_0),
	RawASTType::I64Reduce0(ast_0) => ASTType::I64(ast_0),
	RawASTType::I8Reduce0(ast_0) => ASTType::I8(ast_0),
	RawASTType::StrReduce0(ast_0) => ASTType::Str(ast_0),
	RawASTType::U128Reduce0(ast_0) => ASTType::U128(ast_0),
	RawASTType::U16Reduce0(ast_0) => ASTType::U16(ast_0),
	RawASTType::U32Reduce0(ast_0) => ASTType::U32(ast_0),
	RawASTType::U64Reduce0(ast_0) => ASTType::U64(ast_0),
	RawASTType::U8Reduce0(ast_0) => ASTType::U8(ast_0),
    }
}

fn raw_ast_to_ast__OpCmp1(ast: RawAST_OpCmp1) -> Vec<(Box<RawASTOpCmpOp>, Box<RawASTOpAddsub>,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_OpCmp1::OpCmp1CmpReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpCmp1::OpCmp1CmpReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
        }
    }
}

fn raw_ast_to_ast_Module(ast: RawASTModule) -> ASTModule {
    match ast {
        RawASTModule::StatementListReduce0(ast_0) => ASTModule::StatementList(Box::new(raw_ast_to_ast_StatementList(*ast_0))),
    }
}

fn raw_ast_to_ast_OpCast(ast: RawASTOpCast) -> ASTOpCast {
    match ast {
        RawASTOpCast::CastReduce0(ast_0) => ASTOpCast::Cast(Box::new(raw_ast_to_ast_OpSingle(*ast_0)), None),
	RawASTOpCast::CastReduce1(ast_0, ast_1) => ASTOpCast::Cast(Box::new(raw_ast_to_ast_OpSingle(*ast_0)), Some(({
    raw_ast_to_ast__OpCast1(*ast_1).into_iter().map(|item| {
        (item.0, Box::new(raw_ast_to_ast_Type(*item.1)),)
    }).collect::<_>()
},))),
    }
}

fn raw_ast_to_ast_OpSingle(ast: RawASTOpSingle) -> ASTOpSingle {
    match ast {
        RawASTOpSingle::UnaryAddReduce0(ast_0, ast_1) => ASTOpSingle::UnaryAdd(ast_0, Box::new(raw_ast_to_ast_OpSingle(*ast_1))),
	RawASTOpSingle::UnaryBitNotReduce0(ast_0, ast_1) => ASTOpSingle::UnaryBitNot(ast_0, Box::new(raw_ast_to_ast_OpSingle(*ast_1))),
	RawASTOpSingle::UnaryNotReduce0(ast_0, ast_1) => ASTOpSingle::UnaryNot(ast_0, Box::new(raw_ast_to_ast_OpSingle(*ast_1))),
	RawASTOpSingle::UnarySubReduce0(ast_0, ast_1) => ASTOpSingle::UnarySub(ast_0, Box::new(raw_ast_to_ast_OpSingle(*ast_1))),
	RawASTOpSingle::ParenReduce0(ast_0, ast_1, ast_2) => ASTOpSingle::Paren(ast_0, Box::new(raw_ast_to_ast_Expression(*ast_1)), ast_2),
	RawASTOpSingle::FunctionCallReduce0(ast_0) => ASTOpSingle::FunctionCall(Box::new(raw_ast_to_ast_FunctionCall(*ast_0))),
	RawASTOpSingle::LeftValueReduce0(ast_0) => ASTOpSingle::LeftValue(Box::new(raw_ast_to_ast_LeftValue(*ast_0))),
	RawASTOpSingle::LiteralReduce0(ast_0) => ASTOpSingle::Literal(Box::new(raw_ast_to_ast_Literal(*ast_0))),
    }
}

fn raw_ast_to_ast__OpAddsub1(ast: RawAST_OpAddsub1) -> Vec<(String, Box<RawASTOpMuldivmod>,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_OpAddsub1::OpAddsub1AddReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpAddsub1::OpAddsub1AddReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
	RawAST_OpAddsub1::OpAddsub1SubReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpAddsub1::OpAddsub1SubReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
        }
    }
}

fn raw_ast_to_ast__StatementList1(ast: RawAST_StatementList1) -> Vec<(Box<RawASTStatement>,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_StatementList1::StatementList1StatementReduce0(ast_0) => {
    result.push((ast_0,));
                return result;
}
	RawAST_StatementList1::StatementList1StatementReduce1(ast_0, ast_1) => {
    result.push((ast_0,));
                ast = *ast_1;
}
        }
    }
}

fn raw_ast_to_ast_OpCmp(ast: RawASTOpCmp) -> ASTOpCmp {
    match ast {
        RawASTOpCmp::CmpReduce0(ast_0) => ASTOpCmp::Cmp(Box::new(raw_ast_to_ast_OpAddsub(*ast_0)), None),
	RawASTOpCmp::CmpReduce1(ast_0, ast_1) => ASTOpCmp::Cmp(Box::new(raw_ast_to_ast_OpAddsub(*ast_0)), Some(({
    raw_ast_to_ast__OpCmp1(*ast_1).into_iter().map(|item| {
        (Box::new(raw_ast_to_ast_OpCmpOp(*item.0)), Box::new(raw_ast_to_ast_OpAddsub(*item.1)),)
    }).collect::<_>()
},))),
    }
}

fn raw_ast_to_ast_ScopeStatement(ast: RawASTScopeStatement) -> ASTScopeStatement {
    match ast {
        RawASTScopeStatement::ScopeReduce0(ast_0, ast_1) => ASTScopeStatement::Scope(ast_0, None, ast_1),
	RawASTScopeStatement::ScopeReduce1(ast_0, ast_1, ast_2) => ASTScopeStatement::Scope(ast_0, Some((Box::new(raw_ast_to_ast_StatementList(*ast_1)),)), ast_2),
    }
}

fn raw_ast_to_ast_IfStatement(ast: RawASTIfStatement) -> ASTIfStatement {
    match ast {
        RawASTIfStatement::IfReduce0(ast_0, ast_1, ast_2) => ASTIfStatement::If(ast_0, Box::new(raw_ast_to_ast_Expression(*ast_1)), Box::new(raw_ast_to_ast_ScopeStatement(*ast_2)), None),
	RawASTIfStatement::IfReduce1(ast_0, ast_1, ast_2, ast_3) => ASTIfStatement::If(ast_0, Box::new(raw_ast_to_ast_Expression(*ast_1)), Box::new(raw_ast_to_ast_ScopeStatement(*ast_2)), Some((Box::new(raw_ast_to_ast_ElseStatement(*ast_3)),))),
    }
}

fn raw_ast_to_ast_Expression(ast: RawASTExpression) -> ASTExpression {
    match ast {
        RawASTExpression::AssignmentReduce0(ast_0) => ASTExpression::Assignment(Box::new(raw_ast_to_ast_Assignment(*ast_0))),
    }
}

fn raw_ast_to_ast_OpBitOr(ast: RawASTOpBitOr) -> ASTOpBitOr {
    match ast {
        RawASTOpBitOr::BitOrReduce0(ast_0) => ASTOpBitOr::BitOr(Box::new(raw_ast_to_ast_OpBitAnd(*ast_0)), None),
	RawASTOpBitOr::BitOrReduce1(ast_0, ast_1) => ASTOpBitOr::BitOr(Box::new(raw_ast_to_ast_OpBitAnd(*ast_0)), Some(({
    raw_ast_to_ast__OpBitOr1(*ast_1).into_iter().map(|item| {
        (item.0, Box::new(raw_ast_to_ast_OpBitAnd(*item.1)),)
    }).collect::<_>()
},))),
    }
}

fn raw_ast_to_ast_OpBitAnd(ast: RawASTOpBitAnd) -> ASTOpBitAnd {
    match ast {
        RawASTOpBitAnd::BitAndReduce0(ast_0) => ASTOpBitAnd::BitAnd(Box::new(raw_ast_to_ast_OpBitXor(*ast_0)), None),
	RawASTOpBitAnd::BitAndReduce1(ast_0, ast_1) => ASTOpBitAnd::BitAnd(Box::new(raw_ast_to_ast_OpBitXor(*ast_0)), Some(({
    raw_ast_to_ast__OpBitAnd1(*ast_1).into_iter().map(|item| {
        (item.0, Box::new(raw_ast_to_ast_OpBitXor(*item.1)),)
    }).collect::<_>()
},))),
    }
}

fn raw_ast_to_ast_OpAddsub(ast: RawASTOpAddsub) -> ASTOpAddsub {
    match ast {
        RawASTOpAddsub::AddReduce0(ast_0) => ASTOpAddsub::Add(Box::new(raw_ast_to_ast_OpMuldivmod(*ast_0)), None),
	RawASTOpAddsub::AddReduce1(ast_0, ast_1) => ASTOpAddsub::Add(Box::new(raw_ast_to_ast_OpMuldivmod(*ast_0)), Some(({
    raw_ast_to_ast__OpAddsub1(*ast_1).into_iter().map(|item| {
        (item.0, Box::new(raw_ast_to_ast_OpMuldivmod(*item.1)),)
    }).collect::<_>()
},))),
    }
}

fn raw_ast_to_ast__OpBitAnd1(ast: RawAST_OpBitAnd1) -> Vec<(String, Box<RawASTOpBitXor>,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_OpBitAnd1::OpBitAnd1BitAndReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpBitAnd1::OpBitAnd1BitAndReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
        }
    }
}

fn raw_ast_to_ast__OpAnd1(ast: RawAST_OpAnd1) -> Vec<(String, Box<RawASTOpCmp>,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_OpAnd1::OpAnd1AndReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpAnd1::OpAnd1AndReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
        }
    }
}

fn raw_ast_to_ast_ForStatement(ast: RawASTForStatement) -> ASTForStatement {
    match ast {
        RawASTForStatement::LabeledForEachReduce0(ast_0, ast_1, ast_2, ast_3, ast_4, ast_5, ast_6) => ASTForStatement::LabeledForEach(ast_0, ast_1, ast_2, ast_3, None, ast_4, Box::new(raw_ast_to_ast_Expression(*ast_5)), Box::new(raw_ast_to_ast_ScopeStatement(*ast_6))),
	RawASTForStatement::LabeledForEachReduce1(ast_0, ast_1, ast_2, ast_3, ast_4, ast_5, ast_6, ast_7) => ASTForStatement::LabeledForEach(ast_0, ast_1, ast_2, ast_3, Some(({
    raw_ast_to_ast__ForStatement1(*ast_4).into_iter().map(|item| {
        (item.0, item.1,)
    }).collect::<_>()
},)), ast_5, Box::new(raw_ast_to_ast_Expression(*ast_6)), Box::new(raw_ast_to_ast_ScopeStatement(*ast_7))),
	RawASTForStatement::LabeledWhileReduce0(ast_0, ast_1, ast_2, ast_3, ast_4) => ASTForStatement::LabeledWhile(ast_0, ast_1, ast_2, Box::new(raw_ast_to_ast_Expression(*ast_3)), Box::new(raw_ast_to_ast_ScopeStatement(*ast_4))),
	RawASTForStatement::LabeledLoopReduce0(ast_0, ast_1, ast_2, ast_3) => ASTForStatement::LabeledLoop(ast_0, ast_1, ast_2, Box::new(raw_ast_to_ast_ScopeStatement(*ast_3))),
	RawASTForStatement::ForEachReduce0(ast_0, ast_1, ast_2, ast_3, ast_4) => ASTForStatement::ForEach(ast_0, ast_1, None, ast_2, Box::new(raw_ast_to_ast_Expression(*ast_3)), Box::new(raw_ast_to_ast_ScopeStatement(*ast_4))),
	RawASTForStatement::ForEachReduce1(ast_0, ast_1, ast_2, ast_3, ast_4, ast_5) => ASTForStatement::ForEach(ast_0, ast_1, Some(({
    raw_ast_to_ast__ForStatement1(*ast_2).into_iter().map(|item| {
        (item.0, item.1,)
    }).collect::<_>()
},)), ast_3, Box::new(raw_ast_to_ast_Expression(*ast_4)), Box::new(raw_ast_to_ast_ScopeStatement(*ast_5))),
	RawASTForStatement::WhileReduce0(ast_0, ast_1, ast_2) => ASTForStatement::While(ast_0, Box::new(raw_ast_to_ast_Expression(*ast_1)), Box::new(raw_ast_to_ast_ScopeStatement(*ast_2))),
	RawASTForStatement::LoopReduce0(ast_0, ast_1) => ASTForStatement::Loop(ast_0, Box::new(raw_ast_to_ast_ScopeStatement(*ast_1))),
    }
}

fn raw_ast_to_ast_OpOr(ast: RawASTOpOr) -> ASTOpOr {
    match ast {
        RawASTOpOr::OrReduce0(ast_0) => ASTOpOr::Or(Box::new(raw_ast_to_ast_OpAnd(*ast_0)), None),
	RawASTOpOr::OrReduce1(ast_0, ast_1) => ASTOpOr::Or(Box::new(raw_ast_to_ast_OpAnd(*ast_0)), Some(({
    raw_ast_to_ast__OpOr1(*ast_1).into_iter().map(|item| {
        (item.0, Box::new(raw_ast_to_ast_OpAnd(*item.1)),)
    }).collect::<_>()
},))),
    }
}

fn raw_ast_to_ast_ElseStatement(ast: RawASTElseStatement) -> ASTElseStatement {
    match ast {
        RawASTElseStatement::ElseIfReduce0(ast_0, ast_1) => ASTElseStatement::ElseIf(ast_0, Box::new(raw_ast_to_ast_IfStatement(*ast_1))),
	RawASTElseStatement::ElseReduce0(ast_0, ast_1) => ASTElseStatement::Else(ast_0, Box::new(raw_ast_to_ast_ScopeStatement(*ast_1))),
    }
}

fn raw_ast_to_ast_Literal(ast: RawASTLiteral) -> ASTLiteral {
    match ast {
        RawASTLiteral::BoolReduce0(ast_0) => ASTLiteral::Bool(ast_0),
	RawASTLiteral::DecimalReduce0(ast_0) => ASTLiteral::Decimal(ast_0),
	RawASTLiteral::IntegerReduce0(ast_0) => ASTLiteral::Integer(ast_0),
	RawASTLiteral::StringReduce0(ast_0) => ASTLiteral::String(ast_0),
    }
}

fn raw_ast_to_ast_OpAnd(ast: RawASTOpAnd) -> ASTOpAnd {
    match ast {
        RawASTOpAnd::AndReduce0(ast_0) => ASTOpAnd::And(Box::new(raw_ast_to_ast_OpCmp(*ast_0)), None),
	RawASTOpAnd::AndReduce1(ast_0, ast_1) => ASTOpAnd::And(Box::new(raw_ast_to_ast_OpCmp(*ast_0)), Some(({
    raw_ast_to_ast__OpAnd1(*ast_1).into_iter().map(|item| {
        (item.0, Box::new(raw_ast_to_ast_OpCmp(*item.1)),)
    }).collect::<_>()
},))),
    }
}

fn raw_ast_to_ast_FunctionCall(ast: RawASTFunctionCall) -> ASTFunctionCall {
    match ast {
        RawASTFunctionCall::FunctionCallReduce0(ast_0, ast_1, ast_2) => ASTFunctionCall::FunctionCall(ast_0, ast_1, None, ast_2),
	RawASTFunctionCall::FunctionCallReduce1(ast_0, ast_1, ast_2, ast_3) => ASTFunctionCall::FunctionCall(ast_0, ast_1, Some((Box::new(raw_ast_to_ast_Expression(*ast_2)), None,)), ast_3),
	RawASTFunctionCall::FunctionCallReduce2(ast_0, ast_1, ast_2, ast_3, ast_4) => ASTFunctionCall::FunctionCall(ast_0, ast_1, Some((Box::new(raw_ast_to_ast_Expression(*ast_2)), Some(({
    raw_ast_to_ast__FunctionCall2(*ast_3).into_iter().map(|item| {
        (item.0, Box::new(raw_ast_to_ast_Expression(*item.1)),)
    }).collect::<_>()
},)),)), ast_4),
    }
}

fn raw_ast_to_ast__OpBitOr1(ast: RawAST_OpBitOr1) -> Vec<(String, Box<RawASTOpBitAnd>,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_OpBitOr1::OpBitOr1BitOrReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpBitOr1::OpBitOr1BitOrReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
        }
    }
}

fn raw_ast_to_ast_OpShift(ast: RawASTOpShift) -> ASTOpShift {
    match ast {
        RawASTOpShift::ShiftLReduce0(ast_0) => ASTOpShift::ShiftL(Box::new(raw_ast_to_ast_OpBitOr(*ast_0)), None),
	RawASTOpShift::ShiftLReduce1(ast_0, ast_1) => ASTOpShift::ShiftL(Box::new(raw_ast_to_ast_OpBitOr(*ast_0)), Some(({
    raw_ast_to_ast__OpShift1(*ast_1).into_iter().map(|item| {
        (item.0, Box::new(raw_ast_to_ast_OpBitOr(*item.1)),)
    }).collect::<_>()
},))),
    }
}

fn raw_ast_to_ast__OpBitXor1(ast: RawAST_OpBitXor1) -> Vec<(String, Box<RawASTOpCast>,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_OpBitXor1::OpBitXor1BitXorReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpBitXor1::OpBitXor1BitXorReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
        }
    }
}

fn raw_ast_to_ast_Assignment(ast: RawASTAssignment) -> ASTAssignment {
    match ast {
        RawASTAssignment::AssignReduce0(ast_0, ast_1, ast_2) => ASTAssignment::Assign(Box::new(raw_ast_to_ast_LeftValue(*ast_0)), ast_1, Box::new(raw_ast_to_ast_Assignment(*ast_2))),
	RawASTAssignment::AssignAddReduce0(ast_0, ast_1, ast_2) => ASTAssignment::AssignAdd(Box::new(raw_ast_to_ast_LeftValue(*ast_0)), ast_1, Box::new(raw_ast_to_ast_Assignment(*ast_2))),
	RawASTAssignment::AssignBitAndReduce0(ast_0, ast_1, ast_2) => ASTAssignment::AssignBitAnd(Box::new(raw_ast_to_ast_LeftValue(*ast_0)), ast_1, Box::new(raw_ast_to_ast_Assignment(*ast_2))),
	RawASTAssignment::AssignBitNotReduce0(ast_0, ast_1, ast_2) => ASTAssignment::AssignBitNot(Box::new(raw_ast_to_ast_LeftValue(*ast_0)), ast_1, Box::new(raw_ast_to_ast_Assignment(*ast_2))),
	RawASTAssignment::AssignBitOrReduce0(ast_0, ast_1, ast_2) => ASTAssignment::AssignBitOr(Box::new(raw_ast_to_ast_LeftValue(*ast_0)), ast_1, Box::new(raw_ast_to_ast_Assignment(*ast_2))),
	RawASTAssignment::AssignBitXorReduce0(ast_0, ast_1, ast_2) => ASTAssignment::AssignBitXor(Box::new(raw_ast_to_ast_LeftValue(*ast_0)), ast_1, Box::new(raw_ast_to_ast_Assignment(*ast_2))),
	RawASTAssignment::AssignDivReduce0(ast_0, ast_1, ast_2) => ASTAssignment::AssignDiv(Box::new(raw_ast_to_ast_LeftValue(*ast_0)), ast_1, Box::new(raw_ast_to_ast_Assignment(*ast_2))),
	RawASTAssignment::AssignModReduce0(ast_0, ast_1, ast_2) => ASTAssignment::AssignMod(Box::new(raw_ast_to_ast_LeftValue(*ast_0)), ast_1, Box::new(raw_ast_to_ast_Assignment(*ast_2))),
	RawASTAssignment::AssignMulReduce0(ast_0, ast_1, ast_2) => ASTAssignment::AssignMul(Box::new(raw_ast_to_ast_LeftValue(*ast_0)), ast_1, Box::new(raw_ast_to_ast_Assignment(*ast_2))),
	RawASTAssignment::AssignShiftLReduce0(ast_0, ast_1, ast_2) => ASTAssignment::AssignShiftL(Box::new(raw_ast_to_ast_LeftValue(*ast_0)), ast_1, Box::new(raw_ast_to_ast_Assignment(*ast_2))),
	RawASTAssignment::AssignShiftRReduce0(ast_0, ast_1, ast_2) => ASTAssignment::AssignShiftR(Box::new(raw_ast_to_ast_LeftValue(*ast_0)), ast_1, Box::new(raw_ast_to_ast_Assignment(*ast_2))),
	RawASTAssignment::AssignSubReduce0(ast_0, ast_1, ast_2) => ASTAssignment::AssignSub(Box::new(raw_ast_to_ast_LeftValue(*ast_0)), ast_1, Box::new(raw_ast_to_ast_Assignment(*ast_2))),
	RawASTAssignment::OrReduce0(ast_0) => ASTAssignment::Or(Box::new(raw_ast_to_ast_OpOr(*ast_0))),
    }
}

fn raw_ast_to_ast_Statement(ast: RawASTStatement) -> ASTStatement {
    match ast {
        RawASTStatement::ExpressionReduce0(ast_0, ast_1) => ASTStatement::Expression(Box::new(raw_ast_to_ast_Expression(*ast_0)), ast_1),
	RawASTStatement::ForReduce0(ast_0) => ASTStatement::For(Box::new(raw_ast_to_ast_ForStatement(*ast_0))),
	RawASTStatement::IfReduce0(ast_0) => ASTStatement::If(Box::new(raw_ast_to_ast_IfStatement(*ast_0))),
	RawASTStatement::ScopeReduce0(ast_0) => ASTStatement::Scope(Box::new(raw_ast_to_ast_ScopeStatement(*ast_0))),
    }
}

fn raw_ast_to_ast__ForStatement1(ast: RawAST_ForStatement1) -> Vec<(String, String,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_ForStatement1::ForStatement1ForEachReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_ForStatement1::ForStatement1ForEachReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
        }
    }
}

fn raw_ast_to_ast__OpOr1(ast: RawAST_OpOr1) -> Vec<(String, Box<RawASTOpAnd>,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_OpOr1::OpOr1OrReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpOr1::OpOr1OrReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
        }
    }
}

fn raw_ast_to_ast__OpCast1(ast: RawAST_OpCast1) -> Vec<(String, Box<RawASTType>,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_OpCast1::OpCast1CastReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpCast1::OpCast1CastReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
        }
    }
}

fn raw_ast_to_ast_OpCmpOp(ast: RawASTOpCmpOp) -> ASTOpCmpOp {
    match ast {
        RawASTOpCmpOp::EqReduce0(ast_0) => ASTOpCmpOp::Eq(ast_0),
	RawASTOpCmpOp::GtReduce0(ast_0) => ASTOpCmpOp::Gt(ast_0),
	RawASTOpCmpOp::GtEqReduce0(ast_0) => ASTOpCmpOp::GtEq(ast_0),
	RawASTOpCmpOp::LsReduce0(ast_0) => ASTOpCmpOp::Ls(ast_0),
	RawASTOpCmpOp::LsEqReduce0(ast_0) => ASTOpCmpOp::LsEq(ast_0),
	RawASTOpCmpOp::NeqReduce0(ast_0) => ASTOpCmpOp::Neq(ast_0),
    }
}

fn raw_ast_to_ast_OpMuldivmod(ast: RawASTOpMuldivmod) -> ASTOpMuldivmod {
    match ast {
        RawASTOpMuldivmod::MulReduce0(ast_0) => ASTOpMuldivmod::Mul(Box::new(raw_ast_to_ast_OpShift(*ast_0)), None),
	RawASTOpMuldivmod::MulReduce1(ast_0, ast_1) => ASTOpMuldivmod::Mul(Box::new(raw_ast_to_ast_OpShift(*ast_0)), Some(({
    raw_ast_to_ast__OpMuldivmod1(*ast_1).into_iter().map(|item| {
        (item.0, Box::new(raw_ast_to_ast_OpShift(*item.1)),)
    }).collect::<_>()
},))),
    }
}

fn raw_ast_to_ast__OpMuldivmod1(ast: RawAST_OpMuldivmod1) -> Vec<(String, Box<RawASTOpShift>,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_OpMuldivmod1::OpMuldivmod1DivReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpMuldivmod1::OpMuldivmod1DivReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
	RawAST_OpMuldivmod1::OpMuldivmod1ModReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpMuldivmod1::OpMuldivmod1ModReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
	RawAST_OpMuldivmod1::OpMuldivmod1MulReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpMuldivmod1::OpMuldivmod1MulReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
        }
    }
}

fn raw_ast_to_ast_LeftValue(ast: RawASTLeftValue) -> ASTLeftValue {
    match ast {
        RawASTLeftValue::IdReduce0(ast_0) => ASTLeftValue::Id(ast_0),
    }
}

fn raw_ast_to_ast_StatementList(ast: RawASTStatementList) -> ASTStatementList {
    match ast {
        RawASTStatementList::StatementReduce1(ast_0) => ASTStatementList::Statement(Some(({
    raw_ast_to_ast__StatementList1(*ast_0).into_iter().map(|item| {
        (Box::new(raw_ast_to_ast_Statement(*item.0)),)
    }).collect::<_>()
},))),
    }
}

fn raw_ast_to_ast__FunctionCall2(ast: RawAST_FunctionCall2) -> Vec<(String, Box<RawASTExpression>,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_FunctionCall2::FunctionCall2FunctionCallReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_FunctionCall2::FunctionCall2FunctionCallReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
        }
    }
}

fn raw_ast_to_ast_OpBitXor(ast: RawASTOpBitXor) -> ASTOpBitXor {
    match ast {
        RawASTOpBitXor::BitXorReduce0(ast_0) => ASTOpBitXor::BitXor(Box::new(raw_ast_to_ast_OpCast(*ast_0)), None),
	RawASTOpBitXor::BitXorReduce1(ast_0, ast_1) => ASTOpBitXor::BitXor(Box::new(raw_ast_to_ast_OpCast(*ast_0)), Some(({
    raw_ast_to_ast__OpBitXor1(*ast_1).into_iter().map(|item| {
        (item.0, Box::new(raw_ast_to_ast_OpCast(*item.1)),)
    }).collect::<_>()
},))),
    }
}

fn raw_ast_to_ast__OpShift1(ast: RawAST_OpShift1) -> Vec<(String, Box<RawASTOpBitOr>,)> {
    let mut result = Vec::new();
    let mut ast = ast;
    
    loop {
        match ast {
            RawAST_OpShift1::OpShift1ShiftLReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpShift1::OpShift1ShiftLReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
	RawAST_OpShift1::OpShift1ShiftRReduce0(ast_0, ast_1) => {
    result.push((ast_0, ast_1,));
                return result;
}
	RawAST_OpShift1::OpShift1ShiftRReduce1(ast_0, ast_1, ast_2) => {
    result.push((ast_0, ast_1,));
                ast = *ast_2;
}
        }
    }
}

enum StackItem {
	AST(RawAST),
	State(usize),
}

enum Action {
	Accept,
	Goto(usize),
	Shift(usize),
	Reduce(usize, String, String),
}

lazy_static! {
	static ref action_table: [(HashMap<TokenType, Action>, HashMap<String, Action>, Vec<String>); 633] = [
		(vec![(TokenType::LiteralString, Action::Shift(13)), (TokenType::KeywordAs, Action::Shift(6)), (TokenType::Id, Action::Shift(8)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpSub, Action::Shift(28)), (TokenType::KeywordFor, Action::Shift(7)), (TokenType::OpNot, Action::Shift(27)), (TokenType::ParenL, Action::Shift(29)), (TokenType::BraceL, Action::Shift(32)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::KeywordIf, Action::Shift(9))].into_iter().collect(), vec![("statement".to_owned(), Action::Goto(2)), ("left-value".to_owned(), Action::Goto(3)), ("op-or".to_owned(), Action::Goto(4)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("statement-list".to_owned(), Action::Goto(14)), ("function-call".to_owned(), Action::Goto(30)), ("literal".to_owned(), Action::Goto(31)), ("for-statement".to_owned(), Action::Goto(34)), ("if-statement".to_owned(), Action::Goto(35)), ("op-addsub".to_owned(), Action::Goto(21)), ("scope-statement".to_owned(), Action::Goto(36)), ("_statement-list-1".to_owned(), Action::Goto(37)), ("op-bit-and".to_owned(), Action::Goto(18)), ("assignment".to_owned(), Action::Goto(5)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("expression".to_owned(), Action::Goto(33)), ("op-cmp".to_owned(), Action::Goto(16)), ("module".to_owned(), Action::Goto(1)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-single".to_owned(), Action::Goto(20)), ("op-shift".to_owned(), Action::Goto(22)), ("op-cast".to_owned(), Action::Goto(19)), ("op-and".to_owned(), Action::Goto(23))].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Eof, Action::Accept)].into_iter().collect(), vec![].into_iter().collect(), vec![]),
		(vec![(TokenType::ParenL, Action::Shift(29)), (TokenType::Eof, Action::Reduce(1, "_statement-list-1".to_owned(), "_statement-list-1_statement-list-1-statement-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Shift(9)), (TokenType::KeywordAs, Action::Shift(6)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::BraceL, Action::Shift(32)), (TokenType::KeywordFor, Action::Shift(7)), (TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpSub, Action::Shift(28)), (TokenType::Id, Action::Shift(8))].into_iter().collect(), vec![("op-shift".to_owned(), Action::Goto(22)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("scope-statement".to_owned(), Action::Goto(36)), ("op-and".to_owned(), Action::Goto(23)), ("assignment".to_owned(), Action::Goto(5)), ("op-single".to_owned(), Action::Goto(20)), ("expression".to_owned(), Action::Goto(33)), ("if-statement".to_owned(), Action::Goto(35)), ("op-addsub".to_owned(), Action::Goto(21)), ("literal".to_owned(), Action::Goto(31)), ("op-cmp".to_owned(), Action::Goto(16)), ("function-call".to_owned(), Action::Goto(30)), ("statement".to_owned(), Action::Goto(2)), ("op-bit-or".to_owned(), Action::Goto(24)), ("for-statement".to_owned(), Action::Goto(34)), ("left-value".to_owned(), Action::Goto(3)), ("op-cast".to_owned(), Action::Goto(19)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-or".to_owned(), Action::Goto(4)), ("_statement-list-1".to_owned(), Action::Goto(144))].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignShiftR, Action::Shift(65)), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssign, Action::Shift(55)), (TokenType::OpAssignShiftL, Action::Shift(64)), (TokenType::OpAssignBitNot, Action::Shift(58)), (TokenType::Semicolon, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignBitXor, Action::Shift(60)), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignMul, Action::Shift(63)), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignBitAnd, Action::Shift(57)), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignMod, Action::Shift(62)), (TokenType::OpAssignBitOr, Action::Shift(59)), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignSub, Action::Shift(66)), (TokenType::OpAssignDiv, Action::Shift(61)), (TokenType::OpAssignAdd, Action::Shift(56))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-assign".to_owned(), "op-assign-add".to_owned(), "op-assign-bit-and".to_owned(), "op-assign-bit-not".to_owned(), "op-assign-bit-or".to_owned(), "op-assign-bit-xor".to_owned(), "op-assign-div".to_owned(), "op-assign-mod".to_owned(), "op-assign-mul".to_owned(), "op-assign-shift-l".to_owned(), "op-assign-shift-r".to_owned(), "op-assign-sub".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(1, "assignment".to_owned(), "assignmentor-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(1, "expression".to_owned(), "expressionassignment-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(38))].into_iter().collect(), vec![].into_iter().collect(), vec!["id".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::ParenL, Action::Shift(106)), (TokenType::Id, Action::Shift(141)), (TokenType::OpNot, Action::Shift(104)), (TokenType::OpSub, Action::Shift(105)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::BraceL, Action::Shift(32))].into_iter().collect(), vec![("op-bit-or".to_owned(), Action::Goto(101)), ("function-call".to_owned(), Action::Goto(107)), ("literal".to_owned(), Action::Goto(108)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-shift".to_owned(), Action::Goto(99)), ("op-or".to_owned(), Action::Goto(84)), ("op-single".to_owned(), Action::Goto(97)), ("assignment".to_owned(), Action::Goto(85)), ("op-cast".to_owned(), Action::Goto(96)), ("expression".to_owned(), Action::Goto(142)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-and".to_owned(), Action::Goto(100)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("left-value".to_owned(), Action::Goto(83)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("scope-statement".to_owned(), Action::Goto(143))].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenL, Action::Shift(140)), (TokenType::OpMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssign, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitNot, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-assign".to_owned(), "op-assign-add".to_owned(), "op-assign-bit-and".to_owned(), "op-assign-bit-not".to_owned(), "op-assign-bit-or".to_owned(), "op-assign-bit-xor".to_owned(), "op-assign-div".to_owned(), "op-assign-mod".to_owned(), "op-assign-mul".to_owned(), "op-assign-shift-l".to_owned(), "op-assign-shift-r".to_owned(), "op-assign-sub".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-l".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(104)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::OpSub, Action::Shift(105)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::LiteralBool, Action::Shift(88))].into_iter().collect(), vec![("expression".to_owned(), Action::Goto(87)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-single".to_owned(), Action::Goto(97)), ("op-and".to_owned(), Action::Goto(100)), ("op-or".to_owned(), Action::Goto(84)), ("op-shift".to_owned(), Action::Goto(99)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("literal".to_owned(), Action::Goto(108)), ("assignment".to_owned(), Action::Goto(85)), ("left-value".to_owned(), Action::Goto(83)), ("function-call".to_owned(), Action::Goto(107)), ("op-cast".to_owned(), Action::Goto(96))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::Eof, Action::Reduce(1, "module".to_owned(), "modulestatement-list-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec![]),
		(vec![(TokenType::OpGtEq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpSub, Action::Shift(73)), (TokenType::OpEq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpAdd, Action::Shift(72)), (TokenType::OpNeq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-addsub-1".to_owned(), Action::Goto(74))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Shift(41)), (TokenType::OpOr, Action::Reduce(1, "op-and".to_owned(), "op-andand-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "op-and".to_owned(), "op-andand-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-and-1".to_owned(), Action::Goto(42))].into_iter().collect(), vec!["op-and".to_owned(), "op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Shift(68)), (TokenType::OpAnd, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-and-1".to_owned(), Action::Goto(69))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Shift(70))].into_iter().collect(), vec![("_op-bit-or-1".to_owned(), Action::Goto(71))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Shift(53)), (TokenType::OpBitAnd, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-xor-1".to_owned(), Action::Goto(54))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpBitOr, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Shift(51)), (TokenType::OpSub, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-cast-1".to_owned(), Action::Goto(52))].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Shift(50)), (TokenType::OpOr, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned())), (TokenType::OpGt, Action::Shift(46)), (TokenType::OpGtEq, Action::Shift(47)), (TokenType::OpLsEq, Action::Shift(49)), (TokenType::OpEq, Action::Shift(45)), (TokenType::Semicolon, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned())), (TokenType::OpLs, Action::Shift(48))].into_iter().collect(), vec![("op-cmp-op".to_owned(), Action::Goto(43)), ("_op-cmp-1".to_owned(), Action::Goto(44))].into_iter().collect(), vec!["op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpMul, Action::Shift(138)), (TokenType::OpGt, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpDiv, Action::Shift(136)), (TokenType::OpAnd, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpMod, Action::Shift(137)), (TokenType::OpLsEq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(139))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpOr, Action::Shift(39)), (TokenType::Semicolon, Action::Reduce(1, "op-or".to_owned(), "op-oror-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-or-1".to_owned(), Action::Goto(40))].into_iter().collect(), vec!["op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Shift(75)), (TokenType::OpLs, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Shift(76)), (TokenType::OpDiv, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-shift-1".to_owned(), Action::Goto(77))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::Id, Action::Shift(78)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpNot, Action::Shift(27))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(79)), ("function-call".to_owned(), Action::Goto(30)), ("left-value".to_owned(), Action::Goto(80)), ("literal".to_owned(), Action::Goto(31))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Shift(26)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::Id, Action::Shift(78)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpNot, Action::Shift(27)), (TokenType::ParenL, Action::Shift(29))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(81)), ("literal".to_owned(), Action::Goto(31)), ("left-value".to_owned(), Action::Goto(80)), ("function-call".to_owned(), Action::Goto(30))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::Id, Action::Shift(78)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpNot, Action::Shift(27))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(82)), ("literal".to_owned(), Action::Goto(31)), ("function-call".to_owned(), Action::Goto(30)), ("left-value".to_owned(), Action::Goto(80))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::ParenL, Action::Shift(29)), (TokenType::Id, Action::Shift(78)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::OpSub, Action::Shift(28)), (TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralString, Action::Shift(13))].into_iter().collect(), vec![("literal".to_owned(), Action::Goto(31)), ("function-call".to_owned(), Action::Goto(30)), ("op-single".to_owned(), Action::Goto(109)), ("left-value".to_owned(), Action::Goto(80))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(132)), (TokenType::OpSub, Action::Shift(131)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::Id, Action::Shift(113)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpNot, Action::Shift(130))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(110)), ("op-cast".to_owned(), Action::Goto(122)), ("expression".to_owned(), Action::Goto(133)), ("op-single".to_owned(), Action::Goto(123)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-cmp".to_owned(), Action::Goto(119)), ("literal".to_owned(), Action::Goto(135)), ("op-and".to_owned(), Action::Goto(126)), ("op-or".to_owned(), Action::Goto(111)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-bit-or".to_owned(), Action::Goto(127)), ("assignment".to_owned(), Action::Goto(112)), ("op-addsub".to_owned(), Action::Goto(124)), ("function-call".to_owned(), Action::Goto(134)), ("op-shift".to_owned(), Action::Goto(125))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::KeywordFor, Action::Shift(147)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::Id, Action::Shift(8)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::OpSub, Action::Shift(28)), (TokenType::KeywordAs, Action::Shift(146)), (TokenType::BraceL, Action::Shift(149)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::BraceR, Action::Shift(150)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::KeywordIf, Action::Shift(148)), (TokenType::OpNot, Action::Shift(27))].into_iter().collect(), vec![("assignment".to_owned(), Action::Goto(5)), ("op-single".to_owned(), Action::Goto(20)), ("left-value".to_owned(), Action::Goto(3)), ("op-bit-and".to_owned(), Action::Goto(18)), ("statement".to_owned(), Action::Goto(145)), ("if-statement".to_owned(), Action::Goto(154)), ("function-call".to_owned(), Action::Goto(30)), ("op-cmp".to_owned(), Action::Goto(16)), ("expression".to_owned(), Action::Goto(152)), ("op-cast".to_owned(), Action::Goto(19)), ("op-and".to_owned(), Action::Goto(23)), ("_statement-list-1".to_owned(), Action::Goto(156)), ("op-addsub".to_owned(), Action::Goto(21)), ("statement-list".to_owned(), Action::Goto(151)), ("for-statement".to_owned(), Action::Goto(153)), ("op-shift".to_owned(), Action::Goto(22)), ("literal".to_owned(), Action::Goto(31)), ("op-or".to_owned(), Action::Goto(4)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("scope-statement".to_owned(), Action::Goto(155)), ("op-bit-or".to_owned(), Action::Goto(24))].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Shift(67))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Eof, Action::Reduce(1, "statement-list".to_owned(), "statement-liststatement-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec![]),
		(vec![(TokenType::KeywordFor, Action::Shift(214))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-for".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpSub, Action::Shift(28)), (TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::Id, Action::Shift(78)), (TokenType::ParenL, Action::Shift(29)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::OpAdd, Action::Shift(25))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(80)), ("literal".to_owned(), Action::Goto(31)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-and".to_owned(), Action::Goto(180)), ("op-cast".to_owned(), Action::Goto(19)), ("op-single".to_owned(), Action::Goto(20)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("op-shift".to_owned(), Action::Goto(22)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-addsub".to_owned(), Action::Goto(21)), ("function-call".to_owned(), Action::Goto(30)), ("op-bit-xor".to_owned(), Action::Goto(17))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(2, "op-or".to_owned(), "op-oror-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Shift(25)), (TokenType::OpSub, Action::Shift(28)), (TokenType::Id, Action::Shift(78)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::ParenL, Action::Shift(29)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::LiteralInteger, Action::Shift(12))].into_iter().collect(), vec![("literal".to_owned(), Action::Goto(31)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-cast".to_owned(), Action::Goto(19)), ("op-single".to_owned(), Action::Goto(20)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-shift".to_owned(), Action::Goto(22)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-cmp".to_owned(), Action::Goto(178)), ("function-call".to_owned(), Action::Goto(30)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("op-addsub".to_owned(), Action::Goto(21)), ("left-value".to_owned(), Action::Goto(80))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "op-and".to_owned(), "op-andand-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "op-and".to_owned(), "op-andand-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::Id, Action::Shift(78)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpNot, Action::Shift(27)), (TokenType::ParenL, Action::Shift(29))].into_iter().collect(), vec![("op-shift".to_owned(), Action::Goto(22)), ("function-call".to_owned(), Action::Goto(30)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-cast".to_owned(), Action::Goto(19)), ("op-single".to_owned(), Action::Goto(20)), ("op-addsub".to_owned(), Action::Goto(175)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("left-value".to_owned(), Action::Goto(80)), ("op-bit-or".to_owned(), Action::Goto(24)), ("literal".to_owned(), Action::Goto(31))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-and".to_owned(), "op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opeq-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opeq-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opeq-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opeq-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opeq-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opeq-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opeq-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opeq-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opeq-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opeq-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-eq-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-eq-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-eq-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-eq-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-eq-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-eq-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-eq-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-eq-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-eq-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opgt-eq-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-eq-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-eq-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-eq-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-eq-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-eq-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-eq-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-eq-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-eq-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-eq-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opls-eq-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenL, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opneq-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opneq-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opneq-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opneq-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opneq-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opneq-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opneq-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opneq-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opneq-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-cmp-op".to_owned(), "op-cmp-opneq-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::KeywordF64, Action::Shift(161)), (TokenType::KeywordI8, Action::Shift(166)), (TokenType::KeywordI64, Action::Shift(165)), (TokenType::KeywordF32, Action::Shift(160)), (TokenType::KeywordF16, Action::Shift(159)), (TokenType::KeywordStr, Action::Shift(167)), (TokenType::KeywordU8, Action::Shift(172)), (TokenType::KeywordI128, Action::Shift(162)), (TokenType::KeywordU128, Action::Shift(168)), (TokenType::KeywordI16, Action::Shift(163)), (TokenType::KeywordU32, Action::Shift(170)), (TokenType::KeywordU64, Action::Shift(171)), (TokenType::KeywordBool, Action::Shift(158)), (TokenType::KeywordI32, Action::Shift(164)), (TokenType::KeywordU16, Action::Shift(169))].into_iter().collect(), vec![("type".to_owned(), Action::Goto(157))].into_iter().collect(), vec!["keyword-bool".to_owned(), "keyword-f16".to_owned(), "keyword-f32".to_owned(), "keyword-f64".to_owned(), "keyword-i128".to_owned(), "keyword-i16".to_owned(), "keyword-i32".to_owned(), "keyword-i64".to_owned(), "keyword-i8".to_owned(), "keyword-str".to_owned(), "keyword-u128".to_owned(), "keyword-u16".to_owned(), "keyword-u32".to_owned(), "keyword-u64".to_owned(), "keyword-u8".to_owned()]),
		(vec![(TokenType::OpShiftR, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpSub, Action::Shift(28)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::Id, Action::Shift(78)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::LiteralBool, Action::Shift(10))].into_iter().collect(), vec![("function-call".to_owned(), Action::Goto(30)), ("left-value".to_owned(), Action::Goto(80)), ("op-single".to_owned(), Action::Goto(20)), ("literal".to_owned(), Action::Goto(31)), ("op-cast".to_owned(), Action::Goto(173))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(27)), (TokenType::Id, Action::Shift(8)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::ParenL, Action::Shift(29)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::OpSub, Action::Shift(28)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::OpAdd, Action::Shift(25))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(19)), ("op-shift".to_owned(), Action::Goto(22)), ("literal".to_owned(), Action::Goto(31)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-and".to_owned(), Action::Goto(23)), ("function-call".to_owned(), Action::Goto(30)), ("left-value".to_owned(), Action::Goto(3)), ("assignment".to_owned(), Action::Goto(179)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-or".to_owned(), Action::Goto(4)), ("op-addsub".to_owned(), Action::Goto(21)), ("op-single".to_owned(), Action::Goto(20)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-bit-and".to_owned(), Action::Goto(18))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(13)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::Id, Action::Shift(8)), (TokenType::OpNot, Action::Shift(27)), (TokenType::OpBitNot, Action::Shift(26))].into_iter().collect(), vec![("function-call".to_owned(), Action::Goto(30)), ("literal".to_owned(), Action::Goto(31)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-shift".to_owned(), Action::Goto(22)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-and".to_owned(), Action::Goto(23)), ("op-single".to_owned(), Action::Goto(20)), ("op-or".to_owned(), Action::Goto(4)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-addsub".to_owned(), Action::Goto(21)), ("op-cast".to_owned(), Action::Goto(19)), ("left-value".to_owned(), Action::Goto(3)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("assignment".to_owned(), Action::Goto(174))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Shift(25)), (TokenType::OpNot, Action::Shift(27)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::Id, Action::Shift(8)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralString, Action::Shift(13))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(19)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-shift".to_owned(), Action::Goto(22)), ("literal".to_owned(), Action::Goto(31)), ("left-value".to_owned(), Action::Goto(3)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("assignment".to_owned(), Action::Goto(185)), ("op-or".to_owned(), Action::Goto(4)), ("op-and".to_owned(), Action::Goto(23)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-single".to_owned(), Action::Goto(20)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-addsub".to_owned(), Action::Goto(21)), ("function-call".to_owned(), Action::Goto(30))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(8)), (TokenType::ParenL, Action::Shift(29)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::OpSub, Action::Shift(28)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralString, Action::Shift(13))].into_iter().collect(), vec![("op-and".to_owned(), Action::Goto(23)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("op-single".to_owned(), Action::Goto(20)), ("literal".to_owned(), Action::Goto(31)), ("op-or".to_owned(), Action::Goto(4)), ("op-cmp".to_owned(), Action::Goto(16)), ("assignment".to_owned(), Action::Goto(177)), ("op-shift".to_owned(), Action::Goto(22)), ("op-bit-and".to_owned(), Action::Goto(18)), ("function-call".to_owned(), Action::Goto(30)), ("op-bit-or".to_owned(), Action::Goto(24)), ("left-value".to_owned(), Action::Goto(3)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-cast".to_owned(), Action::Goto(19)), ("op-addsub".to_owned(), Action::Goto(21))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(13)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::Id, Action::Shift(8)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpNot, Action::Shift(27))].into_iter().collect(), vec![("literal".to_owned(), Action::Goto(31)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("op-or".to_owned(), Action::Goto(4)), ("op-addsub".to_owned(), Action::Goto(21)), ("op-single".to_owned(), Action::Goto(20)), ("function-call".to_owned(), Action::Goto(30)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-cast".to_owned(), Action::Goto(19)), ("assignment".to_owned(), Action::Goto(176)), ("op-and".to_owned(), Action::Goto(23)), ("op-shift".to_owned(), Action::Goto(22)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("left-value".to_owned(), Action::Goto(3))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(28)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::Id, Action::Shift(8)), (TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::ParenL, Action::Shift(29)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpAdd, Action::Shift(25))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(18)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-cast".to_owned(), Action::Goto(19)), ("op-single".to_owned(), Action::Goto(20)), ("literal".to_owned(), Action::Goto(31)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-shift".to_owned(), Action::Goto(22)), ("op-and".to_owned(), Action::Goto(23)), ("assignment".to_owned(), Action::Goto(183)), ("function-call".to_owned(), Action::Goto(30)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("left-value".to_owned(), Action::Goto(3)), ("op-addsub".to_owned(), Action::Goto(21)), ("op-or".to_owned(), Action::Goto(4)), ("op-muldivmod".to_owned(), Action::Goto(15))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(8)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::ParenL, Action::Shift(29)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::OpNot, Action::Shift(27)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralBool, Action::Shift(10))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(20)), ("op-or".to_owned(), Action::Goto(4)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("assignment".to_owned(), Action::Goto(181)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-cast".to_owned(), Action::Goto(19)), ("op-and".to_owned(), Action::Goto(23)), ("op-addsub".to_owned(), Action::Goto(21)), ("function-call".to_owned(), Action::Goto(30)), ("op-cmp".to_owned(), Action::Goto(16)), ("left-value".to_owned(), Action::Goto(3)), ("op-bit-or".to_owned(), Action::Goto(24)), ("literal".to_owned(), Action::Goto(31)), ("op-shift".to_owned(), Action::Goto(22))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(13)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::Id, Action::Shift(8)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpNot, Action::Shift(27)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpBitNot, Action::Shift(26))].into_iter().collect(), vec![("op-or".to_owned(), Action::Goto(4)), ("literal".to_owned(), Action::Goto(31)), ("op-addsub".to_owned(), Action::Goto(21)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-shift".to_owned(), Action::Goto(22)), ("assignment".to_owned(), Action::Goto(182)), ("left-value".to_owned(), Action::Goto(3)), ("op-and".to_owned(), Action::Goto(23)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-single".to_owned(), Action::Goto(20)), ("op-cast".to_owned(), Action::Goto(19)), ("function-call".to_owned(), Action::Goto(30)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-muldivmod".to_owned(), Action::Goto(15))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(28)), (TokenType::OpNot, Action::Shift(27)), (TokenType::ParenL, Action::Shift(29)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::Id, Action::Shift(8)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::LiteralDecimal, Action::Shift(11))].into_iter().collect(), vec![("op-bit-xor".to_owned(), Action::Goto(17)), ("assignment".to_owned(), Action::Goto(187)), ("op-bit-and".to_owned(), Action::Goto(18)), ("left-value".to_owned(), Action::Goto(3)), ("op-bit-or".to_owned(), Action::Goto(24)), ("literal".to_owned(), Action::Goto(31)), ("op-addsub".to_owned(), Action::Goto(21)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-shift".to_owned(), Action::Goto(22)), ("function-call".to_owned(), Action::Goto(30)), ("op-cast".to_owned(), Action::Goto(19)), ("op-and".to_owned(), Action::Goto(23)), ("op-or".to_owned(), Action::Goto(4)), ("op-single".to_owned(), Action::Goto(20))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(8)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::ParenL, Action::Shift(29)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::OpSub, Action::Shift(28))].into_iter().collect(), vec![("op-addsub".to_owned(), Action::Goto(21)), ("op-single".to_owned(), Action::Goto(20)), ("op-shift".to_owned(), Action::Goto(22)), ("left-value".to_owned(), Action::Goto(3)), ("assignment".to_owned(), Action::Goto(184)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-and".to_owned(), Action::Goto(23)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("literal".to_owned(), Action::Goto(31)), ("op-bit-or".to_owned(), Action::Goto(24)), ("function-call".to_owned(), Action::Goto(30)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-or".to_owned(), Action::Goto(4)), ("op-cast".to_owned(), Action::Goto(19))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::Id, Action::Shift(8)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpNot, Action::Shift(27)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpAdd, Action::Shift(25))].into_iter().collect(), vec![("op-muldivmod".to_owned(), Action::Goto(15)), ("op-single".to_owned(), Action::Goto(20)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-and".to_owned(), Action::Goto(23)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-bit-and".to_owned(), Action::Goto(18)), ("literal".to_owned(), Action::Goto(31)), ("function-call".to_owned(), Action::Goto(30)), ("op-or".to_owned(), Action::Goto(4)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("left-value".to_owned(), Action::Goto(3)), ("op-cast".to_owned(), Action::Goto(19)), ("op-shift".to_owned(), Action::Goto(22)), ("op-addsub".to_owned(), Action::Goto(21)), ("assignment".to_owned(), Action::Goto(186))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::ParenL, Action::Shift(29)), (TokenType::Id, Action::Shift(8))].into_iter().collect(), vec![("op-muldivmod".to_owned(), Action::Goto(15)), ("op-single".to_owned(), Action::Goto(20)), ("op-cast".to_owned(), Action::Goto(19)), ("op-and".to_owned(), Action::Goto(23)), ("left-value".to_owned(), Action::Goto(3)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-bit-or".to_owned(), Action::Goto(24)), ("assignment".to_owned(), Action::Goto(223)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-shift".to_owned(), Action::Goto(22)), ("op-or".to_owned(), Action::Goto(4)), ("op-bit-and".to_owned(), Action::Goto(18)), ("literal".to_owned(), Action::Goto(31)), ("op-addsub".to_owned(), Action::Goto(21)), ("function-call".to_owned(), Action::Goto(30))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpNot, Action::Shift(27)), (TokenType::OpSub, Action::Shift(28)), (TokenType::ParenL, Action::Shift(29)), (TokenType::Id, Action::Shift(78)), (TokenType::OpAdd, Action::Shift(25))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(80)), ("op-bit-xor".to_owned(), Action::Goto(218)), ("op-cast".to_owned(), Action::Goto(19)), ("function-call".to_owned(), Action::Goto(30)), ("op-single".to_owned(), Action::Goto(20)), ("literal".to_owned(), Action::Goto(31))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(28)), (TokenType::Id, Action::Shift(78)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::ParenL, Action::Shift(29)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::OpNot, Action::Shift(27))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(19)), ("op-single".to_owned(), Action::Goto(20)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-bit-and".to_owned(), Action::Goto(219)), ("function-call".to_owned(), Action::Goto(30)), ("left-value".to_owned(), Action::Goto(80)), ("literal".to_owned(), Action::Goto(31))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(28)), (TokenType::ParenL, Action::Shift(29)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::Id, Action::Shift(78)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::OpAdd, Action::Shift(25))].into_iter().collect(), vec![("function-call".to_owned(), Action::Goto(30)), ("op-single".to_owned(), Action::Goto(20)), ("literal".to_owned(), Action::Goto(31)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-muldivmod".to_owned(), Action::Goto(220)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-cast".to_owned(), Action::Goto(19)), ("op-shift".to_owned(), Action::Goto(22)), ("op-bit-and".to_owned(), Action::Goto(18)), ("left-value".to_owned(), Action::Goto(80))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::OpNot, Action::Shift(27)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpSub, Action::Shift(28)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::Id, Action::Shift(78)), (TokenType::LiteralDecimal, Action::Shift(11))].into_iter().collect(), vec![("op-muldivmod".to_owned(), Action::Goto(221)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-cast".to_owned(), Action::Goto(19)), ("function-call".to_owned(), Action::Goto(30)), ("op-single".to_owned(), Action::Goto(20)), ("op-shift".to_owned(), Action::Goto(22)), ("literal".to_owned(), Action::Goto(31)), ("op-bit-and".to_owned(), Action::Goto(18)), ("left-value".to_owned(), Action::Goto(80)), ("op-bit-or".to_owned(), Action::Goto(24))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::Id, Action::Shift(78)), (TokenType::OpNot, Action::Shift(27)), (TokenType::OpSub, Action::Shift(28))].into_iter().collect(), vec![("op-bit-or".to_owned(), Action::Goto(224)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-single".to_owned(), Action::Goto(20)), ("op-cast".to_owned(), Action::Goto(19)), ("left-value".to_owned(), Action::Goto(80)), ("function-call".to_owned(), Action::Goto(30)), ("literal".to_owned(), Action::Goto(31))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::OpSub, Action::Shift(28)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::Id, Action::Shift(78)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpAdd, Action::Shift(25))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(80)), ("function-call".to_owned(), Action::Goto(30)), ("literal".to_owned(), Action::Goto(31)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-cast".to_owned(), Action::Goto(19)), ("op-bit-or".to_owned(), Action::Goto(222)), ("op-single".to_owned(), Action::Goto(20))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenL, Action::Shift(140)), (TokenType::OpMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-l".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignBitOr, Action::Shift(194)), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignBitXor, Action::Shift(195)), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignMul, Action::Shift(198)), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignShiftR, Action::Shift(200)), (TokenType::OpAssignDiv, Action::Shift(196)), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignAdd, Action::Shift(191)), (TokenType::BraceL, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignShiftL, Action::Shift(199)), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignBitNot, Action::Shift(193)), (TokenType::OpAssignBitAnd, Action::Shift(192)), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignMod, Action::Shift(197)), (TokenType::OpAssignSub, Action::Shift(201)), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssign, Action::Shift(190))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-assign".to_owned(), "op-assign-add".to_owned(), "op-assign-bit-and".to_owned(), "op-assign-bit-not".to_owned(), "op-assign-bit-or".to_owned(), "op-assign-bit-xor".to_owned(), "op-assign-div".to_owned(), "op-assign-mod".to_owned(), "op-assign-mul".to_owned(), "op-assign-shift-l".to_owned(), "op-assign-shift-r".to_owned(), "op-assign-sub".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(1, "assignment".to_owned(), "assignmentor-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(1, "expression".to_owned(), "expressionassignment-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssign, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitNot, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenL, Action::Shift(271)), (TokenType::OpAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-assign".to_owned(), "op-assign-add".to_owned(), "op-assign-bit-and".to_owned(), "op-assign-bit-not".to_owned(), "op-assign-bit-or".to_owned(), "op-assign-bit-xor".to_owned(), "op-assign-div".to_owned(), "op-assign-mod".to_owned(), "op-assign-mul".to_owned(), "op-assign-shift-l".to_owned(), "op-assign-shift-r".to_owned(), "op-assign-sub".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(263))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(262))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpSub, Action::Shift(216)), (TokenType::OpGtEq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpAdd, Action::Shift(215)), (TokenType::OpNeq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-addsub-1".to_owned(), Action::Goto(217))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Shift(188)), (TokenType::OpOr, Action::Reduce(1, "op-and".to_owned(), "op-andand-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "op-and".to_owned(), "op-andand-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-and-1".to_owned(), Action::Goto(189))].into_iter().collect(), vec!["brace-l".to_owned(), "op-and".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Shift(202)), (TokenType::OpLsEq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-and-1".to_owned(), Action::Goto(203))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpShiftR, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Shift(206)), (TokenType::OpGt, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-or-1".to_owned(), Action::Goto(207))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Shift(204)), (TokenType::OpBitOr, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-xor-1".to_owned(), Action::Goto(205))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Shift(212)), (TokenType::OpOr, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-cast-1".to_owned(), Action::Goto(213))].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned())), (TokenType::OpEq, Action::Shift(45)), (TokenType::BraceL, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned())), (TokenType::OpLs, Action::Shift(48)), (TokenType::OpNeq, Action::Shift(50)), (TokenType::OpGtEq, Action::Shift(47)), (TokenType::OpGt, Action::Shift(46)), (TokenType::OpOr, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Shift(49))].into_iter().collect(), vec![("op-cmp-op".to_owned(), Action::Goto(210)), ("_op-cmp-1".to_owned(), Action::Goto(211))].into_iter().collect(), vec!["brace-l".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Shift(258)), (TokenType::OpMul, Action::Shift(260)), (TokenType::OpEq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpMod, Action::Shift(259)), (TokenType::OpAnd, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(261))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpOr, Action::Shift(208)), (TokenType::BraceL, Action::Reduce(1, "op-or".to_owned(), "op-oror-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-or-1".to_owned(), Action::Goto(209))].into_iter().collect(), vec!["brace-l".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Shift(239)), (TokenType::OpShiftR, Action::Shift(240)), (TokenType::OpGtEq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-shift-1".to_owned(), Action::Goto(241))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::Id, Action::Shift(244)), (TokenType::ParenL, Action::Shift(106))].into_iter().collect(), vec![("literal".to_owned(), Action::Goto(108)), ("function-call".to_owned(), Action::Goto(107)), ("left-value".to_owned(), Action::Goto(246)), ("op-single".to_owned(), Action::Goto(253))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Shift(103)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpNot, Action::Shift(104)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::Id, Action::Shift(244)), (TokenType::ParenL, Action::Shift(106))].into_iter().collect(), vec![("function-call".to_owned(), Action::Goto(107)), ("left-value".to_owned(), Action::Goto(246)), ("literal".to_owned(), Action::Goto(108)), ("op-single".to_owned(), Action::Goto(245))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::ParenL, Action::Shift(106)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpNot, Action::Shift(104)), (TokenType::Id, Action::Shift(244)), (TokenType::OpSub, Action::Shift(105))].into_iter().collect(), vec![("literal".to_owned(), Action::Goto(108)), ("left-value".to_owned(), Action::Goto(246)), ("op-single".to_owned(), Action::Goto(265)), ("function-call".to_owned(), Action::Goto(107))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::Id, Action::Shift(244)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::OpSub, Action::Shift(105)), (TokenType::ParenL, Action::Shift(106))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(246)), ("function-call".to_owned(), Action::Goto(107)), ("literal".to_owned(), Action::Goto(108)), ("op-single".to_owned(), Action::Goto(266))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(113)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::ParenL, Action::Shift(132)), (TokenType::OpNot, Action::Shift(130)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpBitNot, Action::Shift(129))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(123)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("function-call".to_owned(), Action::Goto(134)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-bit-or".to_owned(), Action::Goto(127)), ("op-shift".to_owned(), Action::Goto(125)), ("op-addsub".to_owned(), Action::Goto(124)), ("op-and".to_owned(), Action::Goto(126)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("op-cast".to_owned(), Action::Goto(122)), ("assignment".to_owned(), Action::Goto(112)), ("left-value".to_owned(), Action::Goto(110)), ("expression".to_owned(), Action::Goto(270)), ("op-or".to_owned(), Action::Goto(111)), ("op-cmp".to_owned(), Action::Goto(119)), ("literal".to_owned(), Action::Goto(135))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssign, Action::Shift(227)), (TokenType::OpAssignBitNot, Action::Shift(230)), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignSub, Action::Shift(238)), (TokenType::OpAssignBitOr, Action::Shift(231)), (TokenType::OpAssignShiftL, Action::Shift(236)), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignAdd, Action::Shift(228)), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignBitAnd, Action::Shift(229)), (TokenType::OpAssignBitXor, Action::Shift(232)), (TokenType::OpAssignMul, Action::Shift(235)), (TokenType::OpAssignShiftR, Action::Shift(237)), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignDiv, Action::Shift(233)), (TokenType::OpAssignMod, Action::Shift(234)), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-assign".to_owned(), "op-assign-add".to_owned(), "op-assign-bit-and".to_owned(), "op-assign-bit-not".to_owned(), "op-assign-bit-or".to_owned(), "op-assign-bit-xor".to_owned(), "op-assign-div".to_owned(), "op-assign-mod".to_owned(), "op-assign-mul".to_owned(), "op-assign-shift-l".to_owned(), "op-assign-shift-r".to_owned(), "op-assign-sub".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(1, "assignment".to_owned(), "assignmentor-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(1, "expression".to_owned(), "expressionassignment-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::OpAssignBitNot, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenL, Action::Shift(319)), (TokenType::OpAssignBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssign, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-assign".to_owned(), "op-assign-add".to_owned(), "op-assign-bit-and".to_owned(), "op-assign-bit-not".to_owned(), "op-assign-bit-or".to_owned(), "op-assign-bit-xor".to_owned(), "op-assign-div".to_owned(), "op-assign-mod".to_owned(), "op-assign-mul".to_owned(), "op-assign-shift-l".to_owned(), "op-assign-shift-r".to_owned(), "op-assign-sub".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-l".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(268)), (TokenType::OpGt, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpAdd, Action::Shift(267)), (TokenType::OpAnd, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-addsub-1".to_owned(), Action::Goto(269))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(1, "op-and".to_owned(), "op-andand-reduce-0".to_owned())), (TokenType::OpAnd, Action::Shift(225)), (TokenType::OpOr, Action::Reduce(1, "op-and".to_owned(), "op-andand-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-and-1".to_owned(), Action::Goto(226))].into_iter().collect(), vec!["op-and".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Shift(242)), (TokenType::OpOr, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-and-1".to_owned(), Action::Goto(243))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitOr, Action::Shift(251)), (TokenType::OpAdd, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-or-1".to_owned(), Action::Goto(252))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Shift(247)), (TokenType::OpAdd, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-xor-1".to_owned(), Action::Goto(248))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftL, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Shift(249)), (TokenType::OpMod, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-cast-1".to_owned(), Action::Goto(250))].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Shift(47)), (TokenType::OpLsEq, Action::Shift(49)), (TokenType::OpOr, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned())), (TokenType::OpEq, Action::Shift(45)), (TokenType::OpNeq, Action::Shift(50)), (TokenType::OpGt, Action::Shift(46)), (TokenType::OpLs, Action::Shift(48)), (TokenType::ParenR, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-cmp-1".to_owned(), Action::Goto(255)), ("op-cmp-op".to_owned(), Action::Goto(254))].into_iter().collect(), vec!["op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Shift(285)), (TokenType::OpNeq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpMod, Action::Shift(286)), (TokenType::OpGt, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpMul, Action::Shift(287)), (TokenType::OpGtEq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(288))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpOr, Action::Shift(256)), (TokenType::ParenR, Action::Reduce(1, "op-or".to_owned(), "op-oror-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-or-1".to_owned(), Action::Goto(257))].into_iter().collect(), vec!["op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftL, Action::Shift(273)), (TokenType::OpEq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Shift(274)), (TokenType::OpAnd, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-shift-1".to_owned(), Action::Goto(275))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(132)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::OpNot, Action::Shift(130)), (TokenType::Id, Action::Shift(276)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralBool, Action::Shift(114))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(278)), ("literal".to_owned(), Action::Goto(135)), ("function-call".to_owned(), Action::Goto(134)), ("op-single".to_owned(), Action::Goto(283))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(117)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::Id, Action::Shift(276)), (TokenType::OpNot, Action::Shift(130)), (TokenType::OpSub, Action::Shift(131)), (TokenType::ParenL, Action::Shift(132)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralBool, Action::Shift(114))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(278)), ("op-single".to_owned(), Action::Goto(277)), ("literal".to_owned(), Action::Goto(135)), ("function-call".to_owned(), Action::Goto(134))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(132)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::Id, Action::Shift(276)), (TokenType::OpNot, Action::Shift(130))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(278)), ("op-single".to_owned(), Action::Goto(280)), ("function-call".to_owned(), Action::Goto(134)), ("literal".to_owned(), Action::Goto(135))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(276)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpSub, Action::Shift(131)), (TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::OpNot, Action::Shift(130))].into_iter().collect(), vec![("function-call".to_owned(), Action::Goto(134)), ("left-value".to_owned(), Action::Goto(278)), ("op-single".to_owned(), Action::Goto(279)), ("literal".to_owned(), Action::Goto(135))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpNot, Action::Shift(130)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::OpSub, Action::Shift(131)), (TokenType::Id, Action::Shift(113)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::ParenL, Action::Shift(132))].into_iter().collect(), vec![("op-and".to_owned(), Action::Goto(126)), ("op-addsub".to_owned(), Action::Goto(124)), ("op-or".to_owned(), Action::Goto(111)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-cast".to_owned(), Action::Goto(122)), ("op-bit-or".to_owned(), Action::Goto(127)), ("left-value".to_owned(), Action::Goto(110)), ("literal".to_owned(), Action::Goto(135)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("op-single".to_owned(), Action::Goto(123)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("expression".to_owned(), Action::Goto(284)), ("assignment".to_owned(), Action::Goto(112)), ("function-call".to_owned(), Action::Goto(134)), ("op-cmp".to_owned(), Action::Goto(119)), ("op-shift".to_owned(), Action::Goto(125))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenR, Action::Shift(264))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::ParenL, Action::Shift(29)), (TokenType::Id, Action::Shift(78)), (TokenType::OpNot, Action::Shift(27))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(18)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-cast".to_owned(), Action::Goto(19)), ("function-call".to_owned(), Action::Goto(30)), ("literal".to_owned(), Action::Goto(31)), ("op-shift".to_owned(), Action::Goto(290)), ("left-value".to_owned(), Action::Goto(80)), ("op-single".to_owned(), Action::Goto(20)), ("op-bit-or".to_owned(), Action::Goto(24))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(78)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::ParenL, Action::Shift(29)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpNot, Action::Shift(27)), (TokenType::OpBitNot, Action::Shift(26))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(19)), ("op-shift".to_owned(), Action::Goto(289)), ("function-call".to_owned(), Action::Goto(30)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-bit-and".to_owned(), Action::Goto(18)), ("left-value".to_owned(), Action::Goto(80)), ("op-single".to_owned(), Action::Goto(20)), ("literal".to_owned(), Action::Goto(31)), ("op-bit-or".to_owned(), Action::Goto(24))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(78)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::OpNot, Action::Shift(27)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::LiteralBool, Action::Shift(10))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(18)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-single".to_owned(), Action::Goto(20)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("literal".to_owned(), Action::Goto(31)), ("function-call".to_owned(), Action::Goto(30)), ("op-cast".to_owned(), Action::Goto(19)), ("left-value".to_owned(), Action::Goto(80)), ("op-shift".to_owned(), Action::Goto(291))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(300)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpNot, Action::Shift(314)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpSub, Action::Shift(315)), (TokenType::Id, Action::Shift(295)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::ParenL, Action::Shift(316)), (TokenType::ParenR, Action::Shift(296))].into_iter().collect(), vec![("op-or".to_owned(), Action::Goto(293)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-single".to_owned(), Action::Goto(307)), ("literal".to_owned(), Action::Goto(318)), ("function-call".to_owned(), Action::Goto(317)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("assignment".to_owned(), Action::Goto(294)), ("op-cast".to_owned(), Action::Goto(306)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-cmp".to_owned(), Action::Goto(303)), ("op-and".to_owned(), Action::Goto(310)), ("expression".to_owned(), Action::Goto(297)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-shift".to_owned(), Action::Goto(309)), ("left-value".to_owned(), Action::Goto(292)), ("op-addsub".to_owned(), Action::Goto(308))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitNot, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordIn, Action::Shift(323)), (TokenType::OpLs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::Comma, Action::Shift(322)), (TokenType::ParenL, Action::Shift(271)), (TokenType::OpDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssign, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned()))].into_iter().collect(), vec![("_for-statement-1".to_owned(), Action::Goto(324))].into_iter().collect(), vec!["brace-l".to_owned(), "comma".to_owned(), "keyword-as".to_owned(), "keyword-in".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-assign".to_owned(), "op-assign-add".to_owned(), "op-assign-bit-and".to_owned(), "op-assign-bit-not".to_owned(), "op-assign-bit-or".to_owned(), "op-assign-bit-xor".to_owned(), "op-assign-div".to_owned(), "op-assign-mod".to_owned(), "op-assign-mul".to_owned(), "op-assign-shift-l".to_owned(), "op-assign-shift-r".to_owned(), "op-assign-sub".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(32))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(321))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Eof, Action::Reduce(2, "_statement-list-1".to_owned(), "_statement-list-1_statement-list-1-statement-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec![]),
		(vec![(TokenType::LiteralString, Action::Shift(13)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::KeywordAs, Action::Shift(146)), (TokenType::BraceL, Action::Shift(149)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::Id, Action::Shift(8)), (TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::KeywordIf, Action::Shift(148)), (TokenType::BraceR, Action::Reduce(1, "_statement-list-1".to_owned(), "_statement-list-1_statement-list-1-statement-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Shift(147)), (TokenType::ParenL, Action::Shift(29)), (TokenType::OpBitNot, Action::Shift(26))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(19)), ("op-or".to_owned(), Action::Goto(4)), ("left-value".to_owned(), Action::Goto(3)), ("op-single".to_owned(), Action::Goto(20)), ("expression".to_owned(), Action::Goto(152)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-bit-and".to_owned(), Action::Goto(18)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-bit-or".to_owned(), Action::Goto(24)), ("op-addsub".to_owned(), Action::Goto(21)), ("function-call".to_owned(), Action::Goto(30)), ("assignment".to_owned(), Action::Goto(5)), ("op-and".to_owned(), Action::Goto(23)), ("statement".to_owned(), Action::Goto(145)), ("literal".to_owned(), Action::Goto(31)), ("op-shift".to_owned(), Action::Goto(22)), ("for-statement".to_owned(), Action::Goto(153)), ("_statement-list-1".to_owned(), Action::Goto(328)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("scope-statement".to_owned(), Action::Goto(155)), ("if-statement".to_owned(), Action::Goto(154))].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(272))].into_iter().collect(), vec![].into_iter().collect(), vec!["id".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(106)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpNot, Action::Shift(104)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::Id, Action::Shift(325)), (TokenType::BraceL, Action::Shift(149))].into_iter().collect(), vec![("op-muldivmod".to_owned(), Action::Goto(92)), ("op-cast".to_owned(), Action::Goto(96)), ("op-or".to_owned(), Action::Goto(84)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-single".to_owned(), Action::Goto(97)), ("left-value".to_owned(), Action::Goto(83)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("assignment".to_owned(), Action::Goto(85)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-and".to_owned(), Action::Goto(100)), ("literal".to_owned(), Action::Goto(108)), ("op-cmp".to_owned(), Action::Goto(93)), ("expression".to_owned(), Action::Goto(326)), ("scope-statement".to_owned(), Action::Goto(327)), ("op-shift".to_owned(), Action::Goto(99)), ("function-call".to_owned(), Action::Goto(107)), ("op-addsub".to_owned(), Action::Goto(98))].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpNot, Action::Shift(104)), (TokenType::OpSub, Action::Shift(105)), (TokenType::ParenL, Action::Shift(106)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::Id, Action::Shift(86)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpBitNot, Action::Shift(103))].into_iter().collect(), vec![("op-muldivmod".to_owned(), Action::Goto(92)), ("op-or".to_owned(), Action::Goto(84)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-and".to_owned(), Action::Goto(100)), ("assignment".to_owned(), Action::Goto(85)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-single".to_owned(), Action::Goto(97)), ("op-shift".to_owned(), Action::Goto(99)), ("op-addsub".to_owned(), Action::Goto(98)), ("literal".to_owned(), Action::Goto(108)), ("function-call".to_owned(), Action::Goto(107)), ("left-value".to_owned(), Action::Goto(83)), ("op-cast".to_owned(), Action::Goto(96)), ("op-cmp".to_owned(), Action::Goto(93)), ("expression".to_owned(), Action::Goto(320)), ("op-bit-or".to_owned(), Action::Goto(101))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Shift(26)), (TokenType::Id, Action::Shift(8)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::KeywordAs, Action::Shift(146)), (TokenType::KeywordIf, Action::Shift(148)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::OpNot, Action::Shift(27)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::BraceR, Action::Shift(329)), (TokenType::OpSub, Action::Shift(28)), (TokenType::BraceL, Action::Shift(149)), (TokenType::ParenL, Action::Shift(29)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::KeywordFor, Action::Shift(147))].into_iter().collect(), vec![("function-call".to_owned(), Action::Goto(30)), ("expression".to_owned(), Action::Goto(152)), ("op-or".to_owned(), Action::Goto(4)), ("left-value".to_owned(), Action::Goto(3)), ("if-statement".to_owned(), Action::Goto(154)), ("for-statement".to_owned(), Action::Goto(153)), ("op-addsub".to_owned(), Action::Goto(21)), ("op-shift".to_owned(), Action::Goto(22)), ("assignment".to_owned(), Action::Goto(5)), ("op-and".to_owned(), Action::Goto(23)), ("scope-statement".to_owned(), Action::Goto(155)), ("op-bit-and".to_owned(), Action::Goto(18)), ("statement".to_owned(), Action::Goto(145)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-cast".to_owned(), Action::Goto(19)), ("op-single".to_owned(), Action::Goto(20)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("literal".to_owned(), Action::Goto(31)), ("_statement-list-1".to_owned(), Action::Goto(156)), ("op-bit-or".to_owned(), Action::Goto(24)), ("statement-list".to_owned(), Action::Goto(330)), ("op-bit-xor".to_owned(), Action::Goto(17))].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Eof, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceR, Action::Shift(281))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-r".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Shift(282))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(1, "statement".to_owned(), "statementfor-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(1, "statement".to_owned(), "statementif-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceR, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(1, "statement".to_owned(), "statementscope-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceR, Action::Reduce(1, "statement-list".to_owned(), "statement-liststatement-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-r".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Shift(51)), (TokenType::OpAnd, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-cast-1".to_owned(), Action::Goto(334))].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Shift(53)), (TokenType::OpShiftR, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-xor-1".to_owned(), Action::Goto(335))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-add-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Shift(47)), (TokenType::OpAnd, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned())), (TokenType::OpLs, Action::Shift(48)), (TokenType::OpOr, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned())), (TokenType::OpGt, Action::Shift(46)), (TokenType::OpEq, Action::Shift(45)), (TokenType::OpNeq, Action::Shift(50)), (TokenType::Semicolon, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Shift(49))].into_iter().collect(), vec![("_op-cmp-1".to_owned(), Action::Goto(333)), ("op-cmp-op".to_owned(), Action::Goto(43))].into_iter().collect(), vec!["op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-or-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-not-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(2, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-0".to_owned())), (TokenType::OpAnd, Action::Shift(41)), (TokenType::OpOr, Action::Reduce(2, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-and-1".to_owned(), Action::Goto(332))].into_iter().collect(), vec!["op-and".to_owned(), "op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(2, "_op-or-1".to_owned(), "_op-or-1_op-or-1-or-reduce-0".to_owned())), (TokenType::OpOr, Action::Shift(39))].into_iter().collect(), vec![("_op-or-1".to_owned(), Action::Goto(331))].into_iter().collect(), vec!["op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-div-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-mod-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-xor-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-shift-l-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-and-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-shift-r-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-mul-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(105)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpNot, Action::Shift(104)), (TokenType::Id, Action::Shift(244)), (TokenType::ParenL, Action::Shift(106))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(95)), ("function-call".to_owned(), Action::Goto(107)), ("op-cmp".to_owned(), Action::Goto(339)), ("left-value".to_owned(), Action::Goto(246)), ("literal".to_owned(), Action::Goto(108)), ("op-cast".to_owned(), Action::Goto(96)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-shift".to_owned(), Action::Goto(99)), ("op-single".to_owned(), Action::Goto(97)), ("op-bit-xor".to_owned(), Action::Goto(94))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(2, "op-and".to_owned(), "op-andand-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-and".to_owned(), "op-andand-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::ParenL, Action::Shift(106)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpSub, Action::Shift(105)), (TokenType::OpAdd, Action::Shift(102))].into_iter().collect(), vec![("op-shift".to_owned(), Action::Goto(99)), ("op-or".to_owned(), Action::Goto(84)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-single".to_owned(), Action::Goto(97)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-cmp".to_owned(), Action::Goto(93)), ("assignment".to_owned(), Action::Goto(336)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-and".to_owned(), Action::Goto(100)), ("op-cast".to_owned(), Action::Goto(96)), ("function-call".to_owned(), Action::Goto(107)), ("left-value".to_owned(), Action::Goto(83)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("literal".to_owned(), Action::Goto(108))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpNot, Action::Shift(104)), (TokenType::ParenL, Action::Shift(106))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(97)), ("op-shift".to_owned(), Action::Goto(99)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-bit-and".to_owned(), Action::Goto(95)), ("literal".to_owned(), Action::Goto(108)), ("op-or".to_owned(), Action::Goto(84)), ("op-addsub".to_owned(), Action::Goto(98)), ("function-call".to_owned(), Action::Goto(107)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-cast".to_owned(), Action::Goto(96)), ("left-value".to_owned(), Action::Goto(83)), ("assignment".to_owned(), Action::Goto(337)), ("op-and".to_owned(), Action::Goto(100))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpSub, Action::Shift(105))].into_iter().collect(), vec![("op-muldivmod".to_owned(), Action::Goto(92)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-or".to_owned(), Action::Goto(84)), ("op-bit-or".to_owned(), Action::Goto(101)), ("function-call".to_owned(), Action::Goto(107)), ("op-and".to_owned(), Action::Goto(100)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-cast".to_owned(), Action::Goto(96)), ("left-value".to_owned(), Action::Goto(83)), ("literal".to_owned(), Action::Goto(108)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-shift".to_owned(), Action::Goto(99)), ("op-single".to_owned(), Action::Goto(97)), ("assignment".to_owned(), Action::Goto(338)), ("op-addsub".to_owned(), Action::Goto(98))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(91)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpSub, Action::Shift(105)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralBool, Action::Shift(88))].into_iter().collect(), vec![("op-cmp".to_owned(), Action::Goto(93)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("left-value".to_owned(), Action::Goto(83)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-shift".to_owned(), Action::Goto(99)), ("op-or".to_owned(), Action::Goto(84)), ("op-cast".to_owned(), Action::Goto(96)), ("op-single".to_owned(), Action::Goto(97)), ("op-and".to_owned(), Action::Goto(100)), ("literal".to_owned(), Action::Goto(108)), ("assignment".to_owned(), Action::Goto(342)), ("op-bit-or".to_owned(), Action::Goto(101)), ("function-call".to_owned(), Action::Goto(107)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-muldivmod".to_owned(), Action::Goto(92))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(105)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::ParenL, Action::Shift(106)), (TokenType::LiteralBool, Action::Shift(88))].into_iter().collect(), vec![("op-or".to_owned(), Action::Goto(84)), ("function-call".to_owned(), Action::Goto(107)), ("assignment".to_owned(), Action::Goto(343)), ("literal".to_owned(), Action::Goto(108)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-and".to_owned(), Action::Goto(100)), ("op-single".to_owned(), Action::Goto(97)), ("op-cast".to_owned(), Action::Goto(96)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-shift".to_owned(), Action::Goto(99)), ("left-value".to_owned(), Action::Goto(83)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-muldivmod".to_owned(), Action::Goto(92))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpNot, Action::Shift(104)), (TokenType::ParenL, Action::Shift(106)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpSub, Action::Shift(105))].into_iter().collect(), vec![("assignment".to_owned(), Action::Goto(364)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-cast".to_owned(), Action::Goto(96)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-addsub".to_owned(), Action::Goto(98)), ("function-call".to_owned(), Action::Goto(107)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-single".to_owned(), Action::Goto(97)), ("op-or".to_owned(), Action::Goto(84)), ("op-and".to_owned(), Action::Goto(100)), ("left-value".to_owned(), Action::Goto(83)), ("op-shift".to_owned(), Action::Goto(99)), ("literal".to_owned(), Action::Goto(108))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::ParenL, Action::Shift(106)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::Id, Action::Shift(86)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralBool, Action::Shift(88))].into_iter().collect(), vec![("op-bit-xor".to_owned(), Action::Goto(94)), ("op-and".to_owned(), Action::Goto(100)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-single".to_owned(), Action::Goto(97)), ("left-value".to_owned(), Action::Goto(83)), ("op-shift".to_owned(), Action::Goto(99)), ("assignment".to_owned(), Action::Goto(341)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-bit-and".to_owned(), Action::Goto(95)), ("literal".to_owned(), Action::Goto(108)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-cast".to_owned(), Action::Goto(96)), ("op-or".to_owned(), Action::Goto(84)), ("function-call".to_owned(), Action::Goto(107))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Shift(102)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpNot, Action::Shift(104)), (TokenType::ParenL, Action::Shift(106)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralInteger, Action::Shift(90))].into_iter().collect(), vec![("op-or".to_owned(), Action::Goto(84)), ("op-bit-or".to_owned(), Action::Goto(101)), ("function-call".to_owned(), Action::Goto(107)), ("op-cast".to_owned(), Action::Goto(96)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("literal".to_owned(), Action::Goto(108)), ("op-addsub".to_owned(), Action::Goto(98)), ("assignment".to_owned(), Action::Goto(363)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-and".to_owned(), Action::Goto(100)), ("op-single".to_owned(), Action::Goto(97)), ("op-bit-and".to_owned(), Action::Goto(95)), ("left-value".to_owned(), Action::Goto(83)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-shift".to_owned(), Action::Goto(99))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Shift(88)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpSub, Action::Shift(105))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(83)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-or".to_owned(), Action::Goto(84)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("assignment".to_owned(), Action::Goto(340)), ("op-single".to_owned(), Action::Goto(97)), ("op-shift".to_owned(), Action::Goto(99)), ("literal".to_owned(), Action::Goto(108)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-bit-and".to_owned(), Action::Goto(95)), ("function-call".to_owned(), Action::Goto(107)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-cast".to_owned(), Action::Goto(96)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-and".to_owned(), Action::Goto(100))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::Id, Action::Shift(86)), (TokenType::OpSub, Action::Shift(105)), (TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::ParenL, Action::Shift(106))].into_iter().collect(), vec![("op-and".to_owned(), Action::Goto(100)), ("function-call".to_owned(), Action::Goto(107)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("left-value".to_owned(), Action::Goto(83)), ("op-single".to_owned(), Action::Goto(97)), ("assignment".to_owned(), Action::Goto(365)), ("literal".to_owned(), Action::Goto(108)), ("op-shift".to_owned(), Action::Goto(99)), ("op-or".to_owned(), Action::Goto(84)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-cast".to_owned(), Action::Goto(96)), ("op-addsub".to_owned(), Action::Goto(98))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpSub, Action::Shift(105))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(96)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-bit-or".to_owned(), Action::Goto(101)), ("assignment".to_owned(), Action::Goto(360)), ("literal".to_owned(), Action::Goto(108)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-and".to_owned(), Action::Goto(100)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-single".to_owned(), Action::Goto(97)), ("left-value".to_owned(), Action::Goto(83)), ("function-call".to_owned(), Action::Goto(107)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-or".to_owned(), Action::Goto(84)), ("op-shift".to_owned(), Action::Goto(99))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::OpNot, Action::Shift(104)), (TokenType::ParenL, Action::Shift(106))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(83)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("function-call".to_owned(), Action::Goto(107)), ("assignment".to_owned(), Action::Goto(366)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-addsub".to_owned(), Action::Goto(98)), ("literal".to_owned(), Action::Goto(108)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-or".to_owned(), Action::Goto(84)), ("op-shift".to_owned(), Action::Goto(99)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-and".to_owned(), Action::Goto(100)), ("op-single".to_owned(), Action::Goto(97)), ("op-cast".to_owned(), Action::Goto(96))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpNot, Action::Shift(104)), (TokenType::OpSub, Action::Shift(105)), (TokenType::Id, Action::Shift(244)), (TokenType::ParenL, Action::Shift(106)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralBool, Action::Shift(88))].into_iter().collect(), vec![("op-bit-xor".to_owned(), Action::Goto(362)), ("op-cast".to_owned(), Action::Goto(96)), ("op-single".to_owned(), Action::Goto(97)), ("function-call".to_owned(), Action::Goto(107)), ("left-value".to_owned(), Action::Goto(246)), ("literal".to_owned(), Action::Goto(108))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(244)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpSub, Action::Shift(105)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpAdd, Action::Shift(102))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(97)), ("literal".to_owned(), Action::Goto(108)), ("op-cast".to_owned(), Action::Goto(361)), ("function-call".to_owned(), Action::Goto(107)), ("left-value".to_owned(), Action::Goto(246))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(244)), (TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpSub, Action::Shift(105)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::ParenL, Action::Shift(106)), (TokenType::LiteralBool, Action::Shift(88))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(246)), ("op-cast".to_owned(), Action::Goto(96)), ("function-call".to_owned(), Action::Goto(107)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-single".to_owned(), Action::Goto(97)), ("literal".to_owned(), Action::Goto(108)), ("op-bit-and".to_owned(), Action::Goto(367))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(106)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpSub, Action::Shift(105)), (TokenType::Id, Action::Shift(244)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralInteger, Action::Shift(90))].into_iter().collect(), vec![("op-shift".to_owned(), Action::Goto(99)), ("op-cast".to_owned(), Action::Goto(96)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-and".to_owned(), Action::Goto(374)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("left-value".to_owned(), Action::Goto(246)), ("function-call".to_owned(), Action::Goto(107)), ("literal".to_owned(), Action::Goto(108)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-single".to_owned(), Action::Goto(97)), ("op-addsub".to_owned(), Action::Goto(98))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(2, "op-or".to_owned(), "op-oror-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(91)), (TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::Id, Action::Shift(244)), (TokenType::OpSub, Action::Shift(105)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpAdd, Action::Shift(102))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(96)), ("op-single".to_owned(), Action::Goto(97)), ("op-shift".to_owned(), Action::Goto(99)), ("function-call".to_owned(), Action::Goto(107)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-bit-and".to_owned(), Action::Goto(95)), ("left-value".to_owned(), Action::Goto(246)), ("op-addsub".to_owned(), Action::Goto(376)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("literal".to_owned(), Action::Goto(108))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-and".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::KeywordU128, Action::Shift(355)), (TokenType::KeywordU32, Action::Shift(357)), (TokenType::KeywordF64, Action::Shift(348)), (TokenType::KeywordI64, Action::Shift(352)), (TokenType::KeywordF32, Action::Shift(347)), (TokenType::KeywordI32, Action::Shift(351)), (TokenType::KeywordI8, Action::Shift(353)), (TokenType::KeywordU16, Action::Shift(356)), (TokenType::KeywordI128, Action::Shift(349)), (TokenType::KeywordU64, Action::Shift(358)), (TokenType::KeywordU8, Action::Shift(359)), (TokenType::KeywordF16, Action::Shift(346)), (TokenType::KeywordBool, Action::Shift(345)), (TokenType::KeywordI16, Action::Shift(350)), (TokenType::KeywordStr, Action::Shift(354))].into_iter().collect(), vec![("type".to_owned(), Action::Goto(344))].into_iter().collect(), vec!["keyword-bool".to_owned(), "keyword-f16".to_owned(), "keyword-f32".to_owned(), "keyword-f64".to_owned(), "keyword-i128".to_owned(), "keyword-i16".to_owned(), "keyword-i32".to_owned(), "keyword-i64".to_owned(), "keyword-i8".to_owned(), "keyword-str".to_owned(), "keyword-u128".to_owned(), "keyword-u16".to_owned(), "keyword-u32".to_owned(), "keyword-u64".to_owned(), "keyword-u8".to_owned()]),
		(vec![(TokenType::OpShiftR, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::Id, Action::Shift(419)), (TokenType::OpNot, Action::Shift(104)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::ParenL, Action::Shift(106)), (TokenType::BraceL, Action::Shift(32)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::LiteralDecimal, Action::Shift(89))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(83)), ("assignment".to_owned(), Action::Goto(85)), ("scope-statement".to_owned(), Action::Goto(421)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-and".to_owned(), Action::Goto(100)), ("op-bit-or".to_owned(), Action::Goto(101)), ("literal".to_owned(), Action::Goto(108)), ("expression".to_owned(), Action::Goto(420)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-single".to_owned(), Action::Goto(97)), ("op-or".to_owned(), Action::Goto(84)), ("function-call".to_owned(), Action::Goto(107)), ("op-shift".to_owned(), Action::Goto(99)), ("op-cast".to_owned(), Action::Goto(96))].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Shift(103)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpSub, Action::Shift(105)), (TokenType::Id, Action::Shift(244)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpNot, Action::Shift(104))].into_iter().collect(), vec![("op-shift".to_owned(), Action::Goto(99)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-single".to_owned(), Action::Goto(97)), ("literal".to_owned(), Action::Goto(108)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-cast".to_owned(), Action::Goto(96)), ("function-call".to_owned(), Action::Goto(107)), ("op-muldivmod".to_owned(), Action::Goto(375)), ("left-value".to_owned(), Action::Goto(246))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpNot, Action::Shift(104)), (TokenType::Id, Action::Shift(244)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpSub, Action::Shift(105)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpAdd, Action::Shift(102))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(95)), ("op-cast".to_owned(), Action::Goto(96)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-muldivmod".to_owned(), Action::Goto(378)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-shift".to_owned(), Action::Goto(99)), ("literal".to_owned(), Action::Goto(108)), ("op-single".to_owned(), Action::Goto(97)), ("function-call".to_owned(), Action::Goto(107)), ("left-value".to_owned(), Action::Goto(246))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::OpBitAnd, Action::Shift(68)), (TokenType::OpMod, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-and-1".to_owned(), Action::Goto(368))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Shift(70)), (TokenType::OpMod, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-or-1".to_owned(), Action::Goto(369))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpSub, Action::Shift(73)), (TokenType::OpAdd, Action::Shift(72)), (TokenType::Semicolon, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-addsub-1".to_owned(), Action::Goto(370))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpAdd, Action::Shift(72)), (TokenType::OpLs, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpSub, Action::Shift(73)), (TokenType::OpGtEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-addsub-1".to_owned(), Action::Goto(371))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpShiftR, Action::Shift(76)), (TokenType::OpEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Shift(75)), (TokenType::OpAdd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-shift-1".to_owned(), Action::Goto(372))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-sub-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Shift(75)), (TokenType::OpOr, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Shift(76)), (TokenType::OpGt, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-shift-1".to_owned(), Action::Goto(373))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(276)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::ParenL, Action::Shift(132)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpNot, Action::Shift(130)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralString, Action::Shift(117))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(122)), ("op-addsub".to_owned(), Action::Goto(124)), ("left-value".to_owned(), Action::Goto(278)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("op-single".to_owned(), Action::Goto(123)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-shift".to_owned(), Action::Goto(125)), ("op-bit-or".to_owned(), Action::Goto(127)), ("op-cmp".to_owned(), Action::Goto(377)), ("op-bit-and".to_owned(), Action::Goto(121)), ("literal".to_owned(), Action::Goto(135)), ("function-call".to_owned(), Action::Goto(134))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "op-and".to_owned(), "op-andand-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-and".to_owned(), "op-andand-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(130)), (TokenType::ParenL, Action::Shift(132)), (TokenType::Id, Action::Shift(113)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralDecimal, Action::Shift(115))].into_iter().collect(), vec![("op-muldivmod".to_owned(), Action::Goto(118)), ("assignment".to_owned(), Action::Goto(379)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("literal".to_owned(), Action::Goto(135)), ("op-bit-and".to_owned(), Action::Goto(121)), ("left-value".to_owned(), Action::Goto(110)), ("op-single".to_owned(), Action::Goto(123)), ("op-and".to_owned(), Action::Goto(126)), ("function-call".to_owned(), Action::Goto(134)), ("op-cmp".to_owned(), Action::Goto(119)), ("op-cast".to_owned(), Action::Goto(122)), ("op-bit-or".to_owned(), Action::Goto(127)), ("op-shift".to_owned(), Action::Goto(125)), ("op-addsub".to_owned(), Action::Goto(124)), ("op-or".to_owned(), Action::Goto(111))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(117)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::Id, Action::Shift(113)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::ParenL, Action::Shift(132)), (TokenType::OpNot, Action::Shift(130)), (TokenType::OpAdd, Action::Shift(128))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(121)), ("left-value".to_owned(), Action::Goto(110)), ("op-bit-or".to_owned(), Action::Goto(127)), ("op-addsub".to_owned(), Action::Goto(124)), ("literal".to_owned(), Action::Goto(135)), ("op-shift".to_owned(), Action::Goto(125)), ("op-and".to_owned(), Action::Goto(126)), ("op-or".to_owned(), Action::Goto(111)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("op-cmp".to_owned(), Action::Goto(119)), ("assignment".to_owned(), Action::Goto(380)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-cast".to_owned(), Action::Goto(122)), ("op-single".to_owned(), Action::Goto(123)), ("function-call".to_owned(), Action::Goto(134))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(113)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::OpSub, Action::Shift(131)), (TokenType::OpNot, Action::Shift(130))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(122)), ("op-or".to_owned(), Action::Goto(111)), ("assignment".to_owned(), Action::Goto(381)), ("left-value".to_owned(), Action::Goto(110)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("literal".to_owned(), Action::Goto(135)), ("op-bit-or".to_owned(), Action::Goto(127)), ("function-call".to_owned(), Action::Goto(134)), ("op-and".to_owned(), Action::Goto(126)), ("op-addsub".to_owned(), Action::Goto(124)), ("op-cmp".to_owned(), Action::Goto(119)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-single".to_owned(), Action::Goto(123)), ("op-shift".to_owned(), Action::Goto(125)), ("op-bit-and".to_owned(), Action::Goto(121))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Shift(128)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::Id, Action::Shift(113)), (TokenType::OpNot, Action::Shift(130)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralDecimal, Action::Shift(115))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(122)), ("op-addsub".to_owned(), Action::Goto(124)), ("op-bit-or".to_owned(), Action::Goto(127)), ("op-or".to_owned(), Action::Goto(111)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("left-value".to_owned(), Action::Goto(110)), ("literal".to_owned(), Action::Goto(135)), ("assignment".to_owned(), Action::Goto(382)), ("op-single".to_owned(), Action::Goto(123)), ("op-cmp".to_owned(), Action::Goto(119)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("function-call".to_owned(), Action::Goto(134)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-shift".to_owned(), Action::Goto(125)), ("op-and".to_owned(), Action::Goto(126))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(117)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpNot, Action::Shift(130)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::Id, Action::Shift(113)), (TokenType::OpSub, Action::Shift(131))].into_iter().collect(), vec![("op-and".to_owned(), Action::Goto(126)), ("op-bit-or".to_owned(), Action::Goto(127)), ("op-cast".to_owned(), Action::Goto(122)), ("literal".to_owned(), Action::Goto(135)), ("op-shift".to_owned(), Action::Goto(125)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("left-value".to_owned(), Action::Goto(110)), ("op-single".to_owned(), Action::Goto(123)), ("op-cmp".to_owned(), Action::Goto(119)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-or".to_owned(), Action::Goto(111)), ("op-addsub".to_owned(), Action::Goto(124)), ("assignment".to_owned(), Action::Goto(399)), ("function-call".to_owned(), Action::Goto(134))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpSub, Action::Shift(131)), (TokenType::Id, Action::Shift(113)), (TokenType::OpNot, Action::Shift(130)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::ParenL, Action::Shift(132))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(110)), ("op-shift".to_owned(), Action::Goto(125)), ("op-cast".to_owned(), Action::Goto(122)), ("function-call".to_owned(), Action::Goto(134)), ("literal".to_owned(), Action::Goto(135)), ("op-and".to_owned(), Action::Goto(126)), ("op-bit-or".to_owned(), Action::Goto(127)), ("op-or".to_owned(), Action::Goto(111)), ("assignment".to_owned(), Action::Goto(400)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-single".to_owned(), Action::Goto(123)), ("op-addsub".to_owned(), Action::Goto(124)), ("op-cmp".to_owned(), Action::Goto(119)), ("op-bit-xor".to_owned(), Action::Goto(120))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::OpNot, Action::Shift(130)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::ParenL, Action::Shift(132)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::Id, Action::Shift(113))].into_iter().collect(), vec![("literal".to_owned(), Action::Goto(135)), ("op-shift".to_owned(), Action::Goto(125)), ("op-and".to_owned(), Action::Goto(126)), ("op-cmp".to_owned(), Action::Goto(119)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-addsub".to_owned(), Action::Goto(124)), ("op-cast".to_owned(), Action::Goto(122)), ("op-or".to_owned(), Action::Goto(111)), ("left-value".to_owned(), Action::Goto(110)), ("function-call".to_owned(), Action::Goto(134)), ("op-single".to_owned(), Action::Goto(123)), ("op-bit-or".to_owned(), Action::Goto(127)), ("op-bit-and".to_owned(), Action::Goto(121)), ("assignment".to_owned(), Action::Goto(402)), ("op-muldivmod".to_owned(), Action::Goto(118))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Shift(129)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpNot, Action::Shift(130)), (TokenType::OpSub, Action::Shift(131)), (TokenType::ParenL, Action::Shift(132)), (TokenType::Id, Action::Shift(113)), (TokenType::LiteralDecimal, Action::Shift(115))].into_iter().collect(), vec![("op-bit-or".to_owned(), Action::Goto(127)), ("assignment".to_owned(), Action::Goto(401)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-single".to_owned(), Action::Goto(123)), ("function-call".to_owned(), Action::Goto(134)), ("left-value".to_owned(), Action::Goto(110)), ("op-and".to_owned(), Action::Goto(126)), ("op-or".to_owned(), Action::Goto(111)), ("op-cmp".to_owned(), Action::Goto(119)), ("literal".to_owned(), Action::Goto(135)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-shift".to_owned(), Action::Goto(125)), ("op-addsub".to_owned(), Action::Goto(124)), ("op-cast".to_owned(), Action::Goto(122)), ("op-muldivmod".to_owned(), Action::Goto(118))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Shift(129)), (TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::Id, Action::Shift(113)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpNot, Action::Shift(130)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpSub, Action::Shift(131))].into_iter().collect(), vec![("op-addsub".to_owned(), Action::Goto(124)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-shift".to_owned(), Action::Goto(125)), ("op-or".to_owned(), Action::Goto(111)), ("op-bit-or".to_owned(), Action::Goto(127)), ("function-call".to_owned(), Action::Goto(134)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-single".to_owned(), Action::Goto(123)), ("op-and".to_owned(), Action::Goto(126)), ("assignment".to_owned(), Action::Goto(406)), ("literal".to_owned(), Action::Goto(135)), ("op-cast".to_owned(), Action::Goto(122)), ("op-cmp".to_owned(), Action::Goto(119)), ("left-value".to_owned(), Action::Goto(110))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(130)), (TokenType::OpSub, Action::Shift(131)), (TokenType::Id, Action::Shift(113)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpBitNot, Action::Shift(129))].into_iter().collect(), vec![("op-and".to_owned(), Action::Goto(126)), ("function-call".to_owned(), Action::Goto(134)), ("op-cast".to_owned(), Action::Goto(122)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-addsub".to_owned(), Action::Goto(124)), ("assignment".to_owned(), Action::Goto(403)), ("op-bit-or".to_owned(), Action::Goto(127)), ("left-value".to_owned(), Action::Goto(110)), ("op-cmp".to_owned(), Action::Goto(119)), ("op-single".to_owned(), Action::Goto(123)), ("op-shift".to_owned(), Action::Goto(125)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("op-or".to_owned(), Action::Goto(111)), ("literal".to_owned(), Action::Goto(135))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(116)), (TokenType::Id, Action::Shift(113)), (TokenType::OpNot, Action::Shift(130)), (TokenType::OpSub, Action::Shift(131)), (TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpBitNot, Action::Shift(129))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(122)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("op-cmp".to_owned(), Action::Goto(119)), ("op-and".to_owned(), Action::Goto(126)), ("literal".to_owned(), Action::Goto(135)), ("op-or".to_owned(), Action::Goto(111)), ("op-addsub".to_owned(), Action::Goto(124)), ("left-value".to_owned(), Action::Goto(110)), ("op-single".to_owned(), Action::Goto(123)), ("function-call".to_owned(), Action::Goto(134)), ("op-shift".to_owned(), Action::Goto(125)), ("op-bit-and".to_owned(), Action::Goto(121)), ("assignment".to_owned(), Action::Goto(411)), ("op-bit-or".to_owned(), Action::Goto(127))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::OpNot, Action::Shift(130)), (TokenType::ParenL, Action::Shift(132)), (TokenType::Id, Action::Shift(113))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(121)), ("function-call".to_owned(), Action::Goto(134)), ("op-bit-or".to_owned(), Action::Goto(127)), ("literal".to_owned(), Action::Goto(135)), ("op-single".to_owned(), Action::Goto(123)), ("op-shift".to_owned(), Action::Goto(125)), ("op-cast".to_owned(), Action::Goto(122)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-and".to_owned(), Action::Goto(126)), ("op-addsub".to_owned(), Action::Goto(124)), ("op-or".to_owned(), Action::Goto(111)), ("op-cmp".to_owned(), Action::Goto(119)), ("left-value".to_owned(), Action::Goto(110)), ("assignment".to_owned(), Action::Goto(410))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpNot, Action::Shift(104)), (TokenType::Id, Action::Shift(244)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpSub, Action::Shift(105))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(95)), ("op-bit-or".to_owned(), Action::Goto(408)), ("op-single".to_owned(), Action::Goto(97)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("literal".to_owned(), Action::Goto(108)), ("op-cast".to_owned(), Action::Goto(96)), ("function-call".to_owned(), Action::Goto(107)), ("left-value".to_owned(), Action::Goto(246))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpNot, Action::Shift(104)), (TokenType::Id, Action::Shift(244)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::ParenL, Action::Shift(106))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(95)), ("function-call".to_owned(), Action::Goto(107)), ("op-cast".to_owned(), Action::Goto(96)), ("op-single".to_owned(), Action::Goto(97)), ("literal".to_owned(), Action::Goto(108)), ("op-bit-or".to_owned(), Action::Goto(412)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("left-value".to_owned(), Action::Goto(246))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpNot, Action::Shift(130)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::Id, Action::Shift(276)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpSub, Action::Shift(131))].into_iter().collect(), vec![("literal".to_owned(), Action::Goto(135)), ("left-value".to_owned(), Action::Goto(278)), ("function-call".to_owned(), Action::Goto(134)), ("op-cast".to_owned(), Action::Goto(122)), ("op-single".to_owned(), Action::Goto(123)), ("op-bit-xor".to_owned(), Action::Goto(407))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenL, Action::Shift(271)), (TokenType::OpSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpNot, Action::Shift(130)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::ParenL, Action::Shift(132)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpSub, Action::Shift(131)), (TokenType::Id, Action::Shift(276))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(413)), ("function-call".to_owned(), Action::Goto(134)), ("literal".to_owned(), Action::Goto(135)), ("op-single".to_owned(), Action::Goto(123)), ("left-value".to_owned(), Action::Goto(278))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::KeywordI8, Action::Shift(392)), (TokenType::KeywordU16, Action::Shift(395)), (TokenType::KeywordU8, Action::Shift(398)), (TokenType::KeywordU64, Action::Shift(397)), (TokenType::KeywordI128, Action::Shift(388)), (TokenType::KeywordU32, Action::Shift(396)), (TokenType::KeywordF16, Action::Shift(385)), (TokenType::KeywordBool, Action::Shift(384)), (TokenType::KeywordI64, Action::Shift(391)), (TokenType::KeywordStr, Action::Shift(393)), (TokenType::KeywordI16, Action::Shift(389)), (TokenType::KeywordF64, Action::Shift(387)), (TokenType::KeywordU128, Action::Shift(394)), (TokenType::KeywordF32, Action::Shift(386)), (TokenType::KeywordI32, Action::Shift(390))].into_iter().collect(), vec![("type".to_owned(), Action::Goto(383))].into_iter().collect(), vec!["keyword-bool".to_owned(), "keyword-f16".to_owned(), "keyword-f32".to_owned(), "keyword-f64".to_owned(), "keyword-i128".to_owned(), "keyword-i16".to_owned(), "keyword-i32".to_owned(), "keyword-i64".to_owned(), "keyword-i8".to_owned(), "keyword-str".to_owned(), "keyword-u128".to_owned(), "keyword-u16".to_owned(), "keyword-u32".to_owned(), "keyword-u64".to_owned(), "keyword-u8".to_owned()]),
		(vec![(TokenType::OpBitOr, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::Id, Action::Shift(276)), (TokenType::OpSub, Action::Shift(131)), (TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpNot, Action::Shift(130)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpBitNot, Action::Shift(129))].into_iter().collect(), vec![("op-bit-xor".to_owned(), Action::Goto(120)), ("op-cast".to_owned(), Action::Goto(122)), ("op-single".to_owned(), Action::Goto(123)), ("left-value".to_owned(), Action::Goto(278)), ("op-bit-and".to_owned(), Action::Goto(414)), ("function-call".to_owned(), Action::Goto(134)), ("literal".to_owned(), Action::Goto(135))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpMul, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Shift(129)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpNot, Action::Shift(130)), (TokenType::Id, Action::Shift(276)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::ParenL, Action::Shift(132))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(121)), ("op-shift".to_owned(), Action::Goto(125)), ("op-addsub".to_owned(), Action::Goto(416)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("op-bit-or".to_owned(), Action::Goto(127)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("left-value".to_owned(), Action::Goto(278)), ("function-call".to_owned(), Action::Goto(134)), ("literal".to_owned(), Action::Goto(135)), ("op-single".to_owned(), Action::Goto(123)), ("op-cast".to_owned(), Action::Goto(122))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-and".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(276)), (TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::OpNot, Action::Shift(130)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpSub, Action::Shift(131))].into_iter().collect(), vec![("op-addsub".to_owned(), Action::Goto(124)), ("op-single".to_owned(), Action::Goto(123)), ("op-shift".to_owned(), Action::Goto(125)), ("op-bit-or".to_owned(), Action::Goto(127)), ("function-call".to_owned(), Action::Goto(134)), ("op-cmp".to_owned(), Action::Goto(119)), ("left-value".to_owned(), Action::Goto(278)), ("literal".to_owned(), Action::Goto(135)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-cast".to_owned(), Action::Goto(122)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-and".to_owned(), Action::Goto(417))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(2, "op-or".to_owned(), "op-oror-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::Id, Action::Shift(244)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpNot, Action::Shift(104)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralInteger, Action::Shift(90))].into_iter().collect(), vec![("op-bit-or".to_owned(), Action::Goto(101)), ("op-cast".to_owned(), Action::Goto(96)), ("left-value".to_owned(), Action::Goto(246)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("literal".to_owned(), Action::Goto(108)), ("op-bit-and".to_owned(), Action::Goto(95)), ("function-call".to_owned(), Action::Goto(107)), ("op-single".to_owned(), Action::Goto(97)), ("op-shift".to_owned(), Action::Goto(418))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(244)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::ParenL, Action::Shift(106)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpNot, Action::Shift(104))].into_iter().collect(), vec![("op-bit-or".to_owned(), Action::Goto(101)), ("op-shift".to_owned(), Action::Goto(423)), ("op-single".to_owned(), Action::Goto(97)), ("op-bit-and".to_owned(), Action::Goto(95)), ("left-value".to_owned(), Action::Goto(246)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("function-call".to_owned(), Action::Goto(107)), ("literal".to_owned(), Action::Goto(108)), ("op-cast".to_owned(), Action::Goto(96))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(104)), (TokenType::Id, Action::Shift(244)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralDecimal, Action::Shift(89))].into_iter().collect(), vec![("function-call".to_owned(), Action::Goto(107)), ("op-single".to_owned(), Action::Goto(97)), ("op-cast".to_owned(), Action::Goto(96)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-bit-or".to_owned(), Action::Goto(101)), ("left-value".to_owned(), Action::Goto(246)), ("op-shift".to_owned(), Action::Goto(422)), ("literal".to_owned(), Action::Goto(108))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::KeywordElse, Action::Shift(404)), (TokenType::OpAdd, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned()))].into_iter().collect(), vec![("else-statement".to_owned(), Action::Goto(405))].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-else".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Shift(26)), (TokenType::KeywordAs, Action::Shift(146)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::OpNot, Action::Shift(27)), (TokenType::BraceL, Action::Shift(149)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::BraceR, Action::Shift(495)), (TokenType::Id, Action::Shift(8)), (TokenType::KeywordFor, Action::Shift(147)), (TokenType::OpSub, Action::Shift(28)), (TokenType::LiteralString, Action::Shift(13)), (TokenType::ParenL, Action::Shift(29)), (TokenType::KeywordIf, Action::Shift(148)), (TokenType::LiteralDecimal, Action::Shift(11))].into_iter().collect(), vec![("statement".to_owned(), Action::Goto(145)), ("_statement-list-1".to_owned(), Action::Goto(156)), ("assignment".to_owned(), Action::Goto(5)), ("op-addsub".to_owned(), Action::Goto(21)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-bit-and".to_owned(), Action::Goto(18)), ("function-call".to_owned(), Action::Goto(30)), ("op-bit-or".to_owned(), Action::Goto(24)), ("left-value".to_owned(), Action::Goto(3)), ("op-single".to_owned(), Action::Goto(20)), ("statement-list".to_owned(), Action::Goto(496)), ("op-shift".to_owned(), Action::Goto(22)), ("expression".to_owned(), Action::Goto(152)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-and".to_owned(), Action::Goto(23)), ("scope-statement".to_owned(), Action::Goto(155)), ("for-statement".to_owned(), Action::Goto(153)), ("if-statement".to_owned(), Action::Goto(154)), ("literal".to_owned(), Action::Goto(31)), ("op-or".to_owned(), Action::Goto(4)), ("op-cast".to_owned(), Action::Goto(19))].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpLs, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::OpNot, Action::Shift(130)), (TokenType::Id, Action::Shift(276)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::LiteralString, Action::Shift(117))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(122)), ("op-single".to_owned(), Action::Goto(123)), ("function-call".to_owned(), Action::Goto(134)), ("op-bit-and".to_owned(), Action::Goto(121)), ("literal".to_owned(), Action::Goto(135)), ("op-muldivmod".to_owned(), Action::Goto(424)), ("left-value".to_owned(), Action::Goto(278)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-shift".to_owned(), Action::Goto(125)), ("op-bit-or".to_owned(), Action::Goto(127))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(117)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::Id, Action::Shift(276)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpNot, Action::Shift(130)), (TokenType::ParenL, Action::Shift(132))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(121)), ("op-single".to_owned(), Action::Goto(123)), ("function-call".to_owned(), Action::Goto(134)), ("op-cast".to_owned(), Action::Goto(122)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("left-value".to_owned(), Action::Goto(278)), ("literal".to_owned(), Action::Goto(135)), ("op-shift".to_owned(), Action::Goto(125)), ("op-bit-or".to_owned(), Action::Goto(127)), ("op-muldivmod".to_owned(), Action::Goto(425))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Shift(409))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(315)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpNot, Action::Shift(314)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::ParenR, Action::Shift(431)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::Id, Action::Shift(295)), (TokenType::LiteralBool, Action::Shift(298))].into_iter().collect(), vec![("function-call".to_owned(), Action::Goto(317)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-cast".to_owned(), Action::Goto(306)), ("op-shift".to_owned(), Action::Goto(309)), ("literal".to_owned(), Action::Goto(318)), ("op-single".to_owned(), Action::Goto(307)), ("op-and".to_owned(), Action::Goto(310)), ("expression".to_owned(), Action::Goto(432)), ("op-or".to_owned(), Action::Goto(293)), ("left-value".to_owned(), Action::Goto(292)), ("op-addsub".to_owned(), Action::Goto(308)), ("assignment".to_owned(), Action::Goto(294)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("op-cmp".to_owned(), Action::Goto(303))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::KeywordFor, Action::Shift(465))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-for".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(276)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpNot, Action::Shift(130))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(121)), ("literal".to_owned(), Action::Goto(135)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-cast".to_owned(), Action::Goto(122)), ("op-single".to_owned(), Action::Goto(123)), ("op-bit-or".to_owned(), Action::Goto(430)), ("left-value".to_owned(), Action::Goto(278)), ("function-call".to_owned(), Action::Goto(134))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Shift(114)), (TokenType::ParenL, Action::Shift(132)), (TokenType::Id, Action::Shift(276)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpNot, Action::Shift(130)), (TokenType::LiteralInteger, Action::Shift(116))].into_iter().collect(), vec![("op-bit-or".to_owned(), Action::Goto(429)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-cast".to_owned(), Action::Goto(122)), ("left-value".to_owned(), Action::Goto(278)), ("literal".to_owned(), Action::Goto(135)), ("function-call".to_owned(), Action::Goto(134)), ("op-single".to_owned(), Action::Goto(123))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(319)), (TokenType::OpAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-l".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Eof, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpNot, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralBool, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralString, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpBitNot, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralInteger, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::ParenL, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordIf, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordFor, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::Id, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(2, "statement".to_owned(), "statementexpression-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Shift(415))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(117)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::Id, Action::Shift(276)), (TokenType::OpNot, Action::Shift(130)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpSub, Action::Shift(131))].into_iter().collect(), vec![("op-bit-or".to_owned(), Action::Goto(127)), ("function-call".to_owned(), Action::Goto(134)), ("left-value".to_owned(), Action::Goto(278)), ("op-shift".to_owned(), Action::Goto(435)), ("literal".to_owned(), Action::Goto(135)), ("op-single".to_owned(), Action::Goto(123)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-cast".to_owned(), Action::Goto(122))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(132)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::Id, Action::Shift(276)), (TokenType::OpNot, Action::Shift(130)), (TokenType::OpSub, Action::Shift(131)), (TokenType::LiteralDecimal, Action::Shift(115))].into_iter().collect(), vec![("op-shift".to_owned(), Action::Goto(436)), ("op-bit-and".to_owned(), Action::Goto(121)), ("literal".to_owned(), Action::Goto(135)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-cast".to_owned(), Action::Goto(122)), ("op-single".to_owned(), Action::Goto(123)), ("left-value".to_owned(), Action::Goto(278)), ("function-call".to_owned(), Action::Goto(134)), ("op-bit-or".to_owned(), Action::Goto(127))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralDecimal, Action::Shift(115)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::OpSub, Action::Shift(131)), (TokenType::Id, Action::Shift(276)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpNot, Action::Shift(130))].into_iter().collect(), vec![("op-bit-xor".to_owned(), Action::Goto(120)), ("function-call".to_owned(), Action::Goto(134)), ("op-shift".to_owned(), Action::Goto(439)), ("left-value".to_owned(), Action::Goto(278)), ("literal".to_owned(), Action::Goto(135)), ("op-single".to_owned(), Action::Goto(123)), ("op-bit-and".to_owned(), Action::Goto(121)), ("op-bit-or".to_owned(), Action::Goto(127)), ("op-cast".to_owned(), Action::Goto(122))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpDiv, Action::Shift(136)), (TokenType::OpLsEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpMod, Action::Shift(137)), (TokenType::OpLs, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpMul, Action::Shift(138))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(462))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpMod, Action::Shift(137)), (TokenType::OpSub, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpDiv, Action::Shift(136)), (TokenType::OpGtEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpMul, Action::Shift(138)), (TokenType::OpNeq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(463))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpMod, Action::Shift(137)), (TokenType::OpSub, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpDiv, Action::Shift(136)), (TokenType::OpMul, Action::Shift(138)), (TokenType::OpEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(469))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpAssignAdd, Action::Shift(449)), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignMod, Action::Shift(455)), (TokenType::OpAssignBitXor, Action::Shift(453)), (TokenType::OpAssignShiftL, Action::Shift(457)), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignDiv, Action::Shift(454)), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignMul, Action::Shift(456)), (TokenType::OpAssignShiftR, Action::Shift(458)), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssign, Action::Shift(448)), (TokenType::OpAssignBitNot, Action::Shift(451)), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignBitAnd, Action::Shift(450)), (TokenType::OpAssignBitOr, Action::Shift(452)), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAssignSub, Action::Shift(459)), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-assign".to_owned(), "op-assign-add".to_owned(), "op-assign-bit-and".to_owned(), "op-assign-bit-not".to_owned(), "op-assign-bit-or".to_owned(), "op-assign-bit-xor".to_owned(), "op-assign-div".to_owned(), "op-assign-mod".to_owned(), "op-assign-mul".to_owned(), "op-assign-shift-l".to_owned(), "op-assign-shift-r".to_owned(), "op-assign-sub".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(1, "assignment".to_owned(), "assignmentor-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "assignment".to_owned(), "assignmentor-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(1, "expression".to_owned(), "expressionassignment-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "expression".to_owned(), "expressionassignment-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenL, Action::Shift(491)), (TokenType::OpAssignMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitNot, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssign, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-assign".to_owned(), "op-assign-add".to_owned(), "op-assign-bit-and".to_owned(), "op-assign-bit-not".to_owned(), "op-assign-bit-or".to_owned(), "op-assign-bit-xor".to_owned(), "op-assign-div".to_owned(), "op-assign-mod".to_owned(), "op-assign-mul".to_owned(), "op-assign-shift-l".to_owned(), "op-assign-shift-r".to_owned(), "op-assign-sub".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-l".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::ParenR, Action::Shift(427)), (TokenType::Comma, Action::Shift(426))].into_iter().collect(), vec![("_function-call-2".to_owned(), Action::Goto(428))].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literalbool-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literaldecimal-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literalinteger-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitAnd, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "literal".to_owned(), "literalstring-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Shift(466)), (TokenType::OpAnd, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpSub, Action::Shift(467)), (TokenType::OpEq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-addsub".to_owned(), "op-addsubadd-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-addsub-1".to_owned(), Action::Goto(468))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Shift(433)), (TokenType::Comma, Action::Reduce(1, "op-and".to_owned(), "op-andand-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-and".to_owned(), "op-andand-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-and".to_owned(), "op-andand-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-and-1".to_owned(), Action::Goto(434))].into_iter().collect(), vec!["comma".to_owned(), "op-and".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftL, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Shift(440)), (TokenType::OpEq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-and-1".to_owned(), Action::Goto(441))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Shift(460)), (TokenType::OpShiftR, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-or-1".to_owned(), Action::Goto(461))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitXor, Action::Shift(444)), (TokenType::Comma, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-xor-1".to_owned(), Action::Goto(445))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftL, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Shift(437)), (TokenType::OpOr, Action::Reduce(1, "op-cast".to_owned(), "op-castcast-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-cast-1".to_owned(), Action::Goto(438))].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned())), (TokenType::OpLs, Action::Shift(48)), (TokenType::OpLsEq, Action::Shift(49)), (TokenType::OpAnd, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned())), (TokenType::OpNeq, Action::Shift(50)), (TokenType::OpGtEq, Action::Shift(47)), (TokenType::ParenR, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-cmp".to_owned(), "op-cmpcmp-reduce-0".to_owned())), (TokenType::OpGt, Action::Shift(46)), (TokenType::OpEq, Action::Shift(45))].into_iter().collect(), vec![("op-cmp-op".to_owned(), Action::Goto(442)), ("_op-cmp-1".to_owned(), Action::Goto(443))].into_iter().collect(), vec!["comma".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Shift(482)), (TokenType::OpMod, Action::Shift(483)), (TokenType::OpLsEq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpMul, Action::Shift(484)), (TokenType::OpNeq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(485))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(1, "op-or".to_owned(), "op-oror-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "op-or".to_owned(), "op-oror-reduce-0".to_owned())), (TokenType::OpOr, Action::Shift(446))].into_iter().collect(), vec![("_op-or-1".to_owned(), Action::Goto(447))].into_iter().collect(), vec!["comma".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Shift(472)), (TokenType::OpShiftR, Action::Shift(473)), (TokenType::OpLs, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-shift".to_owned(), "op-shiftshift-l-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-shift-1".to_owned(), Action::Goto(474))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::ParenL, Action::Shift(316)), (TokenType::Id, Action::Shift(475)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpSub, Action::Shift(315))].into_iter().collect(), vec![("literal".to_owned(), Action::Goto(318)), ("left-value".to_owned(), Action::Goto(477)), ("op-single".to_owned(), Action::Goto(478)), ("function-call".to_owned(), Action::Goto(317))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::ParenL, Action::Shift(316)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::Id, Action::Shift(475)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::OpNot, Action::Shift(314))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(476)), ("left-value".to_owned(), Action::Goto(477)), ("function-call".to_owned(), Action::Goto(317)), ("literal".to_owned(), Action::Goto(318))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(301)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::Id, Action::Shift(475)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralInteger, Action::Shift(300))].into_iter().collect(), vec![("left-value".to_owned(), Action::Goto(477)), ("literal".to_owned(), Action::Goto(318)), ("op-single".to_owned(), Action::Goto(479)), ("function-call".to_owned(), Action::Goto(317))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::ParenL, Action::Shift(316)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::Id, Action::Shift(475))].into_iter().collect(), vec![("function-call".to_owned(), Action::Goto(317)), ("left-value".to_owned(), Action::Goto(477)), ("op-single".to_owned(), Action::Goto(480)), ("literal".to_owned(), Action::Goto(318))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(132)), (TokenType::LiteralBool, Action::Shift(114)), (TokenType::Id, Action::Shift(113)), (TokenType::LiteralString, Action::Shift(117)), (TokenType::OpAdd, Action::Shift(128)), (TokenType::OpBitNot, Action::Shift(129)), (TokenType::OpSub, Action::Shift(131)), (TokenType::OpNot, Action::Shift(130)), (TokenType::LiteralInteger, Action::Shift(116)), (TokenType::LiteralDecimal, Action::Shift(115))].into_iter().collect(), vec![("op-bit-or".to_owned(), Action::Goto(127)), ("function-call".to_owned(), Action::Goto(134)), ("op-and".to_owned(), Action::Goto(126)), ("op-single".to_owned(), Action::Goto(123)), ("op-or".to_owned(), Action::Goto(111)), ("left-value".to_owned(), Action::Goto(110)), ("op-cast".to_owned(), Action::Goto(122)), ("assignment".to_owned(), Action::Goto(112)), ("op-addsub".to_owned(), Action::Goto(124)), ("op-muldivmod".to_owned(), Action::Goto(118)), ("literal".to_owned(), Action::Goto(135)), ("op-bit-xor".to_owned(), Action::Goto(120)), ("op-shift".to_owned(), Action::Goto(125)), ("op-bit-and".to_owned(), Action::Goto(121)), ("expression".to_owned(), Action::Goto(481)), ("op-cmp".to_owned(), Action::Goto(119))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-single".to_owned(), "op-singlefunction-call-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singleliteral-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(316)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpNot, Action::Shift(314)), (TokenType::OpSub, Action::Shift(315)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::Id, Action::Shift(295)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::ParenR, Action::Shift(486)), (TokenType::LiteralDecimal, Action::Shift(299))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(306)), ("op-or".to_owned(), Action::Goto(293)), ("expression".to_owned(), Action::Goto(487)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("op-and".to_owned(), Action::Goto(310)), ("function-call".to_owned(), Action::Goto(317)), ("op-single".to_owned(), Action::Goto(307)), ("literal".to_owned(), Action::Goto(318)), ("op-cmp".to_owned(), Action::Goto(303)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-shift".to_owned(), Action::Goto(309)), ("op-addsub".to_owned(), Action::Goto(308)), ("assignment".to_owned(), Action::Goto(294)), ("left-value".to_owned(), Action::Goto(292)), ("op-bit-and".to_owned(), Action::Goto(305))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(490))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(489))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::KeywordFor, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(464))].into_iter().collect(), vec![].into_iter().collect(), vec!["id".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Shift(102)), (TokenType::OpNot, Action::Shift(104)), (TokenType::ParenL, Action::Shift(106)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpSub, Action::Shift(105)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralDecimal, Action::Shift(89))].into_iter().collect(), vec![("op-cmp".to_owned(), Action::Goto(93)), ("op-cast".to_owned(), Action::Goto(96)), ("literal".to_owned(), Action::Goto(108)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-single".to_owned(), Action::Goto(97)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-addsub".to_owned(), Action::Goto(98)), ("left-value".to_owned(), Action::Goto(83)), ("op-and".to_owned(), Action::Goto(100)), ("assignment".to_owned(), Action::Goto(85)), ("op-shift".to_owned(), Action::Goto(99)), ("op-or".to_owned(), Action::Goto(84)), ("expression".to_owned(), Action::Goto(488)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("function-call".to_owned(), Action::Goto(107))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::KeywordIn, Action::Shift(471))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-in".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::Comma, Action::Shift(322)), (TokenType::OpBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordIn, Action::Shift(493)), (TokenType::BraceL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitNot, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssign, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenL, Action::Shift(271))].into_iter().collect(), vec![("_for-statement-1".to_owned(), Action::Goto(494))].into_iter().collect(), vec!["brace-l".to_owned(), "comma".to_owned(), "keyword-as".to_owned(), "keyword-in".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-assign".to_owned(), "op-assign-add".to_owned(), "op-assign-bit-and".to_owned(), "op-assign-bit-not".to_owned(), "op-assign-bit-or".to_owned(), "op-assign-bit-xor".to_owned(), "op-assign-div".to_owned(), "op-assign-mod".to_owned(), "op-assign-mul".to_owned(), "op-assign-shift-l".to_owned(), "op-assign-shift-r".to_owned(), "op-assign-sub".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(149))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(492))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(2, "for-statement".to_owned(), "for-statementloop-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceR, Action::Reduce(2, "_statement-list-1".to_owned(), "_statement-list-1_statement-list-1-statement-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-r".to_owned()]),
		(vec![(TokenType::KeywordFor, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceR, Action::Shift(470))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-r".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "_op-or-1".to_owned(), "_op-or-1_op-or-1-or-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["semicolon".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(3, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::Semicolon, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-and".to_owned(), "op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpBitXor, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-add-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-and-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Shift(188)), (TokenType::OpOr, Action::Reduce(2, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-and-1".to_owned(), Action::Goto(499))].into_iter().collect(), vec!["brace-l".to_owned(), "op-and".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-mul-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-div-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-not-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-or-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Shift(212)), (TokenType::OpMul, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-cast-1".to_owned(), Action::Goto(501))].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-shift-r-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Shift(204)), (TokenType::OpNeq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-xor-1".to_owned(), Action::Goto(505))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Shift(202)), (TokenType::OpBitOr, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-and-1".to_owned(), Action::Goto(510))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-mod-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-xor-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-shift-l-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-sub-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Shift(206)), (TokenType::OpAnd, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-or-1".to_owned(), Action::Goto(507))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpMul, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpSub, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(2, "_op-or-1".to_owned(), "_op-or-1_op-or-1-or-reduce-0".to_owned())), (TokenType::OpOr, Action::Shift(208))].into_iter().collect(), vec![("_op-or-1".to_owned(), Action::Goto(497))].into_iter().collect(), vec!["brace-l".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpSub, Action::Shift(216)), (TokenType::OpNeq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpAdd, Action::Shift(215)), (TokenType::OpGtEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-addsub-1".to_owned(), Action::Goto(515))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned())), (TokenType::OpNeq, Action::Shift(50)), (TokenType::OpGt, Action::Shift(46)), (TokenType::OpGtEq, Action::Shift(47)), (TokenType::OpLs, Action::Shift(48)), (TokenType::OpEq, Action::Shift(45)), (TokenType::OpOr, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Shift(49)), (TokenType::BraceL, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned()))].into_iter().collect(), vec![("op-cmp-op".to_owned(), Action::Goto(210)), ("_op-cmp-1".to_owned(), Action::Goto(500))].into_iter().collect(), vec!["brace-l".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Shift(225)), (TokenType::OpOr, Action::Reduce(2, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-and-1".to_owned(), Action::Goto(498))].into_iter().collect(), vec!["op-and".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Shift(215)), (TokenType::OpEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpSub, Action::Shift(216)), (TokenType::OpAnd, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-addsub-1".to_owned(), Action::Goto(514))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-add-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-and-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-not-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Shift(249)), (TokenType::OpMod, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-cast-1".to_owned(), Action::Goto(503))].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-or-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-xor-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-mod-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-div-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-shift-l-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::KeywordIf, Action::Shift(9)), (TokenType::BraceL, Action::Shift(32))].into_iter().collect(), vec![("if-statement".to_owned(), Action::Goto(550)), ("scope-statement".to_owned(), Action::Goto(551))].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-if".to_owned()]),
		(vec![(TokenType::OpSub, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::OpBitNot, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::OpNot, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::ParenL, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::KeywordIf, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::KeywordFor, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::Id, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::Eof, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::LiteralString, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::LiteralBool, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::LiteralInteger, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-mul-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::OpShiftL, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Shift(242)), (TokenType::OpGtEq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-and-1".to_owned(), Action::Goto(508))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Shift(239)), (TokenType::OpMul, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Shift(240))].into_iter().collect(), vec![("_op-shift-1".to_owned(), Action::Goto(516))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpBitAnd, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-sub-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-shift-r-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Shift(239)), (TokenType::OpAnd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Shift(240))].into_iter().collect(), vec![("_op-shift-1".to_owned(), Action::Goto(517))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpSub, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Shift(247)), (TokenType::OpGt, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-xor-1".to_owned(), Action::Goto(506))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpMul, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Shift(251)), (TokenType::OpGt, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-or-1".to_owned(), Action::Goto(511))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpSub, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGt, Action::Shift(46)), (TokenType::OpOr, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Shift(49)), (TokenType::OpAnd, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned())), (TokenType::OpEq, Action::Shift(45)), (TokenType::OpNeq, Action::Shift(50)), (TokenType::ParenR, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned())), (TokenType::OpLs, Action::Shift(48)), (TokenType::OpGtEq, Action::Shift(47))].into_iter().collect(), vec![("_op-cmp-1".to_owned(), Action::Goto(504)), ("op-cmp-op".to_owned(), Action::Goto(254))].into_iter().collect(), vec!["op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpOr, Action::Shift(256)), (TokenType::ParenR, Action::Reduce(2, "_op-or-1".to_owned(), "_op-or-1_op-or-1-or-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-or-1".to_owned(), Action::Goto(502))].into_iter().collect(), vec!["op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpMod, Action::Shift(259)), (TokenType::BraceL, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpDiv, Action::Shift(258)), (TokenType::OpMul, Action::Shift(260)), (TokenType::OpSub, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(538))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpAssignDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenL, Action::Shift(271)), (TokenType::OpShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordIn, Action::Shift(559)), (TokenType::OpGt, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitNot, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssign, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::Comma, Action::Shift(322)), (TokenType::OpBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned()))].into_iter().collect(), vec![("_for-statement-1".to_owned(), Action::Goto(560))].into_iter().collect(), vec!["brace-l".to_owned(), "comma".to_owned(), "keyword-as".to_owned(), "keyword-in".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-assign".to_owned(), "op-assign-add".to_owned(), "op-assign-bit-and".to_owned(), "op-assign-bit-not".to_owned(), "op-assign-bit-or".to_owned(), "op-assign-bit-xor".to_owned(), "op-assign-div".to_owned(), "op-assign-mod".to_owned(), "op-assign-mul".to_owned(), "op-assign-shift-l".to_owned(), "op-assign-shift-r".to_owned(), "op-assign-sub".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(32))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(542))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::KeywordFor, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpDiv, Action::Shift(258)), (TokenType::OpGtEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpMul, Action::Shift(260)), (TokenType::OpOr, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpMod, Action::Shift(259)), (TokenType::BraceL, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(539))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpMod, Action::Shift(259)), (TokenType::OpEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpMul, Action::Shift(260)), (TokenType::OpDiv, Action::Shift(258)), (TokenType::OpLs, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(541))].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpSub, Action::Shift(268)), (TokenType::OpGt, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpAdd, Action::Shift(267)), (TokenType::OpAnd, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-addsub-1".to_owned(), Action::Goto(535))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpSub, Action::Shift(268)), (TokenType::OpGtEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpAdd, Action::Shift(267)), (TokenType::OpLsEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-addsub-1".to_owned(), Action::Goto(534))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::Id, Action::Shift(295)), (TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralBool, Action::Shift(298))].into_iter().collect(), vec![("expression".to_owned(), Action::Goto(540)), ("op-shift".to_owned(), Action::Goto(309)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-cast".to_owned(), Action::Goto(306)), ("op-single".to_owned(), Action::Goto(307)), ("op-addsub".to_owned(), Action::Goto(308)), ("function-call".to_owned(), Action::Goto(317)), ("op-bit-and".to_owned(), Action::Goto(305)), ("left-value".to_owned(), Action::Goto(292)), ("op-and".to_owned(), Action::Goto(310)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-or".to_owned(), Action::Goto(293)), ("op-cmp".to_owned(), Action::Goto(303)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("literal".to_owned(), Action::Goto(318)), ("assignment".to_owned(), Action::Goto(294))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpShiftR, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpBitXor, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::ParenR, Action::Shift(509))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Shift(274)), (TokenType::OpLs, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Shift(273)), (TokenType::OpDiv, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-shift-1".to_owned(), Action::Goto(536))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLs, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Shift(274)), (TokenType::OpSub, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Shift(273)), (TokenType::OpNeq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-shift-1".to_owned(), Action::Goto(537))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::ParenR, Action::Shift(512)), (TokenType::Comma, Action::Shift(426))].into_iter().collect(), vec![("_function-call-2".to_owned(), Action::Goto(513))].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Shift(312)), (TokenType::ParenL, Action::Shift(316)), (TokenType::Id, Action::Shift(475)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpNot, Action::Shift(314)), (TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralDecimal, Action::Shift(299))].into_iter().collect(), vec![("function-call".to_owned(), Action::Goto(317)), ("left-value".to_owned(), Action::Goto(477)), ("literal".to_owned(), Action::Goto(318)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-cmp".to_owned(), Action::Goto(543)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-cast".to_owned(), Action::Goto(306)), ("op-single".to_owned(), Action::Goto(307)), ("op-addsub".to_owned(), Action::Goto(308)), ("op-shift".to_owned(), Action::Goto(309))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(2, "op-and".to_owned(), "op-andand-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-and".to_owned(), "op-andand-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-and".to_owned(), "op-andand-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Shift(285)), (TokenType::OpAnd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpMul, Action::Shift(287)), (TokenType::OpMod, Action::Shift(286)), (TokenType::OpEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(545))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpMul, Action::Shift(287)), (TokenType::OpMod, Action::Shift(286)), (TokenType::OpEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpDiv, Action::Shift(285)), (TokenType::OpOr, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(546))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::KeywordI128, Action::Shift(523)), (TokenType::KeywordF64, Action::Shift(522)), (TokenType::KeywordBool, Action::Shift(519)), (TokenType::KeywordU16, Action::Shift(530)), (TokenType::KeywordI32, Action::Shift(525)), (TokenType::KeywordStr, Action::Shift(528)), (TokenType::KeywordU64, Action::Shift(532)), (TokenType::KeywordF32, Action::Shift(521)), (TokenType::KeywordF16, Action::Shift(520)), (TokenType::KeywordI64, Action::Shift(526)), (TokenType::KeywordI8, Action::Shift(527)), (TokenType::KeywordI16, Action::Shift(524)), (TokenType::KeywordU8, Action::Shift(533)), (TokenType::KeywordU32, Action::Shift(531)), (TokenType::KeywordU128, Action::Shift(529))].into_iter().collect(), vec![("type".to_owned(), Action::Goto(518))].into_iter().collect(), vec!["keyword-bool".to_owned(), "keyword-f16".to_owned(), "keyword-f32".to_owned(), "keyword-f64".to_owned(), "keyword-i128".to_owned(), "keyword-i16".to_owned(), "keyword-i32".to_owned(), "keyword-i64".to_owned(), "keyword-i8".to_owned(), "keyword-str".to_owned(), "keyword-u128".to_owned(), "keyword-u16".to_owned(), "keyword-u32".to_owned(), "keyword-u64".to_owned(), "keyword-u8".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-cast".to_owned(), "op-castcast-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpDiv, Action::Shift(285)), (TokenType::OpMul, Action::Shift(287)), (TokenType::OpMod, Action::Shift(286)), (TokenType::OpLs, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(547))].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(300)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::ParenL, Action::Shift(316)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpSub, Action::Shift(315)), (TokenType::Id, Action::Shift(475)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::OpNot, Action::Shift(314))].into_iter().collect(), vec![("literal".to_owned(), Action::Goto(318)), ("left-value".to_owned(), Action::Goto(477)), ("op-bit-xor".to_owned(), Action::Goto(544)), ("op-cast".to_owned(), Action::Goto(306)), ("op-single".to_owned(), Action::Goto(307)), ("function-call".to_owned(), Action::Goto(317))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-bit-and".to_owned(), "op-bit-andbit-and-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::OpNot, Action::Shift(314)), (TokenType::OpSub, Action::Shift(315)), (TokenType::Id, Action::Shift(475)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpBitNot, Action::Shift(313))].into_iter().collect(), vec![("op-cast".to_owned(), Action::Goto(306)), ("literal".to_owned(), Action::Goto(318)), ("function-call".to_owned(), Action::Goto(317)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("op-addsub".to_owned(), Action::Goto(549)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-shift".to_owned(), Action::Goto(309)), ("op-single".to_owned(), Action::Goto(307)), ("left-value".to_owned(), Action::Goto(477)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-bit-and".to_owned(), Action::Goto(305))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-cmp".to_owned(), "op-cmpcmp-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-and".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(475)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::ParenL, Action::Shift(316))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(307)), ("left-value".to_owned(), Action::Goto(477)), ("function-call".to_owned(), Action::Goto(317)), ("literal".to_owned(), Action::Goto(318)), ("op-cast".to_owned(), Action::Goto(548))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitOr, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-bit-xor".to_owned(), "op-bit-xorbit-xor-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(301)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::Id, Action::Shift(475)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpSub, Action::Shift(315)), (TokenType::ParenL, Action::Shift(316))].into_iter().collect(), vec![("op-muldivmod".to_owned(), Action::Goto(302)), ("op-cmp".to_owned(), Action::Goto(303)), ("op-cast".to_owned(), Action::Goto(306)), ("op-shift".to_owned(), Action::Goto(309)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-and".to_owned(), Action::Goto(553)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-addsub".to_owned(), Action::Goto(308)), ("function-call".to_owned(), Action::Goto(317)), ("literal".to_owned(), Action::Goto(318)), ("op-single".to_owned(), Action::Goto(307)), ("left-value".to_owned(), Action::Goto(477))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(2, "op-or".to_owned(), "op-oror-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-or".to_owned(), "op-oror-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(314)), (TokenType::Id, Action::Shift(295)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::ParenL, Action::Shift(316))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(307)), ("op-or".to_owned(), Action::Goto(293)), ("op-shift".to_owned(), Action::Goto(309)), ("literal".to_owned(), Action::Goto(318)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-cast".to_owned(), Action::Goto(306)), ("op-and".to_owned(), Action::Goto(310)), ("assignment".to_owned(), Action::Goto(554)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("op-cmp".to_owned(), Action::Goto(303)), ("op-bit-and".to_owned(), Action::Goto(305)), ("left-value".to_owned(), Action::Goto(292)), ("function-call".to_owned(), Action::Goto(317)), ("op-addsub".to_owned(), Action::Goto(308)), ("op-bit-or".to_owned(), Action::Goto(311))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpNot, Action::Shift(314)), (TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::Id, Action::Shift(295))].into_iter().collect(), vec![("op-or".to_owned(), Action::Goto(293)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-shift".to_owned(), Action::Goto(309)), ("op-cmp".to_owned(), Action::Goto(303)), ("op-single".to_owned(), Action::Goto(307)), ("function-call".to_owned(), Action::Goto(317)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-cast".to_owned(), Action::Goto(306)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("literal".to_owned(), Action::Goto(318)), ("op-addsub".to_owned(), Action::Goto(308)), ("op-and".to_owned(), Action::Goto(310)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("assignment".to_owned(), Action::Goto(555)), ("left-value".to_owned(), Action::Goto(292))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(316)), (TokenType::Id, Action::Shift(295)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpSub, Action::Shift(315))].into_iter().collect(), vec![("op-cmp".to_owned(), Action::Goto(303)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-single".to_owned(), Action::Goto(307)), ("left-value".to_owned(), Action::Goto(292)), ("function-call".to_owned(), Action::Goto(317)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-shift".to_owned(), Action::Goto(309)), ("op-or".to_owned(), Action::Goto(293)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-addsub".to_owned(), Action::Goto(308)), ("assignment".to_owned(), Action::Goto(556)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("op-cast".to_owned(), Action::Goto(306)), ("literal".to_owned(), Action::Goto(318)), ("op-and".to_owned(), Action::Goto(310))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(301)), (TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::Id, Action::Shift(295)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpSub, Action::Shift(315)), (TokenType::ParenL, Action::Shift(316))].into_iter().collect(), vec![("op-and".to_owned(), Action::Goto(310)), ("op-addsub".to_owned(), Action::Goto(308)), ("op-bit-or".to_owned(), Action::Goto(311)), ("literal".to_owned(), Action::Goto(318)), ("op-shift".to_owned(), Action::Goto(309)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("op-or".to_owned(), Action::Goto(293)), ("op-cmp".to_owned(), Action::Goto(303)), ("op-single".to_owned(), Action::Goto(307)), ("left-value".to_owned(), Action::Goto(292)), ("op-cast".to_owned(), Action::Goto(306)), ("assignment".to_owned(), Action::Goto(557)), ("op-bit-and".to_owned(), Action::Goto(305)), ("function-call".to_owned(), Action::Goto(317)), ("op-bit-xor".to_owned(), Action::Goto(304))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::Id, Action::Shift(295)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpNot, Action::Shift(314)), (TokenType::OpSub, Action::Shift(315))].into_iter().collect(), vec![("function-call".to_owned(), Action::Goto(317)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-addsub".to_owned(), Action::Goto(308)), ("op-or".to_owned(), Action::Goto(293)), ("op-single".to_owned(), Action::Goto(307)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-shift".to_owned(), Action::Goto(309)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-and".to_owned(), Action::Goto(310)), ("op-cast".to_owned(), Action::Goto(306)), ("assignment".to_owned(), Action::Goto(558)), ("left-value".to_owned(), Action::Goto(292)), ("literal".to_owned(), Action::Goto(318)), ("op-cmp".to_owned(), Action::Goto(303))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Shift(313)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::Id, Action::Shift(295)), (TokenType::OpSub, Action::Shift(315))].into_iter().collect(), vec![("op-shift".to_owned(), Action::Goto(309)), ("op-or".to_owned(), Action::Goto(293)), ("assignment".to_owned(), Action::Goto(562)), ("op-addsub".to_owned(), Action::Goto(308)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("op-and".to_owned(), Action::Goto(310)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-single".to_owned(), Action::Goto(307)), ("literal".to_owned(), Action::Goto(318)), ("left-value".to_owned(), Action::Goto(292)), ("op-cmp".to_owned(), Action::Goto(303)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-cast".to_owned(), Action::Goto(306)), ("function-call".to_owned(), Action::Goto(317))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(316)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::Id, Action::Shift(295)), (TokenType::OpNot, Action::Shift(314))].into_iter().collect(), vec![("op-bit-or".to_owned(), Action::Goto(311)), ("function-call".to_owned(), Action::Goto(317)), ("assignment".to_owned(), Action::Goto(563)), ("op-shift".to_owned(), Action::Goto(309)), ("op-addsub".to_owned(), Action::Goto(308)), ("op-cast".to_owned(), Action::Goto(306)), ("op-and".to_owned(), Action::Goto(310)), ("op-or".to_owned(), Action::Goto(293)), ("left-value".to_owned(), Action::Goto(292)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-single".to_owned(), Action::Goto(307)), ("literal".to_owned(), Action::Goto(318)), ("op-cmp".to_owned(), Action::Goto(303))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::Id, Action::Shift(295)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpNot, Action::Shift(314))].into_iter().collect(), vec![("assignment".to_owned(), Action::Goto(566)), ("left-value".to_owned(), Action::Goto(292)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("op-cmp".to_owned(), Action::Goto(303)), ("op-cast".to_owned(), Action::Goto(306)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-and".to_owned(), Action::Goto(310)), ("op-addsub".to_owned(), Action::Goto(308)), ("literal".to_owned(), Action::Goto(318)), ("op-shift".to_owned(), Action::Goto(309)), ("op-single".to_owned(), Action::Goto(307)), ("function-call".to_owned(), Action::Goto(317)), ("op-or".to_owned(), Action::Goto(293)), ("op-bit-and".to_owned(), Action::Goto(305))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(301)), (TokenType::ParenL, Action::Shift(316)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::Id, Action::Shift(295)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpSub, Action::Shift(315)), (TokenType::OpNot, Action::Shift(314))].into_iter().collect(), vec![("op-and".to_owned(), Action::Goto(310)), ("left-value".to_owned(), Action::Goto(292)), ("assignment".to_owned(), Action::Goto(565)), ("op-cmp".to_owned(), Action::Goto(303)), ("op-single".to_owned(), Action::Goto(307)), ("op-addsub".to_owned(), Action::Goto(308)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("literal".to_owned(), Action::Goto(318)), ("op-bit-or".to_owned(), Action::Goto(311)), ("function-call".to_owned(), Action::Goto(317)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-cast".to_owned(), Action::Goto(306)), ("op-or".to_owned(), Action::Goto(293)), ("op-shift".to_owned(), Action::Goto(309))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(295)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::OpNot, Action::Shift(314)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpBitNot, Action::Shift(313))].into_iter().collect(), vec![("op-muldivmod".to_owned(), Action::Goto(302)), ("op-or".to_owned(), Action::Goto(293)), ("left-value".to_owned(), Action::Goto(292)), ("assignment".to_owned(), Action::Goto(564)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-cmp".to_owned(), Action::Goto(303)), ("function-call".to_owned(), Action::Goto(317)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-single".to_owned(), Action::Goto(307)), ("op-addsub".to_owned(), Action::Goto(308)), ("op-shift".to_owned(), Action::Goto(309)), ("op-bit-or".to_owned(), Action::Goto(311)), ("literal".to_owned(), Action::Goto(318)), ("op-and".to_owned(), Action::Goto(310)), ("op-cast".to_owned(), Action::Goto(306))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::ParenL, Action::Shift(316)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::Id, Action::Shift(295)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpNot, Action::Shift(314)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::OpSub, Action::Shift(315))].into_iter().collect(), vec![("op-bit-xor".to_owned(), Action::Goto(304)), ("op-addsub".to_owned(), Action::Goto(308)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("literal".to_owned(), Action::Goto(318)), ("op-cmp".to_owned(), Action::Goto(303)), ("assignment".to_owned(), Action::Goto(572)), ("op-shift".to_owned(), Action::Goto(309)), ("op-or".to_owned(), Action::Goto(293)), ("function-call".to_owned(), Action::Goto(317)), ("op-and".to_owned(), Action::Goto(310)), ("left-value".to_owned(), Action::Goto(292)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-cast".to_owned(), Action::Goto(306)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-single".to_owned(), Action::Goto(307))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Shift(312)), (TokenType::Id, Action::Shift(295)), (TokenType::ParenL, Action::Shift(316)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpNot, Action::Shift(314)), (TokenType::OpBitNot, Action::Shift(313))].into_iter().collect(), vec![("op-muldivmod".to_owned(), Action::Goto(302)), ("op-cast".to_owned(), Action::Goto(306)), ("literal".to_owned(), Action::Goto(318)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-or".to_owned(), Action::Goto(293)), ("function-call".to_owned(), Action::Goto(317)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-shift".to_owned(), Action::Goto(309)), ("op-bit-or".to_owned(), Action::Goto(311)), ("assignment".to_owned(), Action::Goto(571)), ("op-addsub".to_owned(), Action::Goto(308)), ("op-single".to_owned(), Action::Goto(307)), ("left-value".to_owned(), Action::Goto(292)), ("op-and".to_owned(), Action::Goto(310)), ("op-cmp".to_owned(), Action::Goto(303))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(301)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpNot, Action::Shift(314)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::OpSub, Action::Shift(315)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::Id, Action::Shift(475))].into_iter().collect(), vec![("op-bit-xor".to_owned(), Action::Goto(304)), ("literal".to_owned(), Action::Goto(318)), ("op-bit-and".to_owned(), Action::Goto(573)), ("op-cast".to_owned(), Action::Goto(306)), ("op-single".to_owned(), Action::Goto(307)), ("function-call".to_owned(), Action::Goto(317)), ("left-value".to_owned(), Action::Goto(477))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-bit-or".to_owned(), "op-bit-orbit-or-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::Comma, Action::Shift(322)), (TokenType::KeywordIn, Action::Reduce(2, "_for-statement-1".to_owned(), "_for-statement-1_for-statement-1-for-each-reduce-0".to_owned()))].into_iter().collect(), vec![("_for-statement-1".to_owned(), Action::Goto(552))].into_iter().collect(), vec!["comma".to_owned(), "keyword-in".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(149)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpNot, Action::Shift(104)), (TokenType::Id, Action::Shift(588))].into_iter().collect(), vec![("op-cmp".to_owned(), Action::Goto(93)), ("op-single".to_owned(), Action::Goto(97)), ("op-cast".to_owned(), Action::Goto(96)), ("literal".to_owned(), Action::Goto(108)), ("function-call".to_owned(), Action::Goto(107)), ("scope-statement".to_owned(), Action::Goto(590)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-and".to_owned(), Action::Goto(100)), ("op-or".to_owned(), Action::Goto(84)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-shift".to_owned(), Action::Goto(99)), ("assignment".to_owned(), Action::Goto(85)), ("left-value".to_owned(), Action::Goto(83)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("expression".to_owned(), Action::Goto(589))].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpNot, Action::Shift(314)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::Id, Action::Shift(475))].into_iter().collect(), vec![("op-bit-or".to_owned(), Action::Goto(311)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-single".to_owned(), Action::Goto(307)), ("left-value".to_owned(), Action::Goto(477)), ("op-shift".to_owned(), Action::Goto(309)), ("literal".to_owned(), Action::Goto(318)), ("op-cast".to_owned(), Action::Goto(306)), ("op-muldivmod".to_owned(), Action::Goto(575)), ("op-bit-and".to_owned(), Action::Goto(305)), ("function-call".to_owned(), Action::Goto(317))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(475)), (TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::OpSub, Action::Shift(315)), (TokenType::ParenL, Action::Shift(316)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::LiteralBool, Action::Shift(298))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(307)), ("literal".to_owned(), Action::Goto(318)), ("op-muldivmod".to_owned(), Action::Goto(577)), ("function-call".to_owned(), Action::Goto(317)), ("left-value".to_owned(), Action::Goto(477)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-cast".to_owned(), Action::Goto(306)), ("op-shift".to_owned(), Action::Goto(309))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-addsub".to_owned(), "op-addsubadd-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::Semicolon, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpNot, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::BraceR, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralBool, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralString, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordIf, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordFor, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::Id, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpBitNot, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::ParenL, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralInteger, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::ParenL, Action::Shift(106)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::Id, Action::Shift(86)), (TokenType::OpNot, Action::Shift(104))].into_iter().collect(), vec![("op-or".to_owned(), Action::Goto(84)), ("op-and".to_owned(), Action::Goto(100)), ("assignment".to_owned(), Action::Goto(85)), ("literal".to_owned(), Action::Goto(108)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-cast".to_owned(), Action::Goto(96)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-cmp".to_owned(), Action::Goto(93)), ("expression".to_owned(), Action::Goto(576)), ("function-call".to_owned(), Action::Goto(107)), ("op-addsub".to_owned(), Action::Goto(98)), ("left-value".to_owned(), Action::Goto(83)), ("op-single".to_owned(), Action::Goto(97)), ("op-shift".to_owned(), Action::Goto(99)), ("op-bit-and".to_owned(), Action::Goto(95))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpNot, Action::Shift(314)), (TokenType::OpSub, Action::Shift(315)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::Id, Action::Shift(475))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(307)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-bit-or".to_owned(), Action::Goto(578)), ("function-call".to_owned(), Action::Goto(317)), ("left-value".to_owned(), Action::Goto(477)), ("op-bit-and".to_owned(), Action::Goto(305)), ("literal".to_owned(), Action::Goto(318)), ("op-cast".to_owned(), Action::Goto(306))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::Id, Action::Shift(475)), (TokenType::ParenL, Action::Shift(316)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpAdd, Action::Shift(312))].into_iter().collect(), vec![("function-call".to_owned(), Action::Goto(317)), ("op-single".to_owned(), Action::Goto(307)), ("left-value".to_owned(), Action::Goto(477)), ("literal".to_owned(), Action::Goto(318)), ("op-cast".to_owned(), Action::Goto(306)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-bit-or".to_owned(), Action::Goto(580))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-shift".to_owned(), "op-shiftshift-l-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenL, Action::Shift(491)), (TokenType::KeywordAs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-l".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-bit-not-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "op-single".to_owned(), "op-singleleft-value-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-add-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-not-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-single".to_owned(), "op-singleunary-sub-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Shift(561))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Shift(312)), (TokenType::ParenL, Action::Shift(316)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpSub, Action::Shift(315)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::Id, Action::Shift(475)), (TokenType::OpBitNot, Action::Shift(313))].into_iter().collect(), vec![("op-single".to_owned(), Action::Goto(307)), ("literal".to_owned(), Action::Goto(318)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-shift".to_owned(), Action::Goto(581)), ("function-call".to_owned(), Action::Goto(317)), ("left-value".to_owned(), Action::Goto(477)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-cast".to_owned(), Action::Goto(306))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(315)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::Id, Action::Shift(475)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::LiteralString, Action::Shift(301)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::OpNot, Action::Shift(314)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpAdd, Action::Shift(312))].into_iter().collect(), vec![("literal".to_owned(), Action::Goto(318)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-single".to_owned(), Action::Goto(307)), ("left-value".to_owned(), Action::Goto(477)), ("function-call".to_owned(), Action::Goto(317)), ("op-bit-and".to_owned(), Action::Goto(305)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-shift".to_owned(), Action::Goto(582)), ("op-cast".to_owned(), Action::Goto(306))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(301)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpNot, Action::Shift(314)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::Id, Action::Shift(475)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::ParenL, Action::Shift(316)), (TokenType::OpSub, Action::Shift(315)), (TokenType::OpAdd, Action::Shift(312))].into_iter().collect(), vec![("op-shift".to_owned(), Action::Goto(583)), ("function-call".to_owned(), Action::Goto(317)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-single".to_owned(), Action::Goto(307)), ("left-value".to_owned(), Action::Goto(477)), ("op-cast".to_owned(), Action::Goto(306)), ("op-bit-or".to_owned(), Action::Goto(311)), ("op-bit-and".to_owned(), Action::Goto(305)), ("literal".to_owned(), Action::Goto(318))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "op-muldivmod".to_owned(), "op-muldivmodmul-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpSub, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Comma, Action::Shift(426)), (TokenType::ParenR, Action::Shift(569))].into_iter().collect(), vec![("_function-call-2".to_owned(), Action::Goto(570))].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(32))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(587))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::KeywordElse, Action::Shift(567)), (TokenType::KeywordFor, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(3, "if-statement".to_owned(), "if-statementif-reduce-0".to_owned()))].into_iter().collect(), vec![("else-statement".to_owned(), Action::Goto(568))].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-else".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(13)), (TokenType::Id, Action::Shift(8)), (TokenType::LiteralDecimal, Action::Shift(11)), (TokenType::OpNot, Action::Shift(27)), (TokenType::ParenL, Action::Shift(29)), (TokenType::BraceR, Action::Shift(591)), (TokenType::OpBitNot, Action::Shift(26)), (TokenType::OpAdd, Action::Shift(25)), (TokenType::OpSub, Action::Shift(28)), (TokenType::BraceL, Action::Shift(149)), (TokenType::LiteralBool, Action::Shift(10)), (TokenType::KeywordFor, Action::Shift(147)), (TokenType::LiteralInteger, Action::Shift(12)), (TokenType::KeywordAs, Action::Shift(146)), (TokenType::KeywordIf, Action::Shift(148))].into_iter().collect(), vec![("statement".to_owned(), Action::Goto(145)), ("op-bit-and".to_owned(), Action::Goto(18)), ("scope-statement".to_owned(), Action::Goto(155)), ("op-single".to_owned(), Action::Goto(20)), ("literal".to_owned(), Action::Goto(31)), ("left-value".to_owned(), Action::Goto(3)), ("op-cast".to_owned(), Action::Goto(19)), ("expression".to_owned(), Action::Goto(152)), ("if-statement".to_owned(), Action::Goto(154)), ("op-or".to_owned(), Action::Goto(4)), ("op-and".to_owned(), Action::Goto(23)), ("_statement-list-1".to_owned(), Action::Goto(156)), ("op-cmp".to_owned(), Action::Goto(16)), ("op-shift".to_owned(), Action::Goto(22)), ("op-muldivmod".to_owned(), Action::Goto(15)), ("op-bit-xor".to_owned(), Action::Goto(17)), ("op-bit-or".to_owned(), Action::Goto(24)), ("function-call".to_owned(), Action::Goto(30)), ("statement-list".to_owned(), Action::Goto(592)), ("for-statement".to_owned(), Action::Goto(153)), ("assignment".to_owned(), Action::Goto(5)), ("op-addsub".to_owned(), Action::Goto(21))].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Shift(301)), (TokenType::LiteralInteger, Action::Shift(300)), (TokenType::OpNot, Action::Shift(314)), (TokenType::LiteralDecimal, Action::Shift(299)), (TokenType::ParenR, Action::Shift(585)), (TokenType::OpAdd, Action::Shift(312)), (TokenType::Id, Action::Shift(295)), (TokenType::OpBitNot, Action::Shift(313)), (TokenType::LiteralBool, Action::Shift(298)), (TokenType::OpSub, Action::Shift(315)), (TokenType::ParenL, Action::Shift(316))].into_iter().collect(), vec![("op-shift".to_owned(), Action::Goto(309)), ("op-bit-and".to_owned(), Action::Goto(305)), ("expression".to_owned(), Action::Goto(586)), ("op-cmp".to_owned(), Action::Goto(303)), ("op-or".to_owned(), Action::Goto(293)), ("op-bit-xor".to_owned(), Action::Goto(304)), ("op-cast".to_owned(), Action::Goto(306)), ("op-bit-or".to_owned(), Action::Goto(311)), ("literal".to_owned(), Action::Goto(318)), ("op-muldivmod".to_owned(), Action::Goto(302)), ("op-single".to_owned(), Action::Goto(307)), ("op-addsub".to_owned(), Action::Goto(308)), ("function-call".to_owned(), Action::Goto(317)), ("left-value".to_owned(), Action::Goto(292)), ("assignment".to_owned(), Action::Goto(294)), ("op-and".to_owned(), Action::Goto(310))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpNot, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(3, "for-statement".to_owned(), "for-statementwhile-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpSub, Action::Shift(105)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::OpNot, Action::Shift(104)), (TokenType::ParenL, Action::Shift(106))].into_iter().collect(), vec![("op-cmp".to_owned(), Action::Goto(93)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-bit-and".to_owned(), Action::Goto(95)), ("function-call".to_owned(), Action::Goto(107)), ("op-addsub".to_owned(), Action::Goto(98)), ("assignment".to_owned(), Action::Goto(85)), ("op-shift".to_owned(), Action::Goto(99)), ("literal".to_owned(), Action::Goto(108)), ("op-and".to_owned(), Action::Goto(100)), ("left-value".to_owned(), Action::Goto(83)), ("op-cast".to_owned(), Action::Goto(96)), ("op-or".to_owned(), Action::Goto(84)), ("op-single".to_owned(), Action::Goto(97)), ("expression".to_owned(), Action::Goto(584))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::KeywordIn, Action::Shift(579))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-in".to_owned()]),
		(vec![(TokenType::KeywordAs, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::KeywordElse, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-else".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceR, Action::Shift(574))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-r".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "_op-or-1".to_owned(), "_op-or-1_op-or-1-or-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(3, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(3, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-and".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::BraceL, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpBitXor, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "_op-or-1".to_owned(), "_op-or-1_op-or-1-or-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::OpLs, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpBitXor, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-and".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpBitAnd, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpDiv, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpShiftR, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpLs, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpLsEq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpGtEq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpMul, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::KeywordAs, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpBitOr, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpBitXor, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpBitAnd, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpAdd, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpOr, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpAnd, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpShiftL, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpEq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpSub, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpNeq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::Semicolon, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpMod, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "semicolon".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLs, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpBitXor, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::ParenR, Action::Shift(593))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned()]),
		(vec![(TokenType::OpSub, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpMul, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Shift(437)), (TokenType::OpBitAnd, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(2, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-cast-1".to_owned(), Action::Goto(598))].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typebool-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typef16-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typef32-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typef64-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei128-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei16-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei32-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei64-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typei8-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typestr-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu128-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typeu16-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu32-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu64-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "type".to_owned(), "typeu8-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLs, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::Comma, Action::Shift(426)), (TokenType::ParenR, Action::Reduce(2, "_function-call-2".to_owned(), "_function-call-2_function-call-2-function-call-reduce-0".to_owned()))].into_iter().collect(), vec![("_function-call-2".to_owned(), Action::Goto(595))].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpSub, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-0".to_owned())), (TokenType::OpAnd, Action::Shift(433))].into_iter().collect(), vec![("_op-and-1".to_owned(), Action::Goto(597))].into_iter().collect(), vec!["comma".to_owned(), "op-and".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLs, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Shift(440)), (TokenType::OpGtEq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-and-1".to_owned(), Action::Goto(603))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpNeq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Shift(444)), (TokenType::OpMod, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-xor-1".to_owned(), Action::Goto(600))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned())), (TokenType::OpLs, Action::Shift(48)), (TokenType::OpGt, Action::Shift(46)), (TokenType::OpNeq, Action::Shift(50)), (TokenType::Comma, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Shift(47)), (TokenType::OpAnd, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned())), (TokenType::OpEq, Action::Shift(45)), (TokenType::ParenR, Action::Reduce(2, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Shift(49))].into_iter().collect(), vec![("op-cmp-op".to_owned(), Action::Goto(442)), ("_op-cmp-1".to_owned(), Action::Goto(599))].into_iter().collect(), vec!["comma".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::KeywordAs, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::Id, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::KeywordIn, Action::Reduce(3, "_for-statement-1".to_owned(), "_for-statement-1_for-statement-1-for-each-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-in".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(2, "_op-or-1".to_owned(), "_op-or-1_op-or-1-or-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-or-1".to_owned(), "_op-or-1_op-or-1-or-reduce-0".to_owned())), (TokenType::OpOr, Action::Shift(446))].into_iter().collect(), vec![("_op-or-1".to_owned(), Action::Goto(596))].into_iter().collect(), vec!["comma".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-add-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-add-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-and-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-and-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-not-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-not-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-or-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-or-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(104)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::ParenL, Action::Shift(106)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::Id, Action::Shift(86))].into_iter().collect(), vec![("op-cmp".to_owned(), Action::Goto(93)), ("op-and".to_owned(), Action::Goto(100)), ("function-call".to_owned(), Action::Goto(107)), ("literal".to_owned(), Action::Goto(108)), ("assignment".to_owned(), Action::Goto(85)), ("expression".to_owned(), Action::Goto(611)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-single".to_owned(), Action::Goto(97)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-shift".to_owned(), Action::Goto(99)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-bit-and".to_owned(), Action::Goto(95)), ("left-value".to_owned(), Action::Goto(83)), ("op-or".to_owned(), Action::Goto(84)), ("op-cast".to_owned(), Action::Goto(96))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::KeywordIn, Action::Shift(606))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-in".to_owned()]),
		(vec![(TokenType::OpMul, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "op-single".to_owned(), "op-singleparen-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-xor-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-bit-xor-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-div-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-div-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-shift-l-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-shift-l-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-mul-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-mul-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-mod-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-mod-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::KeywordIf, Action::Shift(148)), (TokenType::BraceL, Action::Shift(149))].into_iter().collect(), vec![("if-statement".to_owned(), Action::Goto(619)), ("scope-statement".to_owned(), Action::Goto(620))].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-if".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::OpBitNot, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::ParenL, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::LiteralInteger, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::OpNot, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::KeywordIf, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::KeywordFor, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::BraceR, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::Id, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned())), (TokenType::LiteralString, Action::Reduce(4, "if-statement".to_owned(), "if-statementif-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpAdd, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpBitXor, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Shift(594))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-sub-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-sub-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-shift-r-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(3, "assignment".to_owned(), "assignmentassign-shift-r-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpMul, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Shift(460)), (TokenType::OpMod, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-bit-or-1".to_owned(), Action::Goto(604))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordElse, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordIf, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpNot, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::Eof, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralInteger, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralString, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::ParenL, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::Id, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordFor, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpBitNot, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-else".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpAdd, Action::Shift(466)), (TokenType::OpEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpSub, Action::Shift(467)), (TokenType::OpGtEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-addsub-1".to_owned(), Action::Goto(607))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(32))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(613))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned())), (TokenType::OpAdd, Action::Shift(466)), (TokenType::OpSub, Action::Shift(467)), (TokenType::OpEq, Action::Reduce(2, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-addsub-1".to_owned(), Action::Goto(608))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpAnd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Shift(473)), (TokenType::Comma, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Shift(472)), (TokenType::OpLs, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-shift-1".to_owned(), Action::Goto(610))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenL, Action::Shift(106)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::OpNot, Action::Shift(104)), (TokenType::OpSub, Action::Shift(105)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralString, Action::Shift(91))].into_iter().collect(), vec![("op-muldivmod".to_owned(), Action::Goto(92)), ("left-value".to_owned(), Action::Goto(83)), ("literal".to_owned(), Action::Goto(108)), ("expression".to_owned(), Action::Goto(612)), ("op-addsub".to_owned(), Action::Goto(98)), ("op-bit-and".to_owned(), Action::Goto(95)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-or".to_owned(), Action::Goto(84)), ("assignment".to_owned(), Action::Goto(85)), ("op-shift".to_owned(), Action::Goto(99)), ("op-cast".to_owned(), Action::Goto(96)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-and".to_owned(), Action::Goto(100)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("function-call".to_owned(), Action::Goto(107)), ("op-single".to_owned(), Action::Goto(97))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Shift(472)), (TokenType::OpShiftR, Action::Shift(473)), (TokenType::OpOr, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-shift-1".to_owned(), Action::Goto(609))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpDiv, Action::Shift(482)), (TokenType::OpGt, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpMod, Action::Shift(483)), (TokenType::OpMul, Action::Shift(484)), (TokenType::OpAnd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(614))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpMul, Action::Shift(484)), (TokenType::OpNeq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpMod, Action::Shift(483)), (TokenType::OpGtEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpDiv, Action::Shift(482)), (TokenType::Comma, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(615))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpMod, Action::Shift(483)), (TokenType::OpEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpDiv, Action::Shift(482)), (TokenType::OpLsEq, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpMul, Action::Shift(484)), (TokenType::OpGt, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(2, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-0".to_owned()))].into_iter().collect(), vec![("_op-muldivmod-1".to_owned(), Action::Goto(616))].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(149))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(617))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::OpMul, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::Comma, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpGt, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::ParenR, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "function-call".to_owned(), "function-callfunction-call-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Shift(601)), (TokenType::Comma, Action::Shift(426))].into_iter().collect(), vec![("_function-call-2".to_owned(), Action::Goto(602))].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::LiteralBool, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::Comma, Action::Shift(322)), (TokenType::BraceL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLsEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitAnd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftR, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::ParenL, Action::Shift(271)), (TokenType::OpAssignBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpNeq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpLs, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::KeywordIn, Action::Shift(621)), (TokenType::OpAssign, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignSub, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMod, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpBitXor, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignBitNot, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpMul, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpOr, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignDiv, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAssignShiftL, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned())), (TokenType::OpGtEq, Action::Reduce(1, "left-value".to_owned(), "left-valueid-reduce-0".to_owned()))].into_iter().collect(), vec![("_for-statement-1".to_owned(), Action::Goto(622))].into_iter().collect(), vec!["brace-l".to_owned(), "comma".to_owned(), "keyword-as".to_owned(), "keyword-in".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-assign".to_owned(), "op-assign-add".to_owned(), "op-assign-bit-and".to_owned(), "op-assign-bit-not".to_owned(), "op-assign-bit-or".to_owned(), "op-assign-bit-xor".to_owned(), "op-assign-div".to_owned(), "op-assign-mod".to_owned(), "op-assign-mul".to_owned(), "op-assign-shift-l".to_owned(), "op-assign-shift-r".to_owned(), "op-assign-sub".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(149))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(618))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::KeywordFor, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(4, "for-statement".to_owned(), "for-statementlabeled-loop-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceR, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::KeywordElse, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(2, "scope-statement".to_owned(), "scope-statementscope-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-else".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceR, Action::Shift(605))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-r".to_owned()]),
		(vec![(TokenType::OpBitAnd, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpGtEq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpShiftL, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpAdd, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpLs, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpOr, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpLsEq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpDiv, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpSub, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpGt, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpNeq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpBitOr, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::BraceL, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpMul, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpShiftR, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpEq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpMod, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::KeywordAs, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpAnd, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpBitXor, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned()]),
		(vec![(TokenType::OpBitXor, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpEq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpShiftR, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::ParenR, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpAnd, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpLs, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpShiftL, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpBitAnd, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpBitOr, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpGtEq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpOr, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpGt, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::KeywordAs, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpMul, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpLsEq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpAdd, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpDiv, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpSub, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpMod, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpNeq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "_function-call-2".to_owned(), "_function-call-2_function-call-2-function-call-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "_op-or-1".to_owned(), "_op-or-1_op-or-1-or-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(3, "_op-or-1".to_owned(), "_op-or-1_op-or-1-or-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(3, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-and-1".to_owned(), "_op-and-1_op-and-1-and-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpMod, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpBitXor, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-cast-1".to_owned(), "_op-cast-1_op-cast-1-cast-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Comma, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-cmp-1".to_owned(), "_op-cmp-1_op-cmp-1-cmp-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-and".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(3, "_op-bit-xor-1".to_owned(), "_op-bit-xor-1_op-bit-xor-1-bit-xor-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLs, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpBitAnd, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpBitXor, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(4, "function-call".to_owned(), "function-callfunction-call-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Shift(623))].into_iter().collect(), vec![].into_iter().collect(), vec!["paren-r".to_owned()]),
		(vec![(TokenType::OpShiftL, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpBitOr, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-bit-and-1".to_owned(), "_op-bit-and-1_op-bit-and-1-bit-and-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-or".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGtEq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpShiftR, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpShiftL, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(3, "_op-bit-or-1".to_owned(), "_op-bit-or-1_op-bit-or-1-bit-or-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::KeywordElse, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpNot, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordIf, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralInteger, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::Id, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpBitNot, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralBool, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::BraceR, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::LiteralString, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::ParenL, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned())), (TokenType::KeywordFor, Action::Reduce(3, "scope-statement".to_owned(), "scope-statementscope-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-else".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpBitNot, Action::Shift(103)), (TokenType::OpNot, Action::Shift(104)), (TokenType::Id, Action::Shift(86)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpSub, Action::Shift(105))].into_iter().collect(), vec![("expression".to_owned(), Action::Goto(625)), ("op-bit-and".to_owned(), Action::Goto(95)), ("left-value".to_owned(), Action::Goto(83)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("assignment".to_owned(), Action::Goto(85)), ("op-cast".to_owned(), Action::Goto(96)), ("op-or".to_owned(), Action::Goto(84)), ("op-and".to_owned(), Action::Goto(100)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-addsub".to_owned(), Action::Goto(98)), ("literal".to_owned(), Action::Goto(108)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-shift".to_owned(), Action::Goto(99)), ("op-single".to_owned(), Action::Goto(97)), ("function-call".to_owned(), Action::Goto(107))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpOr, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-add-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::ParenR, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(3, "_op-addsub-1".to_owned(), "_op-addsub-1_op-addsub-1-sub-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLsEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-r-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpSub, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpMod, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpDiv, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpMul, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-shift-1".to_owned(), "_op-shift-1_op-shift-1-shift-l-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(32))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(628))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(149))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(627))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::LiteralInteger, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::ParenL, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::Id, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::KeywordFor, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::Eof, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::OpNot, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::LiteralBool, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::OpBitNot, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::KeywordIf, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-div-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpLs, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpGt, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mod-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::OpGt, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpNeq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::ParenR, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpLs, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpLsEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::Comma, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpAnd, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpOr, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned())), (TokenType::OpGtEq, Action::Reduce(3, "_op-muldivmod-1".to_owned(), "_op-muldivmod-1_op-muldivmod-1-mul-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(5, "for-statement".to_owned(), "for-statementfor-each-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::KeywordFor, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(5, "for-statement".to_owned(), "for-statementlabeled-while-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::KeywordFor, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-if-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::ParenL, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(2, "else-statement".to_owned(), "else-statementelse-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpSub, Action::Shift(105)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::ParenL, Action::Shift(106)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::Id, Action::Shift(86))].into_iter().collect(), vec![("literal".to_owned(), Action::Goto(108)), ("left-value".to_owned(), Action::Goto(83)), ("op-cmp".to_owned(), Action::Goto(93)), ("op-cast".to_owned(), Action::Goto(96)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-single".to_owned(), Action::Goto(97)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-and".to_owned(), Action::Goto(100)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-addsub".to_owned(), Action::Goto(98)), ("function-call".to_owned(), Action::Goto(107)), ("op-shift".to_owned(), Action::Goto(99)), ("expression".to_owned(), Action::Goto(626)), ("op-or".to_owned(), Action::Goto(84)), ("assignment".to_owned(), Action::Goto(85)), ("op-bit-and".to_owned(), Action::Goto(95))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::KeywordIn, Action::Shift(624))].into_iter().collect(), vec![].into_iter().collect(), vec!["keyword-in".to_owned()]),
		(vec![(TokenType::OpLs, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpNeq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::Comma, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpBitOr, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpGt, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::ParenR, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpAnd, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpBitAnd, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpEq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpMod, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpShiftL, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpSub, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpLsEq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpOr, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpBitXor, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpDiv, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpShiftR, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpGtEq, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpMul, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::KeywordAs, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned())), (TokenType::OpAdd, Action::Reduce(5, "function-call".to_owned(), "function-callfunction-call-reduce-2".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["comma".to_owned(), "keyword-as".to_owned(), "op-add".to_owned(), "op-and".to_owned(), "op-bit-and".to_owned(), "op-bit-or".to_owned(), "op-bit-xor".to_owned(), "op-div".to_owned(), "op-eq".to_owned(), "op-gt".to_owned(), "op-gt-eq".to_owned(), "op-ls".to_owned(), "op-ls-eq".to_owned(), "op-mod".to_owned(), "op-mul".to_owned(), "op-neq".to_owned(), "op-or".to_owned(), "op-shift-l".to_owned(), "op-shift-r".to_owned(), "op-sub".to_owned(), "paren-r".to_owned()]),
		(vec![(TokenType::Id, Action::Shift(86)), (TokenType::OpSub, Action::Shift(105)), (TokenType::OpNot, Action::Shift(104)), (TokenType::LiteralDecimal, Action::Shift(89)), (TokenType::LiteralString, Action::Shift(91)), (TokenType::LiteralInteger, Action::Shift(90)), (TokenType::LiteralBool, Action::Shift(88)), (TokenType::OpAdd, Action::Shift(102)), (TokenType::OpBitNot, Action::Shift(103)), (TokenType::ParenL, Action::Shift(106))].into_iter().collect(), vec![("op-bit-and".to_owned(), Action::Goto(95)), ("left-value".to_owned(), Action::Goto(83)), ("assignment".to_owned(), Action::Goto(85)), ("op-bit-xor".to_owned(), Action::Goto(94)), ("op-or".to_owned(), Action::Goto(84)), ("op-bit-or".to_owned(), Action::Goto(101)), ("op-and".to_owned(), Action::Goto(100)), ("expression".to_owned(), Action::Goto(629)), ("op-shift".to_owned(), Action::Goto(99)), ("op-muldivmod".to_owned(), Action::Goto(92)), ("op-cmp".to_owned(), Action::Goto(93)), ("function-call".to_owned(), Action::Goto(107)), ("op-cast".to_owned(), Action::Goto(96)), ("op-single".to_owned(), Action::Goto(97)), ("literal".to_owned(), Action::Goto(108)), ("op-addsub".to_owned(), Action::Goto(98))].into_iter().collect(), vec!["id".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(32))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(631))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(149))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(630))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::OpNot, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::KeywordFor, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::ParenL, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::OpBitNot, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::LiteralBool, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::LiteralString, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::Id, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::KeywordIf, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::LiteralInteger, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned())), (TokenType::BraceR, Action::Reduce(6, "for-statement".to_owned(), "for-statementfor-each-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::OpNot, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::Eof, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::Id, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::BraceL, Action::Shift(149))].into_iter().collect(), vec![("scope-statement".to_owned(), Action::Goto(632))].into_iter().collect(), vec!["brace-l".to_owned()]),
		(vec![(TokenType::Id, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::LiteralString, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::OpSub, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::LiteralInteger, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::BraceR, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::OpNot, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::KeywordIf, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::BraceL, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::ParenL, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::KeywordAs, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::KeywordFor, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::LiteralBool, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::OpBitNot, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned())), (TokenType::OpAdd, Action::Reduce(7, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-0".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::LiteralString, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::LiteralBool, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::Id, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::LiteralInteger, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::OpBitNot, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::OpNot, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::Eof, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::KeywordFor, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::ParenL, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::KeywordIf, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()]),
		(vec![(TokenType::KeywordFor, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::LiteralBool, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::KeywordIf, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::LiteralDecimal, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::LiteralInteger, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::OpSub, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::OpAdd, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::Id, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::KeywordAs, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::BraceR, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::ParenL, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::OpNot, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::LiteralString, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::BraceL, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned())), (TokenType::OpBitNot, Action::Reduce(8, "for-statement".to_owned(), "for-statementlabeled-for-each-reduce-1".to_owned()))].into_iter().collect(), vec![].into_iter().collect(), vec!["brace-l".to_owned(), "brace-r".to_owned(), "id".to_owned(), "keyword-as".to_owned(), "keyword-for".to_owned(), "keyword-if".to_owned(), "literal-bool".to_owned(), "literal-decimal".to_owned(), "literal-integer".to_owned(), "literal-string".to_owned(), "op-add".to_owned(), "op-bit-not".to_owned(), "op-not".to_owned(), "op-sub".to_owned(), "paren-l".to_owned()])
	];
}

pub fn parse(mut lexer: Lexer) -> Result<AST, String> {
	let mut state = 0;
	let mut stack: Vec<StackItem> = vec![StackItem::State(state)];

	let mut next_token = || loop {
		let token = lexer.next();

		if token.token_type != TokenType::Comment {
			return token;
		}
	};

	let mut token = next_token();

	loop {
		state = match stack.last().unwrap() {
			&StackItem::State(state) => state,
			_ => unreachable!(),
		};

		let action = match action_table[state].0.get(&token.token_type) {
			Some(action) => action,
			None => {
				return Err(format!(
					"unexpected token; got {:#?}, expected one of {:#?}",
					token,
					action_table[state].2
				));
			}
		};

		match action {
			Action::Accept => {
				stack.pop();
				return Ok(match stack.pop().unwrap() {
					StackItem::AST(ast) => raw_ast_to_ast(ast),
					_ => unreachable!(),
				});
			}
			Action::Goto(..) => unreachable!(),
			&Action::Shift(next) => {
				stack.push(StackItem::AST(build_ast_terminal(token)));
				stack.push(StackItem::State(next));
				token = next_token();
			}
			Action::Reduce(count, name, reduce_name) => {
				let child_asts = stack
					.split_off(stack.len() - count * 2)
					.into_iter()
					.filter(|item| match item {
						StackItem::AST(..) => true,
						_ => false,
					})
					.map(|item| match item {
						StackItem::AST(ast) => ast,
						_ => unreachable!(),
					}).collect::<Vec<_>>();
				let ast = build_ast_nonterminal(reduce_name, child_asts);

				state = match stack.last().unwrap() {
					&StackItem::State(state) => state,
					_ => unreachable!(),
				};

				stack.push(StackItem::AST(ast));
				stack.push(StackItem::State(
					match action_table[state].1.get(name).unwrap() {
						&Action::Goto(next) => next,
						_ => unreachable!(),
					}
				));
			}
		}
	}
}
